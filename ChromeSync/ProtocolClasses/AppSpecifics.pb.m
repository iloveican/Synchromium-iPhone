// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "AppSpecifics.pb.h"

@implementation AppSpecificsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [AppSpecificsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ExtensionSpecificsRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface AppNotificationSettings ()
@property BOOL initialSetupDone;
@property BOOL disabled;
@property (retain) NSString* oauthClientId;
@end

@implementation AppNotificationSettings

- (BOOL) hasInitialSetupDone {
  return !!hasInitialSetupDone_;
}
- (void) setHasInitialSetupDone:(BOOL) value {
  hasInitialSetupDone_ = !!value;
}
- (BOOL) initialSetupDone {
  return !!initialSetupDone_;
}
- (void) setInitialSetupDone:(BOOL) value {
  initialSetupDone_ = !!value;
}
- (BOOL) hasDisabled {
  return !!hasDisabled_;
}
- (void) setHasDisabled:(BOOL) value {
  hasDisabled_ = !!value;
}
- (BOOL) disabled {
  return !!disabled_;
}
- (void) setDisabled:(BOOL) value {
  disabled_ = !!value;
}
- (BOOL) hasOauthClientId {
  return !!hasOauthClientId_;
}
- (void) setHasOauthClientId:(BOOL) value {
  hasOauthClientId_ = !!value;
}
@synthesize oauthClientId;
- (void) dealloc {
  self.oauthClientId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.initialSetupDone = NO;
    self.disabled = NO;
    self.oauthClientId = @"";
  }
  return self;
}
static AppNotificationSettings* defaultAppNotificationSettingsInstance = nil;
+ (void) initialize {
  if (self == [AppNotificationSettings class]) {
    defaultAppNotificationSettingsInstance = [[AppNotificationSettings alloc] init];
  }
}
+ (AppNotificationSettings*) defaultInstance {
  return defaultAppNotificationSettingsInstance;
}
- (AppNotificationSettings*) defaultInstance {
  return defaultAppNotificationSettingsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasInitialSetupDone) {
    [output writeBool:1 value:self.initialSetupDone];
  }
  if (self.hasDisabled) {
    [output writeBool:2 value:self.disabled];
  }
  if (self.hasOauthClientId) {
    [output writeString:3 value:self.oauthClientId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasInitialSetupDone) {
    size += computeBoolSize(1, self.initialSetupDone);
  }
  if (self.hasDisabled) {
    size += computeBoolSize(2, self.disabled);
  }
  if (self.hasOauthClientId) {
    size += computeStringSize(3, self.oauthClientId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AppNotificationSettings*) parseFromData:(NSData*) data {
  return (AppNotificationSettings*)[[[AppNotificationSettings builder] mergeFromData:data] build];
}
+ (AppNotificationSettings*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppNotificationSettings*)[[[AppNotificationSettings builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AppNotificationSettings*) parseFromInputStream:(NSInputStream*) input {
  return (AppNotificationSettings*)[[[AppNotificationSettings builder] mergeFromInputStream:input] build];
}
+ (AppNotificationSettings*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppNotificationSettings*)[[[AppNotificationSettings builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AppNotificationSettings*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AppNotificationSettings*)[[[AppNotificationSettings builder] mergeFromCodedInputStream:input] build];
}
+ (AppNotificationSettings*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppNotificationSettings*)[[[AppNotificationSettings builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AppNotificationSettings_Builder*) builder {
  return [[[AppNotificationSettings_Builder alloc] init] autorelease];
}
+ (AppNotificationSettings_Builder*) builderWithPrototype:(AppNotificationSettings*) prototype {
  return [[AppNotificationSettings builder] mergeFrom:prototype];
}
- (AppNotificationSettings_Builder*) builder {
  return [AppNotificationSettings builder];
}
@end

@interface AppNotificationSettings_Builder()
@property (retain) AppNotificationSettings* result;
@end

@implementation AppNotificationSettings_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AppNotificationSettings alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AppNotificationSettings_Builder*) clear {
  self.result = [[[AppNotificationSettings alloc] init] autorelease];
  return self;
}
- (AppNotificationSettings_Builder*) clone {
  return [AppNotificationSettings builderWithPrototype:result];
}
- (AppNotificationSettings*) defaultInstance {
  return [AppNotificationSettings defaultInstance];
}
- (AppNotificationSettings*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AppNotificationSettings*) buildPartial {
  AppNotificationSettings* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AppNotificationSettings_Builder*) mergeFrom:(AppNotificationSettings*) other {
  if (other == [AppNotificationSettings defaultInstance]) {
    return self;
  }
  if (other.hasInitialSetupDone) {
    [self setInitialSetupDone:other.initialSetupDone];
  }
  if (other.hasDisabled) {
    [self setDisabled:other.disabled];
  }
  if (other.hasOauthClientId) {
    [self setOauthClientId:other.oauthClientId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AppNotificationSettings_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AppNotificationSettings_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setInitialSetupDone:[input readBool]];
        break;
      }
      case 16: {
        [self setDisabled:[input readBool]];
        break;
      }
      case 26: {
        [self setOauthClientId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasInitialSetupDone {
  return result.hasInitialSetupDone;
}
- (BOOL) initialSetupDone {
  return result.initialSetupDone;
}
- (AppNotificationSettings_Builder*) setInitialSetupDone:(BOOL) value {
  result.hasInitialSetupDone = YES;
  result.initialSetupDone = value;
  return self;
}
- (AppNotificationSettings_Builder*) clearInitialSetupDone {
  result.hasInitialSetupDone = NO;
  result.initialSetupDone = NO;
  return self;
}
- (BOOL) hasDisabled {
  return result.hasDisabled;
}
- (BOOL) disabled {
  return result.disabled;
}
- (AppNotificationSettings_Builder*) setDisabled:(BOOL) value {
  result.hasDisabled = YES;
  result.disabled = value;
  return self;
}
- (AppNotificationSettings_Builder*) clearDisabled {
  result.hasDisabled = NO;
  result.disabled = NO;
  return self;
}
- (BOOL) hasOauthClientId {
  return result.hasOauthClientId;
}
- (NSString*) oauthClientId {
  return result.oauthClientId;
}
- (AppNotificationSettings_Builder*) setOauthClientId:(NSString*) value {
  result.hasOauthClientId = YES;
  result.oauthClientId = value;
  return self;
}
- (AppNotificationSettings_Builder*) clearOauthClientId {
  result.hasOauthClientId = NO;
  result.oauthClientId = @"";
  return self;
}
@end

@interface AppSpecifics ()
@property (retain) ExtensionSpecifics* extension;
@property (retain) AppNotificationSettings* notificationSettings;
@property (retain) NSString* appLaunchOrdinal;
@property (retain) NSString* pageOrdinal;
@end

@implementation AppSpecifics

- (BOOL) hasExtension {
  return !!hasExtension_;
}
- (void) setHasExtension:(BOOL) value {
  hasExtension_ = !!value;
}
@synthesize extension;
- (BOOL) hasNotificationSettings {
  return !!hasNotificationSettings_;
}
- (void) setHasNotificationSettings:(BOOL) value {
  hasNotificationSettings_ = !!value;
}
@synthesize notificationSettings;
- (BOOL) hasAppLaunchOrdinal {
  return !!hasAppLaunchOrdinal_;
}
- (void) setHasAppLaunchOrdinal:(BOOL) value {
  hasAppLaunchOrdinal_ = !!value;
}
@synthesize appLaunchOrdinal;
- (BOOL) hasPageOrdinal {
  return !!hasPageOrdinal_;
}
- (void) setHasPageOrdinal:(BOOL) value {
  hasPageOrdinal_ = !!value;
}
@synthesize pageOrdinal;
- (void) dealloc {
  self.extension = nil;
  self.notificationSettings = nil;
  self.appLaunchOrdinal = nil;
  self.pageOrdinal = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.extension = [ExtensionSpecifics defaultInstance];
    self.notificationSettings = [AppNotificationSettings defaultInstance];
    self.appLaunchOrdinal = @"";
    self.pageOrdinal = @"";
  }
  return self;
}
static AppSpecifics* defaultAppSpecificsInstance = nil;
+ (void) initialize {
  if (self == [AppSpecifics class]) {
    defaultAppSpecificsInstance = [[AppSpecifics alloc] init];
  }
}
+ (AppSpecifics*) defaultInstance {
  return defaultAppSpecificsInstance;
}
- (AppSpecifics*) defaultInstance {
  return defaultAppSpecificsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasExtension) {
    [output writeMessage:1 value:self.extension];
  }
  if (self.hasNotificationSettings) {
    [output writeMessage:2 value:self.notificationSettings];
  }
  if (self.hasAppLaunchOrdinal) {
    [output writeString:3 value:self.appLaunchOrdinal];
  }
  if (self.hasPageOrdinal) {
    [output writeString:4 value:self.pageOrdinal];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasExtension) {
    size += computeMessageSize(1, self.extension);
  }
  if (self.hasNotificationSettings) {
    size += computeMessageSize(2, self.notificationSettings);
  }
  if (self.hasAppLaunchOrdinal) {
    size += computeStringSize(3, self.appLaunchOrdinal);
  }
  if (self.hasPageOrdinal) {
    size += computeStringSize(4, self.pageOrdinal);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AppSpecifics*) parseFromData:(NSData*) data {
  return (AppSpecifics*)[[[AppSpecifics builder] mergeFromData:data] build];
}
+ (AppSpecifics*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppSpecifics*)[[[AppSpecifics builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AppSpecifics*) parseFromInputStream:(NSInputStream*) input {
  return (AppSpecifics*)[[[AppSpecifics builder] mergeFromInputStream:input] build];
}
+ (AppSpecifics*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppSpecifics*)[[[AppSpecifics builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AppSpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AppSpecifics*)[[[AppSpecifics builder] mergeFromCodedInputStream:input] build];
}
+ (AppSpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppSpecifics*)[[[AppSpecifics builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AppSpecifics_Builder*) builder {
  return [[[AppSpecifics_Builder alloc] init] autorelease];
}
+ (AppSpecifics_Builder*) builderWithPrototype:(AppSpecifics*) prototype {
  return [[AppSpecifics builder] mergeFrom:prototype];
}
- (AppSpecifics_Builder*) builder {
  return [AppSpecifics builder];
}
@end

@interface AppSpecifics_Builder()
@property (retain) AppSpecifics* result;
@end

@implementation AppSpecifics_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AppSpecifics alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AppSpecifics_Builder*) clear {
  self.result = [[[AppSpecifics alloc] init] autorelease];
  return self;
}
- (AppSpecifics_Builder*) clone {
  return [AppSpecifics builderWithPrototype:result];
}
- (AppSpecifics*) defaultInstance {
  return [AppSpecifics defaultInstance];
}
- (AppSpecifics*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AppSpecifics*) buildPartial {
  AppSpecifics* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AppSpecifics_Builder*) mergeFrom:(AppSpecifics*) other {
  if (other == [AppSpecifics defaultInstance]) {
    return self;
  }
  if (other.hasExtension) {
    [self mergeExtension:other.extension];
  }
  if (other.hasNotificationSettings) {
    [self mergeNotificationSettings:other.notificationSettings];
  }
  if (other.hasAppLaunchOrdinal) {
    [self setAppLaunchOrdinal:other.appLaunchOrdinal];
  }
  if (other.hasPageOrdinal) {
    [self setPageOrdinal:other.pageOrdinal];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AppSpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AppSpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        ExtensionSpecifics_Builder* subBuilder = [ExtensionSpecifics builder];
        if (self.hasExtension) {
          [subBuilder mergeFrom:self.extension];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setExtension:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        AppNotificationSettings_Builder* subBuilder = [AppNotificationSettings builder];
        if (self.hasNotificationSettings) {
          [subBuilder mergeFrom:self.notificationSettings];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setNotificationSettings:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setAppLaunchOrdinal:[input readString]];
        break;
      }
      case 34: {
        [self setPageOrdinal:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasExtension {
  return result.hasExtension;
}
- (ExtensionSpecifics*) extension {
  return result.extension;
}
- (AppSpecifics_Builder*) setExtension:(ExtensionSpecifics*) value {
  result.hasExtension = YES;
  result.extension = value;
  return self;
}
- (AppSpecifics_Builder*) setExtensionBuilder:(ExtensionSpecifics_Builder*) builderForValue {
  return [self setExtension:[builderForValue build]];
}
- (AppSpecifics_Builder*) mergeExtension:(ExtensionSpecifics*) value {
  if (result.hasExtension &&
      result.extension != [ExtensionSpecifics defaultInstance]) {
    result.extension =
      [[[ExtensionSpecifics builderWithPrototype:result.extension] mergeFrom:value] buildPartial];
  } else {
    result.extension = value;
  }
  result.hasExtension = YES;
  return self;
}
- (AppSpecifics_Builder*) clearExtension {
  result.hasExtension = NO;
  result.extension = [ExtensionSpecifics defaultInstance];
  return self;
}
- (BOOL) hasNotificationSettings {
  return result.hasNotificationSettings;
}
- (AppNotificationSettings*) notificationSettings {
  return result.notificationSettings;
}
- (AppSpecifics_Builder*) setNotificationSettings:(AppNotificationSettings*) value {
  result.hasNotificationSettings = YES;
  result.notificationSettings = value;
  return self;
}
- (AppSpecifics_Builder*) setNotificationSettingsBuilder:(AppNotificationSettings_Builder*) builderForValue {
  return [self setNotificationSettings:[builderForValue build]];
}
- (AppSpecifics_Builder*) mergeNotificationSettings:(AppNotificationSettings*) value {
  if (result.hasNotificationSettings &&
      result.notificationSettings != [AppNotificationSettings defaultInstance]) {
    result.notificationSettings =
      [[[AppNotificationSettings builderWithPrototype:result.notificationSettings] mergeFrom:value] buildPartial];
  } else {
    result.notificationSettings = value;
  }
  result.hasNotificationSettings = YES;
  return self;
}
- (AppSpecifics_Builder*) clearNotificationSettings {
  result.hasNotificationSettings = NO;
  result.notificationSettings = [AppNotificationSettings defaultInstance];
  return self;
}
- (BOOL) hasAppLaunchOrdinal {
  return result.hasAppLaunchOrdinal;
}
- (NSString*) appLaunchOrdinal {
  return result.appLaunchOrdinal;
}
- (AppSpecifics_Builder*) setAppLaunchOrdinal:(NSString*) value {
  result.hasAppLaunchOrdinal = YES;
  result.appLaunchOrdinal = value;
  return self;
}
- (AppSpecifics_Builder*) clearAppLaunchOrdinal {
  result.hasAppLaunchOrdinal = NO;
  result.appLaunchOrdinal = @"";
  return self;
}
- (BOOL) hasPageOrdinal {
  return result.hasPageOrdinal;
}
- (NSString*) pageOrdinal {
  return result.pageOrdinal;
}
- (AppSpecifics_Builder*) setPageOrdinal:(NSString*) value {
  result.hasPageOrdinal = YES;
  result.pageOrdinal = value;
  return self;
}
- (AppSpecifics_Builder*) clearPageOrdinal {
  result.hasPageOrdinal = NO;
  result.pageOrdinal = @"";
  return self;
}
@end

