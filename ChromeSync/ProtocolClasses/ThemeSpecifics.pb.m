// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ThemeSpecifics.pb.h"

@implementation ThemeSpecificsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ThemeSpecificsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ThemeSpecifics ()
@property BOOL useCustomTheme;
@property BOOL useSystemThemeByDefault;
@property (retain) NSString* customThemeName;
@property (retain) NSString* customThemeId;
@property (retain) NSString* customThemeUpdateUrl;
@end

@implementation ThemeSpecifics

- (BOOL) hasUseCustomTheme {
  return !!hasUseCustomTheme_;
}
- (void) setHasUseCustomTheme:(BOOL) value {
  hasUseCustomTheme_ = !!value;
}
- (BOOL) useCustomTheme {
  return !!useCustomTheme_;
}
- (void) setUseCustomTheme:(BOOL) value {
  useCustomTheme_ = !!value;
}
- (BOOL) hasUseSystemThemeByDefault {
  return !!hasUseSystemThemeByDefault_;
}
- (void) setHasUseSystemThemeByDefault:(BOOL) value {
  hasUseSystemThemeByDefault_ = !!value;
}
- (BOOL) useSystemThemeByDefault {
  return !!useSystemThemeByDefault_;
}
- (void) setUseSystemThemeByDefault:(BOOL) value {
  useSystemThemeByDefault_ = !!value;
}
- (BOOL) hasCustomThemeName {
  return !!hasCustomThemeName_;
}
- (void) setHasCustomThemeName:(BOOL) value {
  hasCustomThemeName_ = !!value;
}
@synthesize customThemeName;
- (BOOL) hasCustomThemeId {
  return !!hasCustomThemeId_;
}
- (void) setHasCustomThemeId:(BOOL) value {
  hasCustomThemeId_ = !!value;
}
@synthesize customThemeId;
- (BOOL) hasCustomThemeUpdateUrl {
  return !!hasCustomThemeUpdateUrl_;
}
- (void) setHasCustomThemeUpdateUrl:(BOOL) value {
  hasCustomThemeUpdateUrl_ = !!value;
}
@synthesize customThemeUpdateUrl;
- (void) dealloc {
  self.customThemeName = nil;
  self.customThemeId = nil;
  self.customThemeUpdateUrl = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.useCustomTheme = NO;
    self.useSystemThemeByDefault = NO;
    self.customThemeName = @"";
    self.customThemeId = @"";
    self.customThemeUpdateUrl = @"";
  }
  return self;
}
static ThemeSpecifics* defaultThemeSpecificsInstance = nil;
+ (void) initialize {
  if (self == [ThemeSpecifics class]) {
    defaultThemeSpecificsInstance = [[ThemeSpecifics alloc] init];
  }
}
+ (ThemeSpecifics*) defaultInstance {
  return defaultThemeSpecificsInstance;
}
- (ThemeSpecifics*) defaultInstance {
  return defaultThemeSpecificsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUseCustomTheme) {
    [output writeBool:1 value:self.useCustomTheme];
  }
  if (self.hasUseSystemThemeByDefault) {
    [output writeBool:2 value:self.useSystemThemeByDefault];
  }
  if (self.hasCustomThemeName) {
    [output writeString:3 value:self.customThemeName];
  }
  if (self.hasCustomThemeId) {
    [output writeString:4 value:self.customThemeId];
  }
  if (self.hasCustomThemeUpdateUrl) {
    [output writeString:5 value:self.customThemeUpdateUrl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUseCustomTheme) {
    size += computeBoolSize(1, self.useCustomTheme);
  }
  if (self.hasUseSystemThemeByDefault) {
    size += computeBoolSize(2, self.useSystemThemeByDefault);
  }
  if (self.hasCustomThemeName) {
    size += computeStringSize(3, self.customThemeName);
  }
  if (self.hasCustomThemeId) {
    size += computeStringSize(4, self.customThemeId);
  }
  if (self.hasCustomThemeUpdateUrl) {
    size += computeStringSize(5, self.customThemeUpdateUrl);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ThemeSpecifics*) parseFromData:(NSData*) data {
  return (ThemeSpecifics*)[[[ThemeSpecifics builder] mergeFromData:data] build];
}
+ (ThemeSpecifics*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ThemeSpecifics*)[[[ThemeSpecifics builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ThemeSpecifics*) parseFromInputStream:(NSInputStream*) input {
  return (ThemeSpecifics*)[[[ThemeSpecifics builder] mergeFromInputStream:input] build];
}
+ (ThemeSpecifics*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ThemeSpecifics*)[[[ThemeSpecifics builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ThemeSpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ThemeSpecifics*)[[[ThemeSpecifics builder] mergeFromCodedInputStream:input] build];
}
+ (ThemeSpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ThemeSpecifics*)[[[ThemeSpecifics builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ThemeSpecifics_Builder*) builder {
  return [[[ThemeSpecifics_Builder alloc] init] autorelease];
}
+ (ThemeSpecifics_Builder*) builderWithPrototype:(ThemeSpecifics*) prototype {
  return [[ThemeSpecifics builder] mergeFrom:prototype];
}
- (ThemeSpecifics_Builder*) builder {
  return [ThemeSpecifics builder];
}
@end

@interface ThemeSpecifics_Builder()
@property (retain) ThemeSpecifics* result;
@end

@implementation ThemeSpecifics_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ThemeSpecifics alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ThemeSpecifics_Builder*) clear {
  self.result = [[[ThemeSpecifics alloc] init] autorelease];
  return self;
}
- (ThemeSpecifics_Builder*) clone {
  return [ThemeSpecifics builderWithPrototype:result];
}
- (ThemeSpecifics*) defaultInstance {
  return [ThemeSpecifics defaultInstance];
}
- (ThemeSpecifics*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ThemeSpecifics*) buildPartial {
  ThemeSpecifics* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ThemeSpecifics_Builder*) mergeFrom:(ThemeSpecifics*) other {
  if (other == [ThemeSpecifics defaultInstance]) {
    return self;
  }
  if (other.hasUseCustomTheme) {
    [self setUseCustomTheme:other.useCustomTheme];
  }
  if (other.hasUseSystemThemeByDefault) {
    [self setUseSystemThemeByDefault:other.useSystemThemeByDefault];
  }
  if (other.hasCustomThemeName) {
    [self setCustomThemeName:other.customThemeName];
  }
  if (other.hasCustomThemeId) {
    [self setCustomThemeId:other.customThemeId];
  }
  if (other.hasCustomThemeUpdateUrl) {
    [self setCustomThemeUpdateUrl:other.customThemeUpdateUrl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ThemeSpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ThemeSpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUseCustomTheme:[input readBool]];
        break;
      }
      case 16: {
        [self setUseSystemThemeByDefault:[input readBool]];
        break;
      }
      case 26: {
        [self setCustomThemeName:[input readString]];
        break;
      }
      case 34: {
        [self setCustomThemeId:[input readString]];
        break;
      }
      case 42: {
        [self setCustomThemeUpdateUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUseCustomTheme {
  return result.hasUseCustomTheme;
}
- (BOOL) useCustomTheme {
  return result.useCustomTheme;
}
- (ThemeSpecifics_Builder*) setUseCustomTheme:(BOOL) value {
  result.hasUseCustomTheme = YES;
  result.useCustomTheme = value;
  return self;
}
- (ThemeSpecifics_Builder*) clearUseCustomTheme {
  result.hasUseCustomTheme = NO;
  result.useCustomTheme = NO;
  return self;
}
- (BOOL) hasUseSystemThemeByDefault {
  return result.hasUseSystemThemeByDefault;
}
- (BOOL) useSystemThemeByDefault {
  return result.useSystemThemeByDefault;
}
- (ThemeSpecifics_Builder*) setUseSystemThemeByDefault:(BOOL) value {
  result.hasUseSystemThemeByDefault = YES;
  result.useSystemThemeByDefault = value;
  return self;
}
- (ThemeSpecifics_Builder*) clearUseSystemThemeByDefault {
  result.hasUseSystemThemeByDefault = NO;
  result.useSystemThemeByDefault = NO;
  return self;
}
- (BOOL) hasCustomThemeName {
  return result.hasCustomThemeName;
}
- (NSString*) customThemeName {
  return result.customThemeName;
}
- (ThemeSpecifics_Builder*) setCustomThemeName:(NSString*) value {
  result.hasCustomThemeName = YES;
  result.customThemeName = value;
  return self;
}
- (ThemeSpecifics_Builder*) clearCustomThemeName {
  result.hasCustomThemeName = NO;
  result.customThemeName = @"";
  return self;
}
- (BOOL) hasCustomThemeId {
  return result.hasCustomThemeId;
}
- (NSString*) customThemeId {
  return result.customThemeId;
}
- (ThemeSpecifics_Builder*) setCustomThemeId:(NSString*) value {
  result.hasCustomThemeId = YES;
  result.customThemeId = value;
  return self;
}
- (ThemeSpecifics_Builder*) clearCustomThemeId {
  result.hasCustomThemeId = NO;
  result.customThemeId = @"";
  return self;
}
- (BOOL) hasCustomThemeUpdateUrl {
  return result.hasCustomThemeUpdateUrl;
}
- (NSString*) customThemeUpdateUrl {
  return result.customThemeUpdateUrl;
}
- (ThemeSpecifics_Builder*) setCustomThemeUpdateUrl:(NSString*) value {
  result.hasCustomThemeUpdateUrl = YES;
  result.customThemeUpdateUrl = value;
  return self;
}
- (ThemeSpecifics_Builder*) clearCustomThemeUpdateUrl {
  result.hasCustomThemeUpdateUrl = NO;
  result.customThemeUpdateUrl = @"";
  return self;
}
@end

