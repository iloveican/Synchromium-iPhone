// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ExtensionSpecifics.pb.h"

@implementation ExtensionSpecificsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ExtensionSpecificsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ExtensionSpecifics ()
@property (retain) NSString* id;
@property (retain) NSString* version;
@property (retain) NSString* updateUrl;
@property BOOL enabled;
@property BOOL incognitoEnabled;
@property (retain) NSString* name;
@end

@implementation ExtensionSpecifics

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value {
  hasVersion_ = !!value;
}
@synthesize version;
- (BOOL) hasUpdateUrl {
  return !!hasUpdateUrl_;
}
- (void) setHasUpdateUrl:(BOOL) value {
  hasUpdateUrl_ = !!value;
}
@synthesize updateUrl;
- (BOOL) hasEnabled {
  return !!hasEnabled_;
}
- (void) setHasEnabled:(BOOL) value {
  hasEnabled_ = !!value;
}
- (BOOL) enabled {
  return !!enabled_;
}
- (void) setEnabled:(BOOL) value {
  enabled_ = !!value;
}
- (BOOL) hasIncognitoEnabled {
  return !!hasIncognitoEnabled_;
}
- (void) setHasIncognitoEnabled:(BOOL) value {
  hasIncognitoEnabled_ = !!value;
}
- (BOOL) incognitoEnabled {
  return !!incognitoEnabled_;
}
- (void) setIncognitoEnabled:(BOOL) value {
  incognitoEnabled_ = !!value;
}
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (void) dealloc {
  self.id = nil;
  self.version = nil;
  self.updateUrl = nil;
  self.name = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.version = @"";
    self.updateUrl = @"";
    self.enabled = NO;
    self.incognitoEnabled = NO;
    self.name = @"";
  }
  return self;
}
static ExtensionSpecifics* defaultExtensionSpecificsInstance = nil;
+ (void) initialize {
  if (self == [ExtensionSpecifics class]) {
    defaultExtensionSpecificsInstance = [[ExtensionSpecifics alloc] init];
  }
}
+ (ExtensionSpecifics*) defaultInstance {
  return defaultExtensionSpecificsInstance;
}
- (ExtensionSpecifics*) defaultInstance {
  return defaultExtensionSpecificsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasVersion) {
    [output writeString:2 value:self.version];
  }
  if (self.hasUpdateUrl) {
    [output writeString:3 value:self.updateUrl];
  }
  if (self.hasEnabled) {
    [output writeBool:4 value:self.enabled];
  }
  if (self.hasIncognitoEnabled) {
    [output writeBool:5 value:self.incognitoEnabled];
  }
  if (self.hasName) {
    [output writeString:6 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasVersion) {
    size += computeStringSize(2, self.version);
  }
  if (self.hasUpdateUrl) {
    size += computeStringSize(3, self.updateUrl);
  }
  if (self.hasEnabled) {
    size += computeBoolSize(4, self.enabled);
  }
  if (self.hasIncognitoEnabled) {
    size += computeBoolSize(5, self.incognitoEnabled);
  }
  if (self.hasName) {
    size += computeStringSize(6, self.name);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ExtensionSpecifics*) parseFromData:(NSData*) data {
  return (ExtensionSpecifics*)[[[ExtensionSpecifics builder] mergeFromData:data] build];
}
+ (ExtensionSpecifics*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExtensionSpecifics*)[[[ExtensionSpecifics builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ExtensionSpecifics*) parseFromInputStream:(NSInputStream*) input {
  return (ExtensionSpecifics*)[[[ExtensionSpecifics builder] mergeFromInputStream:input] build];
}
+ (ExtensionSpecifics*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExtensionSpecifics*)[[[ExtensionSpecifics builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExtensionSpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ExtensionSpecifics*)[[[ExtensionSpecifics builder] mergeFromCodedInputStream:input] build];
}
+ (ExtensionSpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ExtensionSpecifics*)[[[ExtensionSpecifics builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ExtensionSpecifics_Builder*) builder {
  return [[[ExtensionSpecifics_Builder alloc] init] autorelease];
}
+ (ExtensionSpecifics_Builder*) builderWithPrototype:(ExtensionSpecifics*) prototype {
  return [[ExtensionSpecifics builder] mergeFrom:prototype];
}
- (ExtensionSpecifics_Builder*) builder {
  return [ExtensionSpecifics builder];
}
@end

@interface ExtensionSpecifics_Builder()
@property (retain) ExtensionSpecifics* result;
@end

@implementation ExtensionSpecifics_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ExtensionSpecifics alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ExtensionSpecifics_Builder*) clear {
  self.result = [[[ExtensionSpecifics alloc] init] autorelease];
  return self;
}
- (ExtensionSpecifics_Builder*) clone {
  return [ExtensionSpecifics builderWithPrototype:result];
}
- (ExtensionSpecifics*) defaultInstance {
  return [ExtensionSpecifics defaultInstance];
}
- (ExtensionSpecifics*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ExtensionSpecifics*) buildPartial {
  ExtensionSpecifics* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ExtensionSpecifics_Builder*) mergeFrom:(ExtensionSpecifics*) other {
  if (other == [ExtensionSpecifics defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasUpdateUrl) {
    [self setUpdateUrl:other.updateUrl];
  }
  if (other.hasEnabled) {
    [self setEnabled:other.enabled];
  }
  if (other.hasIncognitoEnabled) {
    [self setIncognitoEnabled:other.incognitoEnabled];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ExtensionSpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ExtensionSpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setVersion:[input readString]];
        break;
      }
      case 26: {
        [self setUpdateUrl:[input readString]];
        break;
      }
      case 32: {
        [self setEnabled:[input readBool]];
        break;
      }
      case 40: {
        [self setIncognitoEnabled:[input readBool]];
        break;
      }
      case 50: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (NSString*) id {
  return result.id;
}
- (ExtensionSpecifics_Builder*) setId:(NSString*) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (ExtensionSpecifics_Builder*) clearId {
  result.hasId = NO;
  result.id = @"";
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (NSString*) version {
  return result.version;
}
- (ExtensionSpecifics_Builder*) setVersion:(NSString*) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (ExtensionSpecifics_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = @"";
  return self;
}
- (BOOL) hasUpdateUrl {
  return result.hasUpdateUrl;
}
- (NSString*) updateUrl {
  return result.updateUrl;
}
- (ExtensionSpecifics_Builder*) setUpdateUrl:(NSString*) value {
  result.hasUpdateUrl = YES;
  result.updateUrl = value;
  return self;
}
- (ExtensionSpecifics_Builder*) clearUpdateUrl {
  result.hasUpdateUrl = NO;
  result.updateUrl = @"";
  return self;
}
- (BOOL) hasEnabled {
  return result.hasEnabled;
}
- (BOOL) enabled {
  return result.enabled;
}
- (ExtensionSpecifics_Builder*) setEnabled:(BOOL) value {
  result.hasEnabled = YES;
  result.enabled = value;
  return self;
}
- (ExtensionSpecifics_Builder*) clearEnabled {
  result.hasEnabled = NO;
  result.enabled = NO;
  return self;
}
- (BOOL) hasIncognitoEnabled {
  return result.hasIncognitoEnabled;
}
- (BOOL) incognitoEnabled {
  return result.incognitoEnabled;
}
- (ExtensionSpecifics_Builder*) setIncognitoEnabled:(BOOL) value {
  result.hasIncognitoEnabled = YES;
  result.incognitoEnabled = value;
  return self;
}
- (ExtensionSpecifics_Builder*) clearIncognitoEnabled {
  result.hasIncognitoEnabled = NO;
  result.incognitoEnabled = NO;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (ExtensionSpecifics_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (ExtensionSpecifics_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
@end

