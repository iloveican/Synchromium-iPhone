// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "AppSettingSpecifics.pb.h"

@implementation AppSettingSpecificsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [AppSettingSpecificsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ExtensionSettingSpecificsRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface AppSettingSpecifics ()
@property (retain) ExtensionSettingSpecifics* extensionSetting;
@end

@implementation AppSettingSpecifics

- (BOOL) hasExtensionSetting {
  return !!hasExtensionSetting_;
}
- (void) setHasExtensionSetting:(BOOL) value {
  hasExtensionSetting_ = !!value;
}
@synthesize extensionSetting;
- (void) dealloc {
  self.extensionSetting = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.extensionSetting = [ExtensionSettingSpecifics defaultInstance];
  }
  return self;
}
static AppSettingSpecifics* defaultAppSettingSpecificsInstance = nil;
+ (void) initialize {
  if (self == [AppSettingSpecifics class]) {
    defaultAppSettingSpecificsInstance = [[AppSettingSpecifics alloc] init];
  }
}
+ (AppSettingSpecifics*) defaultInstance {
  return defaultAppSettingSpecificsInstance;
}
- (AppSettingSpecifics*) defaultInstance {
  return defaultAppSettingSpecificsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasExtensionSetting) {
    [output writeMessage:1 value:self.extensionSetting];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasExtensionSetting) {
    size += computeMessageSize(1, self.extensionSetting);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AppSettingSpecifics*) parseFromData:(NSData*) data {
  return (AppSettingSpecifics*)[[[AppSettingSpecifics builder] mergeFromData:data] build];
}
+ (AppSettingSpecifics*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppSettingSpecifics*)[[[AppSettingSpecifics builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AppSettingSpecifics*) parseFromInputStream:(NSInputStream*) input {
  return (AppSettingSpecifics*)[[[AppSettingSpecifics builder] mergeFromInputStream:input] build];
}
+ (AppSettingSpecifics*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppSettingSpecifics*)[[[AppSettingSpecifics builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AppSettingSpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AppSettingSpecifics*)[[[AppSettingSpecifics builder] mergeFromCodedInputStream:input] build];
}
+ (AppSettingSpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AppSettingSpecifics*)[[[AppSettingSpecifics builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AppSettingSpecifics_Builder*) builder {
  return [[[AppSettingSpecifics_Builder alloc] init] autorelease];
}
+ (AppSettingSpecifics_Builder*) builderWithPrototype:(AppSettingSpecifics*) prototype {
  return [[AppSettingSpecifics builder] mergeFrom:prototype];
}
- (AppSettingSpecifics_Builder*) builder {
  return [AppSettingSpecifics builder];
}
@end

@interface AppSettingSpecifics_Builder()
@property (retain) AppSettingSpecifics* result;
@end

@implementation AppSettingSpecifics_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AppSettingSpecifics alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AppSettingSpecifics_Builder*) clear {
  self.result = [[[AppSettingSpecifics alloc] init] autorelease];
  return self;
}
- (AppSettingSpecifics_Builder*) clone {
  return [AppSettingSpecifics builderWithPrototype:result];
}
- (AppSettingSpecifics*) defaultInstance {
  return [AppSettingSpecifics defaultInstance];
}
- (AppSettingSpecifics*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AppSettingSpecifics*) buildPartial {
  AppSettingSpecifics* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AppSettingSpecifics_Builder*) mergeFrom:(AppSettingSpecifics*) other {
  if (other == [AppSettingSpecifics defaultInstance]) {
    return self;
  }
  if (other.hasExtensionSetting) {
    [self mergeExtensionSetting:other.extensionSetting];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AppSettingSpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AppSettingSpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        ExtensionSettingSpecifics_Builder* subBuilder = [ExtensionSettingSpecifics builder];
        if (self.hasExtensionSetting) {
          [subBuilder mergeFrom:self.extensionSetting];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setExtensionSetting:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasExtensionSetting {
  return result.hasExtensionSetting;
}
- (ExtensionSettingSpecifics*) extensionSetting {
  return result.extensionSetting;
}
- (AppSettingSpecifics_Builder*) setExtensionSetting:(ExtensionSettingSpecifics*) value {
  result.hasExtensionSetting = YES;
  result.extensionSetting = value;
  return self;
}
- (AppSettingSpecifics_Builder*) setExtensionSettingBuilder:(ExtensionSettingSpecifics_Builder*) builderForValue {
  return [self setExtensionSetting:[builderForValue build]];
}
- (AppSettingSpecifics_Builder*) mergeExtensionSetting:(ExtensionSettingSpecifics*) value {
  if (result.hasExtensionSetting &&
      result.extensionSetting != [ExtensionSettingSpecifics defaultInstance]) {
    result.extensionSetting =
      [[[ExtensionSettingSpecifics builderWithPrototype:result.extensionSetting] mergeFrom:value] buildPartial];
  } else {
    result.extensionSetting = value;
  }
  result.hasExtensionSetting = YES;
  return self;
}
- (AppSettingSpecifics_Builder*) clearExtensionSetting {
  result.hasExtensionSetting = NO;
  result.extensionSetting = [ExtensionSettingSpecifics defaultInstance];
  return self;
}
@end

