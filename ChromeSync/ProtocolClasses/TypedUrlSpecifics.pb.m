// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "TypedUrlSpecifics.pb.h"

@implementation TypedUrlSpecificsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [TypedUrlSpecificsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface TypedUrlSpecifics ()
@property (retain) NSString* url;
@property (retain) NSString* title;
@property BOOL hidden;
@property (retain) NSMutableArray* mutableVisitsList;
@property (retain) NSMutableArray* mutableVisitTransitionsList;
@end

@implementation TypedUrlSpecifics

- (BOOL) hasUrl {
  return !!hasUrl_;
}
- (void) setHasUrl:(BOOL) value {
  hasUrl_ = !!value;
}
@synthesize url;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value {
  hasTitle_ = !!value;
}
@synthesize title;
- (BOOL) hasHidden {
  return !!hasHidden_;
}
- (void) setHasHidden:(BOOL) value {
  hasHidden_ = !!value;
}
- (BOOL) hidden {
  return !!hidden_;
}
- (void) setHidden:(BOOL) value {
  hidden_ = !!value;
}
@synthesize mutableVisitsList;
@synthesize mutableVisitTransitionsList;
- (void) dealloc {
  self.url = nil;
  self.title = nil;
  self.mutableVisitsList = nil;
  self.mutableVisitTransitionsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.url = @"";
    self.title = @"";
    self.hidden = NO;
  }
  return self;
}
static TypedUrlSpecifics* defaultTypedUrlSpecificsInstance = nil;
+ (void) initialize {
  if (self == [TypedUrlSpecifics class]) {
    defaultTypedUrlSpecificsInstance = [[TypedUrlSpecifics alloc] init];
  }
}
+ (TypedUrlSpecifics*) defaultInstance {
  return defaultTypedUrlSpecificsInstance;
}
- (TypedUrlSpecifics*) defaultInstance {
  return defaultTypedUrlSpecificsInstance;
}
- (NSArray*) visitsList {
  return mutableVisitsList;
}
- (int64_t) visitsAtIndex:(int32_t) index {
  id value = [mutableVisitsList objectAtIndex:index];
  return [value longLongValue];
}
- (NSArray*) visitTransitionsList {
  return mutableVisitTransitionsList;
}
- (int32_t) visitTransitionsAtIndex:(int32_t) index {
  id value = [mutableVisitTransitionsList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUrl) {
    [output writeString:1 value:self.url];
  }
  if (self.hasTitle) {
    [output writeString:2 value:self.title];
  }
  if (self.hasHidden) {
    [output writeBool:4 value:self.hidden];
  }
  if (self.mutableVisitsList.count > 0) {
    [output writeRawVarint32:58];
    [output writeRawVarint32:visitsMemoizedSerializedSize];
  }
  for (NSNumber* value in self.mutableVisitsList) {
    [output writeInt64NoTag:[value longLongValue]];
  }
  if (self.mutableVisitTransitionsList.count > 0) {
    [output writeRawVarint32:66];
    [output writeRawVarint32:visitTransitionsMemoizedSerializedSize];
  }
  for (NSNumber* value in self.mutableVisitTransitionsList) {
    [output writeInt32NoTag:[value intValue]];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUrl) {
    size += computeStringSize(1, self.url);
  }
  if (self.hasTitle) {
    size += computeStringSize(2, self.title);
  }
  if (self.hasHidden) {
    size += computeBoolSize(4, self.hidden);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableVisitsList) {
      dataSize += computeInt64SizeNoTag([value longLongValue]);
    }
    size += dataSize;
    if (self.mutableVisitsList.count > 0) {
      size += 1;
      size += computeInt32SizeNoTag(dataSize);
    }
    visitsMemoizedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableVisitTransitionsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    if (self.mutableVisitTransitionsList.count > 0) {
      size += 1;
      size += computeInt32SizeNoTag(dataSize);
    }
    visitTransitionsMemoizedSerializedSize = dataSize;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (TypedUrlSpecifics*) parseFromData:(NSData*) data {
  return (TypedUrlSpecifics*)[[[TypedUrlSpecifics builder] mergeFromData:data] build];
}
+ (TypedUrlSpecifics*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TypedUrlSpecifics*)[[[TypedUrlSpecifics builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TypedUrlSpecifics*) parseFromInputStream:(NSInputStream*) input {
  return (TypedUrlSpecifics*)[[[TypedUrlSpecifics builder] mergeFromInputStream:input] build];
}
+ (TypedUrlSpecifics*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TypedUrlSpecifics*)[[[TypedUrlSpecifics builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TypedUrlSpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TypedUrlSpecifics*)[[[TypedUrlSpecifics builder] mergeFromCodedInputStream:input] build];
}
+ (TypedUrlSpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TypedUrlSpecifics*)[[[TypedUrlSpecifics builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TypedUrlSpecifics_Builder*) builder {
  return [[[TypedUrlSpecifics_Builder alloc] init] autorelease];
}
+ (TypedUrlSpecifics_Builder*) builderWithPrototype:(TypedUrlSpecifics*) prototype {
  return [[TypedUrlSpecifics builder] mergeFrom:prototype];
}
- (TypedUrlSpecifics_Builder*) builder {
  return [TypedUrlSpecifics builder];
}
@end

@interface TypedUrlSpecifics_Builder()
@property (retain) TypedUrlSpecifics* result;
@end

@implementation TypedUrlSpecifics_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[TypedUrlSpecifics alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TypedUrlSpecifics_Builder*) clear {
  self.result = [[[TypedUrlSpecifics alloc] init] autorelease];
  return self;
}
- (TypedUrlSpecifics_Builder*) clone {
  return [TypedUrlSpecifics builderWithPrototype:result];
}
- (TypedUrlSpecifics*) defaultInstance {
  return [TypedUrlSpecifics defaultInstance];
}
- (TypedUrlSpecifics*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TypedUrlSpecifics*) buildPartial {
  TypedUrlSpecifics* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (TypedUrlSpecifics_Builder*) mergeFrom:(TypedUrlSpecifics*) other {
  if (other == [TypedUrlSpecifics defaultInstance]) {
    return self;
  }
  if (other.hasUrl) {
    [self setUrl:other.url];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasHidden) {
    [self setHidden:other.hidden];
  }
  if (other.mutableVisitsList.count > 0) {
    if (result.mutableVisitsList == nil) {
      result.mutableVisitsList = [NSMutableArray array];
    }
    [result.mutableVisitsList addObjectsFromArray:other.mutableVisitsList];
  }
  if (other.mutableVisitTransitionsList.count > 0) {
    if (result.mutableVisitTransitionsList == nil) {
      result.mutableVisitTransitionsList = [NSMutableArray array];
    }
    [result.mutableVisitTransitionsList addObjectsFromArray:other.mutableVisitTransitionsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TypedUrlSpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TypedUrlSpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUrl:[input readString]];
        break;
      }
      case 18: {
        [self setTitle:[input readString]];
        break;
      }
      case 32: {
        [self setHidden:[input readBool]];
        break;
      }
      case 58: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        while (input.bytesUntilLimit > 0) {
          [self addVisits:[input readInt64]];
        }
        [input popLimit:limit];
        break;
      }
      case 66: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        while (input.bytesUntilLimit > 0) {
          [self addVisitTransitions:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
    }
  }
}
- (BOOL) hasUrl {
  return result.hasUrl;
}
- (NSString*) url {
  return result.url;
}
- (TypedUrlSpecifics_Builder*) setUrl:(NSString*) value {
  result.hasUrl = YES;
  result.url = value;
  return self;
}
- (TypedUrlSpecifics_Builder*) clearUrl {
  result.hasUrl = NO;
  result.url = @"";
  return self;
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (NSString*) title {
  return result.title;
}
- (TypedUrlSpecifics_Builder*) setTitle:(NSString*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (TypedUrlSpecifics_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = @"";
  return self;
}
- (BOOL) hasHidden {
  return result.hasHidden;
}
- (BOOL) hidden {
  return result.hidden;
}
- (TypedUrlSpecifics_Builder*) setHidden:(BOOL) value {
  result.hasHidden = YES;
  result.hidden = value;
  return self;
}
- (TypedUrlSpecifics_Builder*) clearHidden {
  result.hasHidden = NO;
  result.hidden = NO;
  return self;
}
- (NSArray*) visitsList {
  if (result.mutableVisitsList == nil) {
    return [NSArray array];
  }
  return result.mutableVisitsList;
}
- (int64_t) visitsAtIndex:(int32_t) index {
  return [result visitsAtIndex:index];
}
- (TypedUrlSpecifics_Builder*) replaceVisitsAtIndex:(int32_t) index with:(int64_t) value {
  [result.mutableVisitsList replaceObjectAtIndex:index withObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (TypedUrlSpecifics_Builder*) addVisits:(int64_t) value {
  if (result.mutableVisitsList == nil) {
    result.mutableVisitsList = [NSMutableArray array];
  }
  [result.mutableVisitsList addObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (TypedUrlSpecifics_Builder*) addAllVisits:(NSArray*) values {
  if (result.mutableVisitsList == nil) {
    result.mutableVisitsList = [NSMutableArray array];
  }
  [result.mutableVisitsList addObjectsFromArray:values];
  return self;
}
- (TypedUrlSpecifics_Builder*) clearVisitsList {
  result.mutableVisitsList = nil;
  return self;
}
- (NSArray*) visitTransitionsList {
  if (result.mutableVisitTransitionsList == nil) {
    return [NSArray array];
  }
  return result.mutableVisitTransitionsList;
}
- (int32_t) visitTransitionsAtIndex:(int32_t) index {
  return [result visitTransitionsAtIndex:index];
}
- (TypedUrlSpecifics_Builder*) replaceVisitTransitionsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableVisitTransitionsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TypedUrlSpecifics_Builder*) addVisitTransitions:(int32_t) value {
  if (result.mutableVisitTransitionsList == nil) {
    result.mutableVisitTransitionsList = [NSMutableArray array];
  }
  [result.mutableVisitTransitionsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TypedUrlSpecifics_Builder*) addAllVisitTransitions:(NSArray*) values {
  if (result.mutableVisitTransitionsList == nil) {
    result.mutableVisitTransitionsList = [NSMutableArray array];
  }
  [result.mutableVisitTransitionsList addObjectsFromArray:values];
  return self;
}
- (TypedUrlSpecifics_Builder*) clearVisitTransitionsList {
  result.mutableVisitTransitionsList = nil;
  return self;
}
@end

