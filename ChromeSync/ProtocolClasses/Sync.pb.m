// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Sync.pb.h"

@implementation SyncRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SyncRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [AppNotificationSpecificsRoot registerAllExtensions:registry];
    [AppSettingSpecificsRoot registerAllExtensions:registry];
    [AppSpecificsRoot registerAllExtensions:registry];
    [AutofillSpecificsRoot registerAllExtensions:registry];
    [BookmarkSpecificsRoot registerAllExtensions:registry];
    [GetUpdatesCallerInfoRoot registerAllExtensions:registry];
    [ExtensionSettingSpecificsRoot registerAllExtensions:registry];
    [ExtensionSpecificsRoot registerAllExtensions:registry];
    [NigoriSpecificsRoot registerAllExtensions:registry];
    [PasswordSpecificsRoot registerAllExtensions:registry];
    [PreferenceSpecificsRoot registerAllExtensions:registry];
    [SearchEngineSpecificsRoot registerAllExtensions:registry];
    [SessionSpecificsRoot registerAllExtensions:registry];
    [ThemeSpecificsRoot registerAllExtensions:registry];
    [TypedUrlSpecificsRoot registerAllExtensions:registry];
    [EncryptionRoot registerAllExtensions:registry];
    [SyncEnumsRoot registerAllExtensions:registry];
    [ClientCommandsRoot registerAllExtensions:registry];
    [ClientDebugInfoRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ProfilingData ()
@property int64_t metaDataWriteTime;
@property int64_t fileDataWriteTime;
@property int64_t userLookupTime;
@property int64_t metaDataReadTime;
@property int64_t fileDataReadTime;
@property int64_t totalRequestTime;
@end

@implementation ProfilingData

- (BOOL) hasMetaDataWriteTime {
  return !!hasMetaDataWriteTime_;
}
- (void) setHasMetaDataWriteTime:(BOOL) value {
  hasMetaDataWriteTime_ = !!value;
}
@synthesize metaDataWriteTime;
- (BOOL) hasFileDataWriteTime {
  return !!hasFileDataWriteTime_;
}
- (void) setHasFileDataWriteTime:(BOOL) value {
  hasFileDataWriteTime_ = !!value;
}
@synthesize fileDataWriteTime;
- (BOOL) hasUserLookupTime {
  return !!hasUserLookupTime_;
}
- (void) setHasUserLookupTime:(BOOL) value {
  hasUserLookupTime_ = !!value;
}
@synthesize userLookupTime;
- (BOOL) hasMetaDataReadTime {
  return !!hasMetaDataReadTime_;
}
- (void) setHasMetaDataReadTime:(BOOL) value {
  hasMetaDataReadTime_ = !!value;
}
@synthesize metaDataReadTime;
- (BOOL) hasFileDataReadTime {
  return !!hasFileDataReadTime_;
}
- (void) setHasFileDataReadTime:(BOOL) value {
  hasFileDataReadTime_ = !!value;
}
@synthesize fileDataReadTime;
- (BOOL) hasTotalRequestTime {
  return !!hasTotalRequestTime_;
}
- (void) setHasTotalRequestTime:(BOOL) value {
  hasTotalRequestTime_ = !!value;
}
@synthesize totalRequestTime;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.metaDataWriteTime = 0L;
    self.fileDataWriteTime = 0L;
    self.userLookupTime = 0L;
    self.metaDataReadTime = 0L;
    self.fileDataReadTime = 0L;
    self.totalRequestTime = 0L;
  }
  return self;
}
static ProfilingData* defaultProfilingDataInstance = nil;
+ (void) initialize {
  if (self == [ProfilingData class]) {
    defaultProfilingDataInstance = [[ProfilingData alloc] init];
  }
}
+ (ProfilingData*) defaultInstance {
  return defaultProfilingDataInstance;
}
- (ProfilingData*) defaultInstance {
  return defaultProfilingDataInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMetaDataWriteTime) {
    [output writeInt64:1 value:self.metaDataWriteTime];
  }
  if (self.hasFileDataWriteTime) {
    [output writeInt64:2 value:self.fileDataWriteTime];
  }
  if (self.hasUserLookupTime) {
    [output writeInt64:3 value:self.userLookupTime];
  }
  if (self.hasMetaDataReadTime) {
    [output writeInt64:4 value:self.metaDataReadTime];
  }
  if (self.hasFileDataReadTime) {
    [output writeInt64:5 value:self.fileDataReadTime];
  }
  if (self.hasTotalRequestTime) {
    [output writeInt64:6 value:self.totalRequestTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMetaDataWriteTime) {
    size += computeInt64Size(1, self.metaDataWriteTime);
  }
  if (self.hasFileDataWriteTime) {
    size += computeInt64Size(2, self.fileDataWriteTime);
  }
  if (self.hasUserLookupTime) {
    size += computeInt64Size(3, self.userLookupTime);
  }
  if (self.hasMetaDataReadTime) {
    size += computeInt64Size(4, self.metaDataReadTime);
  }
  if (self.hasFileDataReadTime) {
    size += computeInt64Size(5, self.fileDataReadTime);
  }
  if (self.hasTotalRequestTime) {
    size += computeInt64Size(6, self.totalRequestTime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ProfilingData*) parseFromData:(NSData*) data {
  return (ProfilingData*)[[[ProfilingData builder] mergeFromData:data] build];
}
+ (ProfilingData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProfilingData*)[[[ProfilingData builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProfilingData*) parseFromInputStream:(NSInputStream*) input {
  return (ProfilingData*)[[[ProfilingData builder] mergeFromInputStream:input] build];
}
+ (ProfilingData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProfilingData*)[[[ProfilingData builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProfilingData*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProfilingData*)[[[ProfilingData builder] mergeFromCodedInputStream:input] build];
}
+ (ProfilingData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProfilingData*)[[[ProfilingData builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProfilingData_Builder*) builder {
  return [[[ProfilingData_Builder alloc] init] autorelease];
}
+ (ProfilingData_Builder*) builderWithPrototype:(ProfilingData*) prototype {
  return [[ProfilingData builder] mergeFrom:prototype];
}
- (ProfilingData_Builder*) builder {
  return [ProfilingData builder];
}
@end

@interface ProfilingData_Builder()
@property (retain) ProfilingData* result;
@end

@implementation ProfilingData_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ProfilingData alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ProfilingData_Builder*) clear {
  self.result = [[[ProfilingData alloc] init] autorelease];
  return self;
}
- (ProfilingData_Builder*) clone {
  return [ProfilingData builderWithPrototype:result];
}
- (ProfilingData*) defaultInstance {
  return [ProfilingData defaultInstance];
}
- (ProfilingData*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProfilingData*) buildPartial {
  ProfilingData* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ProfilingData_Builder*) mergeFrom:(ProfilingData*) other {
  if (other == [ProfilingData defaultInstance]) {
    return self;
  }
  if (other.hasMetaDataWriteTime) {
    [self setMetaDataWriteTime:other.metaDataWriteTime];
  }
  if (other.hasFileDataWriteTime) {
    [self setFileDataWriteTime:other.fileDataWriteTime];
  }
  if (other.hasUserLookupTime) {
    [self setUserLookupTime:other.userLookupTime];
  }
  if (other.hasMetaDataReadTime) {
    [self setMetaDataReadTime:other.metaDataReadTime];
  }
  if (other.hasFileDataReadTime) {
    [self setFileDataReadTime:other.fileDataReadTime];
  }
  if (other.hasTotalRequestTime) {
    [self setTotalRequestTime:other.totalRequestTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProfilingData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProfilingData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMetaDataWriteTime:[input readInt64]];
        break;
      }
      case 16: {
        [self setFileDataWriteTime:[input readInt64]];
        break;
      }
      case 24: {
        [self setUserLookupTime:[input readInt64]];
        break;
      }
      case 32: {
        [self setMetaDataReadTime:[input readInt64]];
        break;
      }
      case 40: {
        [self setFileDataReadTime:[input readInt64]];
        break;
      }
      case 48: {
        [self setTotalRequestTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMetaDataWriteTime {
  return result.hasMetaDataWriteTime;
}
- (int64_t) metaDataWriteTime {
  return result.metaDataWriteTime;
}
- (ProfilingData_Builder*) setMetaDataWriteTime:(int64_t) value {
  result.hasMetaDataWriteTime = YES;
  result.metaDataWriteTime = value;
  return self;
}
- (ProfilingData_Builder*) clearMetaDataWriteTime {
  result.hasMetaDataWriteTime = NO;
  result.metaDataWriteTime = 0L;
  return self;
}
- (BOOL) hasFileDataWriteTime {
  return result.hasFileDataWriteTime;
}
- (int64_t) fileDataWriteTime {
  return result.fileDataWriteTime;
}
- (ProfilingData_Builder*) setFileDataWriteTime:(int64_t) value {
  result.hasFileDataWriteTime = YES;
  result.fileDataWriteTime = value;
  return self;
}
- (ProfilingData_Builder*) clearFileDataWriteTime {
  result.hasFileDataWriteTime = NO;
  result.fileDataWriteTime = 0L;
  return self;
}
- (BOOL) hasUserLookupTime {
  return result.hasUserLookupTime;
}
- (int64_t) userLookupTime {
  return result.userLookupTime;
}
- (ProfilingData_Builder*) setUserLookupTime:(int64_t) value {
  result.hasUserLookupTime = YES;
  result.userLookupTime = value;
  return self;
}
- (ProfilingData_Builder*) clearUserLookupTime {
  result.hasUserLookupTime = NO;
  result.userLookupTime = 0L;
  return self;
}
- (BOOL) hasMetaDataReadTime {
  return result.hasMetaDataReadTime;
}
- (int64_t) metaDataReadTime {
  return result.metaDataReadTime;
}
- (ProfilingData_Builder*) setMetaDataReadTime:(int64_t) value {
  result.hasMetaDataReadTime = YES;
  result.metaDataReadTime = value;
  return self;
}
- (ProfilingData_Builder*) clearMetaDataReadTime {
  result.hasMetaDataReadTime = NO;
  result.metaDataReadTime = 0L;
  return self;
}
- (BOOL) hasFileDataReadTime {
  return result.hasFileDataReadTime;
}
- (int64_t) fileDataReadTime {
  return result.fileDataReadTime;
}
- (ProfilingData_Builder*) setFileDataReadTime:(int64_t) value {
  result.hasFileDataReadTime = YES;
  result.fileDataReadTime = value;
  return self;
}
- (ProfilingData_Builder*) clearFileDataReadTime {
  result.hasFileDataReadTime = NO;
  result.fileDataReadTime = 0L;
  return self;
}
- (BOOL) hasTotalRequestTime {
  return result.hasTotalRequestTime;
}
- (int64_t) totalRequestTime {
  return result.totalRequestTime;
}
- (ProfilingData_Builder*) setTotalRequestTime:(int64_t) value {
  result.hasTotalRequestTime = YES;
  result.totalRequestTime = value;
  return self;
}
- (ProfilingData_Builder*) clearTotalRequestTime {
  result.hasTotalRequestTime = NO;
  result.totalRequestTime = 0L;
  return self;
}
@end

@interface EntitySpecifics ()
@property (retain) EncryptedData* encrypted;
@property (retain) AutofillSpecifics* autofill;
@property (retain) BookmarkSpecifics* bookmark;
@property (retain) PreferenceSpecifics* preference;
@property (retain) TypedUrlSpecifics* typedUrl;
@property (retain) ThemeSpecifics* theme;
@property (retain) AppNotification* appNotification;
@property (retain) PasswordSpecifics* password;
@property (retain) NigoriSpecifics* nigori;
@property (retain) ExtensionSpecifics* extension;
@property (retain) AppSpecifics* app;
@property (retain) SessionSpecifics* session;
@property (retain) AutofillProfileSpecifics* autofillProfile;
@property (retain) SearchEngineSpecifics* searchEngine;
@property (retain) ExtensionSettingSpecifics* extensionSetting;
@property (retain) AppSettingSpecifics* appSetting;
@end

@implementation EntitySpecifics

- (BOOL) hasEncrypted {
  return !!hasEncrypted_;
}
- (void) setHasEncrypted:(BOOL) value {
  hasEncrypted_ = !!value;
}
@synthesize encrypted;
- (BOOL) hasAutofill {
  return !!hasAutofill_;
}
- (void) setHasAutofill:(BOOL) value {
  hasAutofill_ = !!value;
}
@synthesize autofill;
- (BOOL) hasBookmark {
  return !!hasBookmark_;
}
- (void) setHasBookmark:(BOOL) value {
  hasBookmark_ = !!value;
}
@synthesize bookmark;
- (BOOL) hasPreference {
  return !!hasPreference_;
}
- (void) setHasPreference:(BOOL) value {
  hasPreference_ = !!value;
}
@synthesize preference;
- (BOOL) hasTypedUrl {
  return !!hasTypedUrl_;
}
- (void) setHasTypedUrl:(BOOL) value {
  hasTypedUrl_ = !!value;
}
@synthesize typedUrl;
- (BOOL) hasTheme {
  return !!hasTheme_;
}
- (void) setHasTheme:(BOOL) value {
  hasTheme_ = !!value;
}
@synthesize theme;
- (BOOL) hasAppNotification {
  return !!hasAppNotification_;
}
- (void) setHasAppNotification:(BOOL) value {
  hasAppNotification_ = !!value;
}
@synthesize appNotification;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) value {
  hasPassword_ = !!value;
}
@synthesize password;
- (BOOL) hasNigori {
  return !!hasNigori_;
}
- (void) setHasNigori:(BOOL) value {
  hasNigori_ = !!value;
}
@synthesize nigori;
- (BOOL) hasExtension {
  return !!hasExtension_;
}
- (void) setHasExtension:(BOOL) value {
  hasExtension_ = !!value;
}
@synthesize extension;
- (BOOL) hasApp {
  return !!hasApp_;
}
- (void) setHasApp:(BOOL) value {
  hasApp_ = !!value;
}
@synthesize app;
- (BOOL) hasSession {
  return !!hasSession_;
}
- (void) setHasSession:(BOOL) value {
  hasSession_ = !!value;
}
@synthesize session;
- (BOOL) hasAutofillProfile {
  return !!hasAutofillProfile_;
}
- (void) setHasAutofillProfile:(BOOL) value {
  hasAutofillProfile_ = !!value;
}
@synthesize autofillProfile;
- (BOOL) hasSearchEngine {
  return !!hasSearchEngine_;
}
- (void) setHasSearchEngine:(BOOL) value {
  hasSearchEngine_ = !!value;
}
@synthesize searchEngine;
- (BOOL) hasExtensionSetting {
  return !!hasExtensionSetting_;
}
- (void) setHasExtensionSetting:(BOOL) value {
  hasExtensionSetting_ = !!value;
}
@synthesize extensionSetting;
- (BOOL) hasAppSetting {
  return !!hasAppSetting_;
}
- (void) setHasAppSetting:(BOOL) value {
  hasAppSetting_ = !!value;
}
@synthesize appSetting;
- (void) dealloc {
  self.encrypted = nil;
  self.autofill = nil;
  self.bookmark = nil;
  self.preference = nil;
  self.typedUrl = nil;
  self.theme = nil;
  self.appNotification = nil;
  self.password = nil;
  self.nigori = nil;
  self.extension = nil;
  self.app = nil;
  self.session = nil;
  self.autofillProfile = nil;
  self.searchEngine = nil;
  self.extensionSetting = nil;
  self.appSetting = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.encrypted = [EncryptedData defaultInstance];
    self.autofill = [AutofillSpecifics defaultInstance];
    self.bookmark = [BookmarkSpecifics defaultInstance];
    self.preference = [PreferenceSpecifics defaultInstance];
    self.typedUrl = [TypedUrlSpecifics defaultInstance];
    self.theme = [ThemeSpecifics defaultInstance];
    self.appNotification = [AppNotification defaultInstance];
    self.password = [PasswordSpecifics defaultInstance];
    self.nigori = [NigoriSpecifics defaultInstance];
    self.extension = [ExtensionSpecifics defaultInstance];
    self.app = [AppSpecifics defaultInstance];
    self.session = [SessionSpecifics defaultInstance];
    self.autofillProfile = [AutofillProfileSpecifics defaultInstance];
    self.searchEngine = [SearchEngineSpecifics defaultInstance];
    self.extensionSetting = [ExtensionSettingSpecifics defaultInstance];
    self.appSetting = [AppSettingSpecifics defaultInstance];
  }
  return self;
}
static EntitySpecifics* defaultEntitySpecificsInstance = nil;
+ (void) initialize {
  if (self == [EntitySpecifics class]) {
    defaultEntitySpecificsInstance = [[EntitySpecifics alloc] init];
  }
}
+ (EntitySpecifics*) defaultInstance {
  return defaultEntitySpecificsInstance;
}
- (EntitySpecifics*) defaultInstance {
  return defaultEntitySpecificsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasEncrypted) {
    [output writeMessage:1 value:self.encrypted];
  }
  if (self.hasAutofill) {
    [output writeMessage:31729 value:self.autofill];
  }
  if (self.hasBookmark) {
    [output writeMessage:32904 value:self.bookmark];
  }
  if (self.hasPreference) {
    [output writeMessage:37702 value:self.preference];
  }
  if (self.hasTypedUrl) {
    [output writeMessage:40781 value:self.typedUrl];
  }
  if (self.hasTheme) {
    [output writeMessage:41210 value:self.theme];
  }
  if (self.hasAppNotification) {
    [output writeMessage:45184 value:self.appNotification];
  }
  if (self.hasPassword) {
    [output writeMessage:45873 value:self.password];
  }
  if (self.hasNigori) {
    [output writeMessage:47745 value:self.nigori];
  }
  if (self.hasExtension) {
    [output writeMessage:48119 value:self.extension];
  }
  if (self.hasApp) {
    [output writeMessage:48364 value:self.app];
  }
  if (self.hasSession) {
    [output writeMessage:50119 value:self.session];
  }
  if (self.hasAutofillProfile) {
    [output writeMessage:63951 value:self.autofillProfile];
  }
  if (self.hasSearchEngine) {
    [output writeMessage:88610 value:self.searchEngine];
  }
  if (self.hasExtensionSetting) {
    [output writeMessage:96159 value:self.extensionSetting];
  }
  if (self.hasAppSetting) {
    [output writeMessage:103656 value:self.appSetting];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasEncrypted) {
    size += computeMessageSize(1, self.encrypted);
  }
  if (self.hasAutofill) {
    size += computeMessageSize(31729, self.autofill);
  }
  if (self.hasBookmark) {
    size += computeMessageSize(32904, self.bookmark);
  }
  if (self.hasPreference) {
    size += computeMessageSize(37702, self.preference);
  }
  if (self.hasTypedUrl) {
    size += computeMessageSize(40781, self.typedUrl);
  }
  if (self.hasTheme) {
    size += computeMessageSize(41210, self.theme);
  }
  if (self.hasAppNotification) {
    size += computeMessageSize(45184, self.appNotification);
  }
  if (self.hasPassword) {
    size += computeMessageSize(45873, self.password);
  }
  if (self.hasNigori) {
    size += computeMessageSize(47745, self.nigori);
  }
  if (self.hasExtension) {
    size += computeMessageSize(48119, self.extension);
  }
  if (self.hasApp) {
    size += computeMessageSize(48364, self.app);
  }
  if (self.hasSession) {
    size += computeMessageSize(50119, self.session);
  }
  if (self.hasAutofillProfile) {
    size += computeMessageSize(63951, self.autofillProfile);
  }
  if (self.hasSearchEngine) {
    size += computeMessageSize(88610, self.searchEngine);
  }
  if (self.hasExtensionSetting) {
    size += computeMessageSize(96159, self.extensionSetting);
  }
  if (self.hasAppSetting) {
    size += computeMessageSize(103656, self.appSetting);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (EntitySpecifics*) parseFromData:(NSData*) data {
  return (EntitySpecifics*)[[[EntitySpecifics builder] mergeFromData:data] build];
}
+ (EntitySpecifics*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EntitySpecifics*)[[[EntitySpecifics builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EntitySpecifics*) parseFromInputStream:(NSInputStream*) input {
  return (EntitySpecifics*)[[[EntitySpecifics builder] mergeFromInputStream:input] build];
}
+ (EntitySpecifics*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EntitySpecifics*)[[[EntitySpecifics builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EntitySpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EntitySpecifics*)[[[EntitySpecifics builder] mergeFromCodedInputStream:input] build];
}
+ (EntitySpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EntitySpecifics*)[[[EntitySpecifics builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EntitySpecifics_Builder*) builder {
  return [[[EntitySpecifics_Builder alloc] init] autorelease];
}
+ (EntitySpecifics_Builder*) builderWithPrototype:(EntitySpecifics*) prototype {
  return [[EntitySpecifics builder] mergeFrom:prototype];
}
- (EntitySpecifics_Builder*) builder {
  return [EntitySpecifics builder];
}
@end

@interface EntitySpecifics_Builder()
@property (retain) EntitySpecifics* result;
@end

@implementation EntitySpecifics_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EntitySpecifics alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EntitySpecifics_Builder*) clear {
  self.result = [[[EntitySpecifics alloc] init] autorelease];
  return self;
}
- (EntitySpecifics_Builder*) clone {
  return [EntitySpecifics builderWithPrototype:result];
}
- (EntitySpecifics*) defaultInstance {
  return [EntitySpecifics defaultInstance];
}
- (EntitySpecifics*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EntitySpecifics*) buildPartial {
  EntitySpecifics* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EntitySpecifics_Builder*) mergeFrom:(EntitySpecifics*) other {
  if (other == [EntitySpecifics defaultInstance]) {
    return self;
  }
  if (other.hasEncrypted) {
    [self mergeEncrypted:other.encrypted];
  }
  if (other.hasAutofill) {
    [self mergeAutofill:other.autofill];
  }
  if (other.hasBookmark) {
    [self mergeBookmark:other.bookmark];
  }
  if (other.hasPreference) {
    [self mergePreference:other.preference];
  }
  if (other.hasTypedUrl) {
    [self mergeTypedUrl:other.typedUrl];
  }
  if (other.hasTheme) {
    [self mergeTheme:other.theme];
  }
  if (other.hasAppNotification) {
    [self mergeAppNotification:other.appNotification];
  }
  if (other.hasPassword) {
    [self mergePassword:other.password];
  }
  if (other.hasNigori) {
    [self mergeNigori:other.nigori];
  }
  if (other.hasExtension) {
    [self mergeExtension:other.extension];
  }
  if (other.hasApp) {
    [self mergeApp:other.app];
  }
  if (other.hasSession) {
    [self mergeSession:other.session];
  }
  if (other.hasAutofillProfile) {
    [self mergeAutofillProfile:other.autofillProfile];
  }
  if (other.hasSearchEngine) {
    [self mergeSearchEngine:other.searchEngine];
  }
  if (other.hasExtensionSetting) {
    [self mergeExtensionSetting:other.extensionSetting];
  }
  if (other.hasAppSetting) {
    [self mergeAppSetting:other.appSetting];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EntitySpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EntitySpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EncryptedData_Builder* subBuilder = [EncryptedData builder];
        if (self.hasEncrypted) {
          [subBuilder mergeFrom:self.encrypted];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEncrypted:[subBuilder buildPartial]];
        break;
      }
      case 253834: {
        AutofillSpecifics_Builder* subBuilder = [AutofillSpecifics builder];
        if (self.hasAutofill) {
          [subBuilder mergeFrom:self.autofill];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAutofill:[subBuilder buildPartial]];
        break;
      }
      case 263234: {
        BookmarkSpecifics_Builder* subBuilder = [BookmarkSpecifics builder];
        if (self.hasBookmark) {
          [subBuilder mergeFrom:self.bookmark];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBookmark:[subBuilder buildPartial]];
        break;
      }
      case 301618: {
        PreferenceSpecifics_Builder* subBuilder = [PreferenceSpecifics builder];
        if (self.hasPreference) {
          [subBuilder mergeFrom:self.preference];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPreference:[subBuilder buildPartial]];
        break;
      }
      case 326250: {
        TypedUrlSpecifics_Builder* subBuilder = [TypedUrlSpecifics builder];
        if (self.hasTypedUrl) {
          [subBuilder mergeFrom:self.typedUrl];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTypedUrl:[subBuilder buildPartial]];
        break;
      }
      case 329682: {
        ThemeSpecifics_Builder* subBuilder = [ThemeSpecifics builder];
        if (self.hasTheme) {
          [subBuilder mergeFrom:self.theme];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTheme:[subBuilder buildPartial]];
        break;
      }
      case 361474: {
        AppNotification_Builder* subBuilder = [AppNotification builder];
        if (self.hasAppNotification) {
          [subBuilder mergeFrom:self.appNotification];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAppNotification:[subBuilder buildPartial]];
        break;
      }
      case 366986: {
        PasswordSpecifics_Builder* subBuilder = [PasswordSpecifics builder];
        if (self.hasPassword) {
          [subBuilder mergeFrom:self.password];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPassword:[subBuilder buildPartial]];
        break;
      }
      case 381962: {
        NigoriSpecifics_Builder* subBuilder = [NigoriSpecifics builder];
        if (self.hasNigori) {
          [subBuilder mergeFrom:self.nigori];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setNigori:[subBuilder buildPartial]];
        break;
      }
      case 384954: {
        ExtensionSpecifics_Builder* subBuilder = [ExtensionSpecifics builder];
        if (self.hasExtension) {
          [subBuilder mergeFrom:self.extension];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setExtension:[subBuilder buildPartial]];
        break;
      }
      case 386914: {
        AppSpecifics_Builder* subBuilder = [AppSpecifics builder];
        if (self.hasApp) {
          [subBuilder mergeFrom:self.app];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setApp:[subBuilder buildPartial]];
        break;
      }
      case 400954: {
        SessionSpecifics_Builder* subBuilder = [SessionSpecifics builder];
        if (self.hasSession) {
          [subBuilder mergeFrom:self.session];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSession:[subBuilder buildPartial]];
        break;
      }
      case 511610: {
        AutofillProfileSpecifics_Builder* subBuilder = [AutofillProfileSpecifics builder];
        if (self.hasAutofillProfile) {
          [subBuilder mergeFrom:self.autofillProfile];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAutofillProfile:[subBuilder buildPartial]];
        break;
      }
      case 708882: {
        SearchEngineSpecifics_Builder* subBuilder = [SearchEngineSpecifics builder];
        if (self.hasSearchEngine) {
          [subBuilder mergeFrom:self.searchEngine];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSearchEngine:[subBuilder buildPartial]];
        break;
      }
      case 769274: {
        ExtensionSettingSpecifics_Builder* subBuilder = [ExtensionSettingSpecifics builder];
        if (self.hasExtensionSetting) {
          [subBuilder mergeFrom:self.extensionSetting];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setExtensionSetting:[subBuilder buildPartial]];
        break;
      }
      case 829250: {
        AppSettingSpecifics_Builder* subBuilder = [AppSettingSpecifics builder];
        if (self.hasAppSetting) {
          [subBuilder mergeFrom:self.appSetting];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAppSetting:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasEncrypted {
  return result.hasEncrypted;
}
- (EncryptedData*) encrypted {
  return result.encrypted;
}
- (EntitySpecifics_Builder*) setEncrypted:(EncryptedData*) value {
  result.hasEncrypted = YES;
  result.encrypted = value;
  return self;
}
- (EntitySpecifics_Builder*) setEncryptedBuilder:(EncryptedData_Builder*) builderForValue {
  return [self setEncrypted:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergeEncrypted:(EncryptedData*) value {
  if (result.hasEncrypted &&
      result.encrypted != [EncryptedData defaultInstance]) {
    result.encrypted =
      [[[EncryptedData builderWithPrototype:result.encrypted] mergeFrom:value] buildPartial];
  } else {
    result.encrypted = value;
  }
  result.hasEncrypted = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearEncrypted {
  result.hasEncrypted = NO;
  result.encrypted = [EncryptedData defaultInstance];
  return self;
}
- (BOOL) hasAutofill {
  return result.hasAutofill;
}
- (AutofillSpecifics*) autofill {
  return result.autofill;
}
- (EntitySpecifics_Builder*) setAutofill:(AutofillSpecifics*) value {
  result.hasAutofill = YES;
  result.autofill = value;
  return self;
}
- (EntitySpecifics_Builder*) setAutofillBuilder:(AutofillSpecifics_Builder*) builderForValue {
  return [self setAutofill:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergeAutofill:(AutofillSpecifics*) value {
  if (result.hasAutofill &&
      result.autofill != [AutofillSpecifics defaultInstance]) {
    result.autofill =
      [[[AutofillSpecifics builderWithPrototype:result.autofill] mergeFrom:value] buildPartial];
  } else {
    result.autofill = value;
  }
  result.hasAutofill = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearAutofill {
  result.hasAutofill = NO;
  result.autofill = [AutofillSpecifics defaultInstance];
  return self;
}
- (BOOL) hasBookmark {
  return result.hasBookmark;
}
- (BookmarkSpecifics*) bookmark {
  return result.bookmark;
}
- (EntitySpecifics_Builder*) setBookmark:(BookmarkSpecifics*) value {
  result.hasBookmark = YES;
  result.bookmark = value;
  return self;
}
- (EntitySpecifics_Builder*) setBookmarkBuilder:(BookmarkSpecifics_Builder*) builderForValue {
  return [self setBookmark:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergeBookmark:(BookmarkSpecifics*) value {
  if (result.hasBookmark &&
      result.bookmark != [BookmarkSpecifics defaultInstance]) {
    result.bookmark =
      [[[BookmarkSpecifics builderWithPrototype:result.bookmark] mergeFrom:value] buildPartial];
  } else {
    result.bookmark = value;
  }
  result.hasBookmark = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearBookmark {
  result.hasBookmark = NO;
  result.bookmark = [BookmarkSpecifics defaultInstance];
  return self;
}
- (BOOL) hasPreference {
  return result.hasPreference;
}
- (PreferenceSpecifics*) preference {
  return result.preference;
}
- (EntitySpecifics_Builder*) setPreference:(PreferenceSpecifics*) value {
  result.hasPreference = YES;
  result.preference = value;
  return self;
}
- (EntitySpecifics_Builder*) setPreferenceBuilder:(PreferenceSpecifics_Builder*) builderForValue {
  return [self setPreference:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergePreference:(PreferenceSpecifics*) value {
  if (result.hasPreference &&
      result.preference != [PreferenceSpecifics defaultInstance]) {
    result.preference =
      [[[PreferenceSpecifics builderWithPrototype:result.preference] mergeFrom:value] buildPartial];
  } else {
    result.preference = value;
  }
  result.hasPreference = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearPreference {
  result.hasPreference = NO;
  result.preference = [PreferenceSpecifics defaultInstance];
  return self;
}
- (BOOL) hasTypedUrl {
  return result.hasTypedUrl;
}
- (TypedUrlSpecifics*) typedUrl {
  return result.typedUrl;
}
- (EntitySpecifics_Builder*) setTypedUrl:(TypedUrlSpecifics*) value {
  result.hasTypedUrl = YES;
  result.typedUrl = value;
  return self;
}
- (EntitySpecifics_Builder*) setTypedUrlBuilder:(TypedUrlSpecifics_Builder*) builderForValue {
  return [self setTypedUrl:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergeTypedUrl:(TypedUrlSpecifics*) value {
  if (result.hasTypedUrl &&
      result.typedUrl != [TypedUrlSpecifics defaultInstance]) {
    result.typedUrl =
      [[[TypedUrlSpecifics builderWithPrototype:result.typedUrl] mergeFrom:value] buildPartial];
  } else {
    result.typedUrl = value;
  }
  result.hasTypedUrl = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearTypedUrl {
  result.hasTypedUrl = NO;
  result.typedUrl = [TypedUrlSpecifics defaultInstance];
  return self;
}
- (BOOL) hasTheme {
  return result.hasTheme;
}
- (ThemeSpecifics*) theme {
  return result.theme;
}
- (EntitySpecifics_Builder*) setTheme:(ThemeSpecifics*) value {
  result.hasTheme = YES;
  result.theme = value;
  return self;
}
- (EntitySpecifics_Builder*) setThemeBuilder:(ThemeSpecifics_Builder*) builderForValue {
  return [self setTheme:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergeTheme:(ThemeSpecifics*) value {
  if (result.hasTheme &&
      result.theme != [ThemeSpecifics defaultInstance]) {
    result.theme =
      [[[ThemeSpecifics builderWithPrototype:result.theme] mergeFrom:value] buildPartial];
  } else {
    result.theme = value;
  }
  result.hasTheme = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearTheme {
  result.hasTheme = NO;
  result.theme = [ThemeSpecifics defaultInstance];
  return self;
}
- (BOOL) hasAppNotification {
  return result.hasAppNotification;
}
- (AppNotification*) appNotification {
  return result.appNotification;
}
- (EntitySpecifics_Builder*) setAppNotification:(AppNotification*) value {
  result.hasAppNotification = YES;
  result.appNotification = value;
  return self;
}
- (EntitySpecifics_Builder*) setAppNotificationBuilder:(AppNotification_Builder*) builderForValue {
  return [self setAppNotification:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergeAppNotification:(AppNotification*) value {
  if (result.hasAppNotification &&
      result.appNotification != [AppNotification defaultInstance]) {
    result.appNotification =
      [[[AppNotification builderWithPrototype:result.appNotification] mergeFrom:value] buildPartial];
  } else {
    result.appNotification = value;
  }
  result.hasAppNotification = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearAppNotification {
  result.hasAppNotification = NO;
  result.appNotification = [AppNotification defaultInstance];
  return self;
}
- (BOOL) hasPassword {
  return result.hasPassword;
}
- (PasswordSpecifics*) password {
  return result.password;
}
- (EntitySpecifics_Builder*) setPassword:(PasswordSpecifics*) value {
  result.hasPassword = YES;
  result.password = value;
  return self;
}
- (EntitySpecifics_Builder*) setPasswordBuilder:(PasswordSpecifics_Builder*) builderForValue {
  return [self setPassword:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergePassword:(PasswordSpecifics*) value {
  if (result.hasPassword &&
      result.password != [PasswordSpecifics defaultInstance]) {
    result.password =
      [[[PasswordSpecifics builderWithPrototype:result.password] mergeFrom:value] buildPartial];
  } else {
    result.password = value;
  }
  result.hasPassword = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearPassword {
  result.hasPassword = NO;
  result.password = [PasswordSpecifics defaultInstance];
  return self;
}
- (BOOL) hasNigori {
  return result.hasNigori;
}
- (NigoriSpecifics*) nigori {
  return result.nigori;
}
- (EntitySpecifics_Builder*) setNigori:(NigoriSpecifics*) value {
  result.hasNigori = YES;
  result.nigori = value;
  return self;
}
- (EntitySpecifics_Builder*) setNigoriBuilder:(NigoriSpecifics_Builder*) builderForValue {
  return [self setNigori:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergeNigori:(NigoriSpecifics*) value {
  if (result.hasNigori &&
      result.nigori != [NigoriSpecifics defaultInstance]) {
    result.nigori =
      [[[NigoriSpecifics builderWithPrototype:result.nigori] mergeFrom:value] buildPartial];
  } else {
    result.nigori = value;
  }
  result.hasNigori = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearNigori {
  result.hasNigori = NO;
  result.nigori = [NigoriSpecifics defaultInstance];
  return self;
}
- (BOOL) hasExtension {
  return result.hasExtension;
}
- (ExtensionSpecifics*) extension {
  return result.extension;
}
- (EntitySpecifics_Builder*) setExtension:(ExtensionSpecifics*) value {
  result.hasExtension = YES;
  result.extension = value;
  return self;
}
- (EntitySpecifics_Builder*) setExtensionBuilder:(ExtensionSpecifics_Builder*) builderForValue {
  return [self setExtension:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergeExtension:(ExtensionSpecifics*) value {
  if (result.hasExtension &&
      result.extension != [ExtensionSpecifics defaultInstance]) {
    result.extension =
      [[[ExtensionSpecifics builderWithPrototype:result.extension] mergeFrom:value] buildPartial];
  } else {
    result.extension = value;
  }
  result.hasExtension = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearExtension {
  result.hasExtension = NO;
  result.extension = [ExtensionSpecifics defaultInstance];
  return self;
}
- (BOOL) hasApp {
  return result.hasApp;
}
- (AppSpecifics*) app {
  return result.app;
}
- (EntitySpecifics_Builder*) setApp:(AppSpecifics*) value {
  result.hasApp = YES;
  result.app = value;
  return self;
}
- (EntitySpecifics_Builder*) setAppBuilder:(AppSpecifics_Builder*) builderForValue {
  return [self setApp:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergeApp:(AppSpecifics*) value {
  if (result.hasApp &&
      result.app != [AppSpecifics defaultInstance]) {
    result.app =
      [[[AppSpecifics builderWithPrototype:result.app] mergeFrom:value] buildPartial];
  } else {
    result.app = value;
  }
  result.hasApp = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearApp {
  result.hasApp = NO;
  result.app = [AppSpecifics defaultInstance];
  return self;
}
- (BOOL) hasSession {
  return result.hasSession;
}
- (SessionSpecifics*) session {
  return result.session;
}
- (EntitySpecifics_Builder*) setSession:(SessionSpecifics*) value {
  result.hasSession = YES;
  result.session = value;
  return self;
}
- (EntitySpecifics_Builder*) setSessionBuilder:(SessionSpecifics_Builder*) builderForValue {
  return [self setSession:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergeSession:(SessionSpecifics*) value {
  if (result.hasSession &&
      result.session != [SessionSpecifics defaultInstance]) {
    result.session =
      [[[SessionSpecifics builderWithPrototype:result.session] mergeFrom:value] buildPartial];
  } else {
    result.session = value;
  }
  result.hasSession = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearSession {
  result.hasSession = NO;
  result.session = [SessionSpecifics defaultInstance];
  return self;
}
- (BOOL) hasAutofillProfile {
  return result.hasAutofillProfile;
}
- (AutofillProfileSpecifics*) autofillProfile {
  return result.autofillProfile;
}
- (EntitySpecifics_Builder*) setAutofillProfile:(AutofillProfileSpecifics*) value {
  result.hasAutofillProfile = YES;
  result.autofillProfile = value;
  return self;
}
- (EntitySpecifics_Builder*) setAutofillProfileBuilder:(AutofillProfileSpecifics_Builder*) builderForValue {
  return [self setAutofillProfile:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergeAutofillProfile:(AutofillProfileSpecifics*) value {
  if (result.hasAutofillProfile &&
      result.autofillProfile != [AutofillProfileSpecifics defaultInstance]) {
    result.autofillProfile =
      [[[AutofillProfileSpecifics builderWithPrototype:result.autofillProfile] mergeFrom:value] buildPartial];
  } else {
    result.autofillProfile = value;
  }
  result.hasAutofillProfile = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearAutofillProfile {
  result.hasAutofillProfile = NO;
  result.autofillProfile = [AutofillProfileSpecifics defaultInstance];
  return self;
}
- (BOOL) hasSearchEngine {
  return result.hasSearchEngine;
}
- (SearchEngineSpecifics*) searchEngine {
  return result.searchEngine;
}
- (EntitySpecifics_Builder*) setSearchEngine:(SearchEngineSpecifics*) value {
  result.hasSearchEngine = YES;
  result.searchEngine = value;
  return self;
}
- (EntitySpecifics_Builder*) setSearchEngineBuilder:(SearchEngineSpecifics_Builder*) builderForValue {
  return [self setSearchEngine:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergeSearchEngine:(SearchEngineSpecifics*) value {
  if (result.hasSearchEngine &&
      result.searchEngine != [SearchEngineSpecifics defaultInstance]) {
    result.searchEngine =
      [[[SearchEngineSpecifics builderWithPrototype:result.searchEngine] mergeFrom:value] buildPartial];
  } else {
    result.searchEngine = value;
  }
  result.hasSearchEngine = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearSearchEngine {
  result.hasSearchEngine = NO;
  result.searchEngine = [SearchEngineSpecifics defaultInstance];
  return self;
}
- (BOOL) hasExtensionSetting {
  return result.hasExtensionSetting;
}
- (ExtensionSettingSpecifics*) extensionSetting {
  return result.extensionSetting;
}
- (EntitySpecifics_Builder*) setExtensionSetting:(ExtensionSettingSpecifics*) value {
  result.hasExtensionSetting = YES;
  result.extensionSetting = value;
  return self;
}
- (EntitySpecifics_Builder*) setExtensionSettingBuilder:(ExtensionSettingSpecifics_Builder*) builderForValue {
  return [self setExtensionSetting:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergeExtensionSetting:(ExtensionSettingSpecifics*) value {
  if (result.hasExtensionSetting &&
      result.extensionSetting != [ExtensionSettingSpecifics defaultInstance]) {
    result.extensionSetting =
      [[[ExtensionSettingSpecifics builderWithPrototype:result.extensionSetting] mergeFrom:value] buildPartial];
  } else {
    result.extensionSetting = value;
  }
  result.hasExtensionSetting = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearExtensionSetting {
  result.hasExtensionSetting = NO;
  result.extensionSetting = [ExtensionSettingSpecifics defaultInstance];
  return self;
}
- (BOOL) hasAppSetting {
  return result.hasAppSetting;
}
- (AppSettingSpecifics*) appSetting {
  return result.appSetting;
}
- (EntitySpecifics_Builder*) setAppSetting:(AppSettingSpecifics*) value {
  result.hasAppSetting = YES;
  result.appSetting = value;
  return self;
}
- (EntitySpecifics_Builder*) setAppSettingBuilder:(AppSettingSpecifics_Builder*) builderForValue {
  return [self setAppSetting:[builderForValue build]];
}
- (EntitySpecifics_Builder*) mergeAppSetting:(AppSettingSpecifics*) value {
  if (result.hasAppSetting &&
      result.appSetting != [AppSettingSpecifics defaultInstance]) {
    result.appSetting =
      [[[AppSettingSpecifics builderWithPrototype:result.appSetting] mergeFrom:value] buildPartial];
  } else {
    result.appSetting = value;
  }
  result.hasAppSetting = YES;
  return self;
}
- (EntitySpecifics_Builder*) clearAppSetting {
  result.hasAppSetting = NO;
  result.appSetting = [AppSettingSpecifics defaultInstance];
  return self;
}
@end

@interface SyncEntity ()
@property (retain) NSString* idString;
@property (retain) NSString* parentIdString;
@property (retain) NSString* oldParentId;
@property int64_t version;
@property int64_t mtime;
@property int64_t ctime;
@property (retain) NSString* name;
@property (retain) NSString* nonUniqueName;
@property int64_t syncTimestamp;
@property (retain) NSString* serverDefinedUniqueTag;
@property (retain) SyncEntity_BookmarkData* bookmarkData;
@property int64_t positionInParent;
@property (retain) NSString* insertAfterItemId;
@property BOOL deleted;
@property (retain) NSString* originatorCacheGuid;
@property (retain) NSString* originatorClientItemId;
@property (retain) EntitySpecifics* specifics;
@property BOOL folder;
@property (retain) NSString* clientDefinedUniqueTag;
@property (retain) NSData* ordinalInParent;
@end

@implementation SyncEntity

- (BOOL) hasIdString {
  return !!hasIdString_;
}
- (void) setHasIdString:(BOOL) value {
  hasIdString_ = !!value;
}
@synthesize idString;
- (BOOL) hasParentIdString {
  return !!hasParentIdString_;
}
- (void) setHasParentIdString:(BOOL) value {
  hasParentIdString_ = !!value;
}
@synthesize parentIdString;
- (BOOL) hasOldParentId {
  return !!hasOldParentId_;
}
- (void) setHasOldParentId:(BOOL) value {
  hasOldParentId_ = !!value;
}
@synthesize oldParentId;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value {
  hasVersion_ = !!value;
}
@synthesize version;
- (BOOL) hasMtime {
  return !!hasMtime_;
}
- (void) setHasMtime:(BOOL) value {
  hasMtime_ = !!value;
}
@synthesize mtime;
- (BOOL) hasCtime {
  return !!hasCtime_;
}
- (void) setHasCtime:(BOOL) value {
  hasCtime_ = !!value;
}
@synthesize ctime;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasNonUniqueName {
  return !!hasNonUniqueName_;
}
- (void) setHasNonUniqueName:(BOOL) value {
  hasNonUniqueName_ = !!value;
}
@synthesize nonUniqueName;
- (BOOL) hasSyncTimestamp {
  return !!hasSyncTimestamp_;
}
- (void) setHasSyncTimestamp:(BOOL) value {
  hasSyncTimestamp_ = !!value;
}
@synthesize syncTimestamp;
- (BOOL) hasServerDefinedUniqueTag {
  return !!hasServerDefinedUniqueTag_;
}
- (void) setHasServerDefinedUniqueTag:(BOOL) value {
  hasServerDefinedUniqueTag_ = !!value;
}
@synthesize serverDefinedUniqueTag;
- (BOOL) hasBookmarkData {
  return !!hasBookmarkData_;
}
- (void) setHasBookmarkData:(BOOL) value {
  hasBookmarkData_ = !!value;
}
@synthesize bookmarkData;
- (BOOL) hasPositionInParent {
  return !!hasPositionInParent_;
}
- (void) setHasPositionInParent:(BOOL) value {
  hasPositionInParent_ = !!value;
}
@synthesize positionInParent;
- (BOOL) hasInsertAfterItemId {
  return !!hasInsertAfterItemId_;
}
- (void) setHasInsertAfterItemId:(BOOL) value {
  hasInsertAfterItemId_ = !!value;
}
@synthesize insertAfterItemId;
- (BOOL) hasDeleted {
  return !!hasDeleted_;
}
- (void) setHasDeleted:(BOOL) value {
  hasDeleted_ = !!value;
}
- (BOOL) deleted {
  return !!deleted_;
}
- (void) setDeleted:(BOOL) value {
  deleted_ = !!value;
}
- (BOOL) hasOriginatorCacheGuid {
  return !!hasOriginatorCacheGuid_;
}
- (void) setHasOriginatorCacheGuid:(BOOL) value {
  hasOriginatorCacheGuid_ = !!value;
}
@synthesize originatorCacheGuid;
- (BOOL) hasOriginatorClientItemId {
  return !!hasOriginatorClientItemId_;
}
- (void) setHasOriginatorClientItemId:(BOOL) value {
  hasOriginatorClientItemId_ = !!value;
}
@synthesize originatorClientItemId;
- (BOOL) hasSpecifics {
  return !!hasSpecifics_;
}
- (void) setHasSpecifics:(BOOL) value {
  hasSpecifics_ = !!value;
}
@synthesize specifics;
- (BOOL) hasFolder {
  return !!hasFolder_;
}
- (void) setHasFolder:(BOOL) value {
  hasFolder_ = !!value;
}
- (BOOL) folder {
  return !!folder_;
}
- (void) setFolder:(BOOL) value {
  folder_ = !!value;
}
- (BOOL) hasClientDefinedUniqueTag {
  return !!hasClientDefinedUniqueTag_;
}
- (void) setHasClientDefinedUniqueTag:(BOOL) value {
  hasClientDefinedUniqueTag_ = !!value;
}
@synthesize clientDefinedUniqueTag;
- (BOOL) hasOrdinalInParent {
  return !!hasOrdinalInParent_;
}
- (void) setHasOrdinalInParent:(BOOL) value {
  hasOrdinalInParent_ = !!value;
}
@synthesize ordinalInParent;
- (void) dealloc {
  self.idString = nil;
  self.parentIdString = nil;
  self.oldParentId = nil;
  self.name = nil;
  self.nonUniqueName = nil;
  self.serverDefinedUniqueTag = nil;
  self.bookmarkData = nil;
  self.insertAfterItemId = nil;
  self.originatorCacheGuid = nil;
  self.originatorClientItemId = nil;
  self.specifics = nil;
  self.clientDefinedUniqueTag = nil;
  self.ordinalInParent = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.idString = @"";
    self.parentIdString = @"";
    self.oldParentId = @"";
    self.version = 0L;
    self.mtime = 0L;
    self.ctime = 0L;
    self.name = @"";
    self.nonUniqueName = @"";
    self.syncTimestamp = 0L;
    self.serverDefinedUniqueTag = @"";
    self.bookmarkData = [SyncEntity_BookmarkData defaultInstance];
    self.positionInParent = 0L;
    self.insertAfterItemId = @"";
    self.deleted = NO;
    self.originatorCacheGuid = @"";
    self.originatorClientItemId = @"";
    self.specifics = [EntitySpecifics defaultInstance];
    self.folder = NO;
    self.clientDefinedUniqueTag = @"";
    self.ordinalInParent = [NSData data];
  }
  return self;
}
static SyncEntity* defaultSyncEntityInstance = nil;
+ (void) initialize {
  if (self == [SyncEntity class]) {
    defaultSyncEntityInstance = [[SyncEntity alloc] init];
  }
}
+ (SyncEntity*) defaultInstance {
  return defaultSyncEntityInstance;
}
- (SyncEntity*) defaultInstance {
  return defaultSyncEntityInstance;
}
- (BOOL) isInitialized {
  if (!self.hasVersion) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (self.hasBookmarkData) {
    if (!self.bookmarkData.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIdString) {
    [output writeString:1 value:self.idString];
  }
  if (self.hasParentIdString) {
    [output writeString:2 value:self.parentIdString];
  }
  if (self.hasOldParentId) {
    [output writeString:3 value:self.oldParentId];
  }
  if (self.hasVersion) {
    [output writeInt64:4 value:self.version];
  }
  if (self.hasMtime) {
    [output writeInt64:5 value:self.mtime];
  }
  if (self.hasCtime) {
    [output writeInt64:6 value:self.ctime];
  }
  if (self.hasName) {
    [output writeString:7 value:self.name];
  }
  if (self.hasNonUniqueName) {
    [output writeString:8 value:self.nonUniqueName];
  }
  if (self.hasSyncTimestamp) {
    [output writeInt64:9 value:self.syncTimestamp];
  }
  if (self.hasServerDefinedUniqueTag) {
    [output writeString:10 value:self.serverDefinedUniqueTag];
  }
  if (self.hasBookmarkData) {
    [output writeGroup:11 value:self.bookmarkData];
  }
  if (self.hasPositionInParent) {
    [output writeInt64:15 value:self.positionInParent];
  }
  if (self.hasInsertAfterItemId) {
    [output writeString:16 value:self.insertAfterItemId];
  }
  if (self.hasDeleted) {
    [output writeBool:18 value:self.deleted];
  }
  if (self.hasOriginatorCacheGuid) {
    [output writeString:19 value:self.originatorCacheGuid];
  }
  if (self.hasOriginatorClientItemId) {
    [output writeString:20 value:self.originatorClientItemId];
  }
  if (self.hasSpecifics) {
    [output writeMessage:21 value:self.specifics];
  }
  if (self.hasFolder) {
    [output writeBool:22 value:self.folder];
  }
  if (self.hasClientDefinedUniqueTag) {
    [output writeString:23 value:self.clientDefinedUniqueTag];
  }
  if (self.hasOrdinalInParent) {
    [output writeData:24 value:self.ordinalInParent];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIdString) {
    size += computeStringSize(1, self.idString);
  }
  if (self.hasParentIdString) {
    size += computeStringSize(2, self.parentIdString);
  }
  if (self.hasOldParentId) {
    size += computeStringSize(3, self.oldParentId);
  }
  if (self.hasVersion) {
    size += computeInt64Size(4, self.version);
  }
  if (self.hasMtime) {
    size += computeInt64Size(5, self.mtime);
  }
  if (self.hasCtime) {
    size += computeInt64Size(6, self.ctime);
  }
  if (self.hasName) {
    size += computeStringSize(7, self.name);
  }
  if (self.hasNonUniqueName) {
    size += computeStringSize(8, self.nonUniqueName);
  }
  if (self.hasSyncTimestamp) {
    size += computeInt64Size(9, self.syncTimestamp);
  }
  if (self.hasServerDefinedUniqueTag) {
    size += computeStringSize(10, self.serverDefinedUniqueTag);
  }
  if (self.hasBookmarkData) {
    size += computeGroupSize(11, self.bookmarkData);
  }
  if (self.hasPositionInParent) {
    size += computeInt64Size(15, self.positionInParent);
  }
  if (self.hasInsertAfterItemId) {
    size += computeStringSize(16, self.insertAfterItemId);
  }
  if (self.hasDeleted) {
    size += computeBoolSize(18, self.deleted);
  }
  if (self.hasOriginatorCacheGuid) {
    size += computeStringSize(19, self.originatorCacheGuid);
  }
  if (self.hasOriginatorClientItemId) {
    size += computeStringSize(20, self.originatorClientItemId);
  }
  if (self.hasSpecifics) {
    size += computeMessageSize(21, self.specifics);
  }
  if (self.hasFolder) {
    size += computeBoolSize(22, self.folder);
  }
  if (self.hasClientDefinedUniqueTag) {
    size += computeStringSize(23, self.clientDefinedUniqueTag);
  }
  if (self.hasOrdinalInParent) {
    size += computeDataSize(24, self.ordinalInParent);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SyncEntity*) parseFromData:(NSData*) data {
  return (SyncEntity*)[[[SyncEntity builder] mergeFromData:data] build];
}
+ (SyncEntity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncEntity*)[[[SyncEntity builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncEntity*) parseFromInputStream:(NSInputStream*) input {
  return (SyncEntity*)[[[SyncEntity builder] mergeFromInputStream:input] build];
}
+ (SyncEntity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncEntity*)[[[SyncEntity builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncEntity*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SyncEntity*)[[[SyncEntity builder] mergeFromCodedInputStream:input] build];
}
+ (SyncEntity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncEntity*)[[[SyncEntity builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncEntity_Builder*) builder {
  return [[[SyncEntity_Builder alloc] init] autorelease];
}
+ (SyncEntity_Builder*) builderWithPrototype:(SyncEntity*) prototype {
  return [[SyncEntity builder] mergeFrom:prototype];
}
- (SyncEntity_Builder*) builder {
  return [SyncEntity builder];
}
@end

@interface SyncEntity_BookmarkData ()
@property BOOL bookmarkFolder;
@property (retain) NSString* bookmarkUrl;
@property (retain) NSData* bookmarkFavicon;
@end

@implementation SyncEntity_BookmarkData

- (BOOL) hasBookmarkFolder {
  return !!hasBookmarkFolder_;
}
- (void) setHasBookmarkFolder:(BOOL) value {
  hasBookmarkFolder_ = !!value;
}
- (BOOL) bookmarkFolder {
  return !!bookmarkFolder_;
}
- (void) setBookmarkFolder:(BOOL) value {
  bookmarkFolder_ = !!value;
}
- (BOOL) hasBookmarkUrl {
  return !!hasBookmarkUrl_;
}
- (void) setHasBookmarkUrl:(BOOL) value {
  hasBookmarkUrl_ = !!value;
}
@synthesize bookmarkUrl;
- (BOOL) hasBookmarkFavicon {
  return !!hasBookmarkFavicon_;
}
- (void) setHasBookmarkFavicon:(BOOL) value {
  hasBookmarkFavicon_ = !!value;
}
@synthesize bookmarkFavicon;
- (void) dealloc {
  self.bookmarkUrl = nil;
  self.bookmarkFavicon = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.bookmarkFolder = NO;
    self.bookmarkUrl = @"";
    self.bookmarkFavicon = [NSData data];
  }
  return self;
}
static SyncEntity_BookmarkData* defaultSyncEntity_BookmarkDataInstance = nil;
+ (void) initialize {
  if (self == [SyncEntity_BookmarkData class]) {
    defaultSyncEntity_BookmarkDataInstance = [[SyncEntity_BookmarkData alloc] init];
  }
}
+ (SyncEntity_BookmarkData*) defaultInstance {
  return defaultSyncEntity_BookmarkDataInstance;
}
- (SyncEntity_BookmarkData*) defaultInstance {
  return defaultSyncEntity_BookmarkDataInstance;
}
- (BOOL) isInitialized {
  if (!self.hasBookmarkFolder) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBookmarkFolder) {
    [output writeBool:12 value:self.bookmarkFolder];
  }
  if (self.hasBookmarkUrl) {
    [output writeString:13 value:self.bookmarkUrl];
  }
  if (self.hasBookmarkFavicon) {
    [output writeData:14 value:self.bookmarkFavicon];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasBookmarkFolder) {
    size += computeBoolSize(12, self.bookmarkFolder);
  }
  if (self.hasBookmarkUrl) {
    size += computeStringSize(13, self.bookmarkUrl);
  }
  if (self.hasBookmarkFavicon) {
    size += computeDataSize(14, self.bookmarkFavicon);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SyncEntity_BookmarkData*) parseFromData:(NSData*) data {
  return (SyncEntity_BookmarkData*)[[[SyncEntity_BookmarkData builder] mergeFromData:data] build];
}
+ (SyncEntity_BookmarkData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncEntity_BookmarkData*)[[[SyncEntity_BookmarkData builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncEntity_BookmarkData*) parseFromInputStream:(NSInputStream*) input {
  return (SyncEntity_BookmarkData*)[[[SyncEntity_BookmarkData builder] mergeFromInputStream:input] build];
}
+ (SyncEntity_BookmarkData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncEntity_BookmarkData*)[[[SyncEntity_BookmarkData builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncEntity_BookmarkData*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SyncEntity_BookmarkData*)[[[SyncEntity_BookmarkData builder] mergeFromCodedInputStream:input] build];
}
+ (SyncEntity_BookmarkData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncEntity_BookmarkData*)[[[SyncEntity_BookmarkData builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncEntity_BookmarkData_Builder*) builder {
  return [[[SyncEntity_BookmarkData_Builder alloc] init] autorelease];
}
+ (SyncEntity_BookmarkData_Builder*) builderWithPrototype:(SyncEntity_BookmarkData*) prototype {
  return [[SyncEntity_BookmarkData builder] mergeFrom:prototype];
}
- (SyncEntity_BookmarkData_Builder*) builder {
  return [SyncEntity_BookmarkData builder];
}
@end

@interface SyncEntity_BookmarkData_Builder()
@property (retain) SyncEntity_BookmarkData* result;
@end

@implementation SyncEntity_BookmarkData_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncEntity_BookmarkData alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncEntity_BookmarkData_Builder*) clear {
  self.result = [[[SyncEntity_BookmarkData alloc] init] autorelease];
  return self;
}
- (SyncEntity_BookmarkData_Builder*) clone {
  return [SyncEntity_BookmarkData builderWithPrototype:result];
}
- (SyncEntity_BookmarkData*) defaultInstance {
  return [SyncEntity_BookmarkData defaultInstance];
}
- (SyncEntity_BookmarkData*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncEntity_BookmarkData*) buildPartial {
  SyncEntity_BookmarkData* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncEntity_BookmarkData_Builder*) mergeFrom:(SyncEntity_BookmarkData*) other {
  if (other == [SyncEntity_BookmarkData defaultInstance]) {
    return self;
  }
  if (other.hasBookmarkFolder) {
    [self setBookmarkFolder:other.bookmarkFolder];
  }
  if (other.hasBookmarkUrl) {
    [self setBookmarkUrl:other.bookmarkUrl];
  }
  if (other.hasBookmarkFavicon) {
    [self setBookmarkFavicon:other.bookmarkFavicon];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncEntity_BookmarkData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SyncEntity_BookmarkData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 96: {
        [self setBookmarkFolder:[input readBool]];
        break;
      }
      case 106: {
        [self setBookmarkUrl:[input readString]];
        break;
      }
      case 114: {
        [self setBookmarkFavicon:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasBookmarkFolder {
  return result.hasBookmarkFolder;
}
- (BOOL) bookmarkFolder {
  return result.bookmarkFolder;
}
- (SyncEntity_BookmarkData_Builder*) setBookmarkFolder:(BOOL) value {
  result.hasBookmarkFolder = YES;
  result.bookmarkFolder = value;
  return self;
}
- (SyncEntity_BookmarkData_Builder*) clearBookmarkFolder {
  result.hasBookmarkFolder = NO;
  result.bookmarkFolder = NO;
  return self;
}
- (BOOL) hasBookmarkUrl {
  return result.hasBookmarkUrl;
}
- (NSString*) bookmarkUrl {
  return result.bookmarkUrl;
}
- (SyncEntity_BookmarkData_Builder*) setBookmarkUrl:(NSString*) value {
  result.hasBookmarkUrl = YES;
  result.bookmarkUrl = value;
  return self;
}
- (SyncEntity_BookmarkData_Builder*) clearBookmarkUrl {
  result.hasBookmarkUrl = NO;
  result.bookmarkUrl = @"";
  return self;
}
- (BOOL) hasBookmarkFavicon {
  return result.hasBookmarkFavicon;
}
- (NSData*) bookmarkFavicon {
  return result.bookmarkFavicon;
}
- (SyncEntity_BookmarkData_Builder*) setBookmarkFavicon:(NSData*) value {
  result.hasBookmarkFavicon = YES;
  result.bookmarkFavicon = value;
  return self;
}
- (SyncEntity_BookmarkData_Builder*) clearBookmarkFavicon {
  result.hasBookmarkFavicon = NO;
  result.bookmarkFavicon = [NSData data];
  return self;
}
@end

@interface SyncEntity_Builder()
@property (retain) SyncEntity* result;
@end

@implementation SyncEntity_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncEntity alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncEntity_Builder*) clear {
  self.result = [[[SyncEntity alloc] init] autorelease];
  return self;
}
- (SyncEntity_Builder*) clone {
  return [SyncEntity builderWithPrototype:result];
}
- (SyncEntity*) defaultInstance {
  return [SyncEntity defaultInstance];
}
- (SyncEntity*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncEntity*) buildPartial {
  SyncEntity* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncEntity_Builder*) mergeFrom:(SyncEntity*) other {
  if (other == [SyncEntity defaultInstance]) {
    return self;
  }
  if (other.hasIdString) {
    [self setIdString:other.idString];
  }
  if (other.hasParentIdString) {
    [self setParentIdString:other.parentIdString];
  }
  if (other.hasOldParentId) {
    [self setOldParentId:other.oldParentId];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasMtime) {
    [self setMtime:other.mtime];
  }
  if (other.hasCtime) {
    [self setCtime:other.ctime];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasNonUniqueName) {
    [self setNonUniqueName:other.nonUniqueName];
  }
  if (other.hasSyncTimestamp) {
    [self setSyncTimestamp:other.syncTimestamp];
  }
  if (other.hasServerDefinedUniqueTag) {
    [self setServerDefinedUniqueTag:other.serverDefinedUniqueTag];
  }
  if (other.hasBookmarkData) {
    [self mergeBookmarkData:other.bookmarkData];
  }
  if (other.hasPositionInParent) {
    [self setPositionInParent:other.positionInParent];
  }
  if (other.hasInsertAfterItemId) {
    [self setInsertAfterItemId:other.insertAfterItemId];
  }
  if (other.hasDeleted) {
    [self setDeleted:other.deleted];
  }
  if (other.hasOriginatorCacheGuid) {
    [self setOriginatorCacheGuid:other.originatorCacheGuid];
  }
  if (other.hasOriginatorClientItemId) {
    [self setOriginatorClientItemId:other.originatorClientItemId];
  }
  if (other.hasSpecifics) {
    [self mergeSpecifics:other.specifics];
  }
  if (other.hasFolder) {
    [self setFolder:other.folder];
  }
  if (other.hasClientDefinedUniqueTag) {
    [self setClientDefinedUniqueTag:other.clientDefinedUniqueTag];
  }
  if (other.hasOrdinalInParent) {
    [self setOrdinalInParent:other.ordinalInParent];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncEntity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SyncEntity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setIdString:[input readString]];
        break;
      }
      case 18: {
        [self setParentIdString:[input readString]];
        break;
      }
      case 26: {
        [self setOldParentId:[input readString]];
        break;
      }
      case 32: {
        [self setVersion:[input readInt64]];
        break;
      }
      case 40: {
        [self setMtime:[input readInt64]];
        break;
      }
      case 48: {
        [self setCtime:[input readInt64]];
        break;
      }
      case 58: {
        [self setName:[input readString]];
        break;
      }
      case 66: {
        [self setNonUniqueName:[input readString]];
        break;
      }
      case 72: {
        [self setSyncTimestamp:[input readInt64]];
        break;
      }
      case 82: {
        [self setServerDefinedUniqueTag:[input readString]];
        break;
      }
      case 91: {
        SyncEntity_BookmarkData_Builder* subBuilder = [SyncEntity_BookmarkData builder];
        if (self.hasBookmarkData) {
          [subBuilder mergeFrom:self.bookmarkData];
        }
        [input readGroup:11 builder:subBuilder extensionRegistry:extensionRegistry];
        [self setBookmarkData:[subBuilder buildPartial]];
        break;
      }
      case 120: {
        [self setPositionInParent:[input readInt64]];
        break;
      }
      case 130: {
        [self setInsertAfterItemId:[input readString]];
        break;
      }
      case 144: {
        [self setDeleted:[input readBool]];
        break;
      }
      case 154: {
        [self setOriginatorCacheGuid:[input readString]];
        break;
      }
      case 162: {
        [self setOriginatorClientItemId:[input readString]];
        break;
      }
      case 170: {
        EntitySpecifics_Builder* subBuilder = [EntitySpecifics builder];
        if (self.hasSpecifics) {
          [subBuilder mergeFrom:self.specifics];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSpecifics:[subBuilder buildPartial]];
        break;
      }
      case 176: {
        [self setFolder:[input readBool]];
        break;
      }
      case 186: {
        [self setClientDefinedUniqueTag:[input readString]];
        break;
      }
      case 194: {
        [self setOrdinalInParent:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasIdString {
  return result.hasIdString;
}
- (NSString*) idString {
  return result.idString;
}
- (SyncEntity_Builder*) setIdString:(NSString*) value {
  result.hasIdString = YES;
  result.idString = value;
  return self;
}
- (SyncEntity_Builder*) clearIdString {
  result.hasIdString = NO;
  result.idString = @"";
  return self;
}
- (BOOL) hasParentIdString {
  return result.hasParentIdString;
}
- (NSString*) parentIdString {
  return result.parentIdString;
}
- (SyncEntity_Builder*) setParentIdString:(NSString*) value {
  result.hasParentIdString = YES;
  result.parentIdString = value;
  return self;
}
- (SyncEntity_Builder*) clearParentIdString {
  result.hasParentIdString = NO;
  result.parentIdString = @"";
  return self;
}
- (BOOL) hasOldParentId {
  return result.hasOldParentId;
}
- (NSString*) oldParentId {
  return result.oldParentId;
}
- (SyncEntity_Builder*) setOldParentId:(NSString*) value {
  result.hasOldParentId = YES;
  result.oldParentId = value;
  return self;
}
- (SyncEntity_Builder*) clearOldParentId {
  result.hasOldParentId = NO;
  result.oldParentId = @"";
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int64_t) version {
  return result.version;
}
- (SyncEntity_Builder*) setVersion:(int64_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (SyncEntity_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 0L;
  return self;
}
- (BOOL) hasMtime {
  return result.hasMtime;
}
- (int64_t) mtime {
  return result.mtime;
}
- (SyncEntity_Builder*) setMtime:(int64_t) value {
  result.hasMtime = YES;
  result.mtime = value;
  return self;
}
- (SyncEntity_Builder*) clearMtime {
  result.hasMtime = NO;
  result.mtime = 0L;
  return self;
}
- (BOOL) hasCtime {
  return result.hasCtime;
}
- (int64_t) ctime {
  return result.ctime;
}
- (SyncEntity_Builder*) setCtime:(int64_t) value {
  result.hasCtime = YES;
  result.ctime = value;
  return self;
}
- (SyncEntity_Builder*) clearCtime {
  result.hasCtime = NO;
  result.ctime = 0L;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (SyncEntity_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (SyncEntity_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasNonUniqueName {
  return result.hasNonUniqueName;
}
- (NSString*) nonUniqueName {
  return result.nonUniqueName;
}
- (SyncEntity_Builder*) setNonUniqueName:(NSString*) value {
  result.hasNonUniqueName = YES;
  result.nonUniqueName = value;
  return self;
}
- (SyncEntity_Builder*) clearNonUniqueName {
  result.hasNonUniqueName = NO;
  result.nonUniqueName = @"";
  return self;
}
- (BOOL) hasSyncTimestamp {
  return result.hasSyncTimestamp;
}
- (int64_t) syncTimestamp {
  return result.syncTimestamp;
}
- (SyncEntity_Builder*) setSyncTimestamp:(int64_t) value {
  result.hasSyncTimestamp = YES;
  result.syncTimestamp = value;
  return self;
}
- (SyncEntity_Builder*) clearSyncTimestamp {
  result.hasSyncTimestamp = NO;
  result.syncTimestamp = 0L;
  return self;
}
- (BOOL) hasServerDefinedUniqueTag {
  return result.hasServerDefinedUniqueTag;
}
- (NSString*) serverDefinedUniqueTag {
  return result.serverDefinedUniqueTag;
}
- (SyncEntity_Builder*) setServerDefinedUniqueTag:(NSString*) value {
  result.hasServerDefinedUniqueTag = YES;
  result.serverDefinedUniqueTag = value;
  return self;
}
- (SyncEntity_Builder*) clearServerDefinedUniqueTag {
  result.hasServerDefinedUniqueTag = NO;
  result.serverDefinedUniqueTag = @"";
  return self;
}
- (BOOL) hasBookmarkData {
  return result.hasBookmarkData;
}
- (SyncEntity_BookmarkData*) bookmarkData {
  return result.bookmarkData;
}
- (SyncEntity_Builder*) setBookmarkData:(SyncEntity_BookmarkData*) value {
  result.hasBookmarkData = YES;
  result.bookmarkData = value;
  return self;
}
- (SyncEntity_Builder*) setBookmarkDataBuilder:(SyncEntity_BookmarkData_Builder*) builderForValue {
  return [self setBookmarkData:[builderForValue build]];
}
- (SyncEntity_Builder*) mergeBookmarkData:(SyncEntity_BookmarkData*) value {
  if (result.hasBookmarkData &&
      result.bookmarkData != [SyncEntity_BookmarkData defaultInstance]) {
    result.bookmarkData =
      [[[SyncEntity_BookmarkData builderWithPrototype:result.bookmarkData] mergeFrom:value] buildPartial];
  } else {
    result.bookmarkData = value;
  }
  result.hasBookmarkData = YES;
  return self;
}
- (SyncEntity_Builder*) clearBookmarkData {
  result.hasBookmarkData = NO;
  result.bookmarkData = [SyncEntity_BookmarkData defaultInstance];
  return self;
}
- (BOOL) hasPositionInParent {
  return result.hasPositionInParent;
}
- (int64_t) positionInParent {
  return result.positionInParent;
}
- (SyncEntity_Builder*) setPositionInParent:(int64_t) value {
  result.hasPositionInParent = YES;
  result.positionInParent = value;
  return self;
}
- (SyncEntity_Builder*) clearPositionInParent {
  result.hasPositionInParent = NO;
  result.positionInParent = 0L;
  return self;
}
- (BOOL) hasInsertAfterItemId {
  return result.hasInsertAfterItemId;
}
- (NSString*) insertAfterItemId {
  return result.insertAfterItemId;
}
- (SyncEntity_Builder*) setInsertAfterItemId:(NSString*) value {
  result.hasInsertAfterItemId = YES;
  result.insertAfterItemId = value;
  return self;
}
- (SyncEntity_Builder*) clearInsertAfterItemId {
  result.hasInsertAfterItemId = NO;
  result.insertAfterItemId = @"";
  return self;
}
- (BOOL) hasDeleted {
  return result.hasDeleted;
}
- (BOOL) deleted {
  return result.deleted;
}
- (SyncEntity_Builder*) setDeleted:(BOOL) value {
  result.hasDeleted = YES;
  result.deleted = value;
  return self;
}
- (SyncEntity_Builder*) clearDeleted {
  result.hasDeleted = NO;
  result.deleted = NO;
  return self;
}
- (BOOL) hasOriginatorCacheGuid {
  return result.hasOriginatorCacheGuid;
}
- (NSString*) originatorCacheGuid {
  return result.originatorCacheGuid;
}
- (SyncEntity_Builder*) setOriginatorCacheGuid:(NSString*) value {
  result.hasOriginatorCacheGuid = YES;
  result.originatorCacheGuid = value;
  return self;
}
- (SyncEntity_Builder*) clearOriginatorCacheGuid {
  result.hasOriginatorCacheGuid = NO;
  result.originatorCacheGuid = @"";
  return self;
}
- (BOOL) hasOriginatorClientItemId {
  return result.hasOriginatorClientItemId;
}
- (NSString*) originatorClientItemId {
  return result.originatorClientItemId;
}
- (SyncEntity_Builder*) setOriginatorClientItemId:(NSString*) value {
  result.hasOriginatorClientItemId = YES;
  result.originatorClientItemId = value;
  return self;
}
- (SyncEntity_Builder*) clearOriginatorClientItemId {
  result.hasOriginatorClientItemId = NO;
  result.originatorClientItemId = @"";
  return self;
}
- (BOOL) hasSpecifics {
  return result.hasSpecifics;
}
- (EntitySpecifics*) specifics {
  return result.specifics;
}
- (SyncEntity_Builder*) setSpecifics:(EntitySpecifics*) value {
  result.hasSpecifics = YES;
  result.specifics = value;
  return self;
}
- (SyncEntity_Builder*) setSpecificsBuilder:(EntitySpecifics_Builder*) builderForValue {
  return [self setSpecifics:[builderForValue build]];
}
- (SyncEntity_Builder*) mergeSpecifics:(EntitySpecifics*) value {
  if (result.hasSpecifics &&
      result.specifics != [EntitySpecifics defaultInstance]) {
    result.specifics =
      [[[EntitySpecifics builderWithPrototype:result.specifics] mergeFrom:value] buildPartial];
  } else {
    result.specifics = value;
  }
  result.hasSpecifics = YES;
  return self;
}
- (SyncEntity_Builder*) clearSpecifics {
  result.hasSpecifics = NO;
  result.specifics = [EntitySpecifics defaultInstance];
  return self;
}
- (BOOL) hasFolder {
  return result.hasFolder;
}
- (BOOL) folder {
  return result.folder;
}
- (SyncEntity_Builder*) setFolder:(BOOL) value {
  result.hasFolder = YES;
  result.folder = value;
  return self;
}
- (SyncEntity_Builder*) clearFolder {
  result.hasFolder = NO;
  result.folder = NO;
  return self;
}
- (BOOL) hasClientDefinedUniqueTag {
  return result.hasClientDefinedUniqueTag;
}
- (NSString*) clientDefinedUniqueTag {
  return result.clientDefinedUniqueTag;
}
- (SyncEntity_Builder*) setClientDefinedUniqueTag:(NSString*) value {
  result.hasClientDefinedUniqueTag = YES;
  result.clientDefinedUniqueTag = value;
  return self;
}
- (SyncEntity_Builder*) clearClientDefinedUniqueTag {
  result.hasClientDefinedUniqueTag = NO;
  result.clientDefinedUniqueTag = @"";
  return self;
}
- (BOOL) hasOrdinalInParent {
  return result.hasOrdinalInParent;
}
- (NSData*) ordinalInParent {
  return result.ordinalInParent;
}
- (SyncEntity_Builder*) setOrdinalInParent:(NSData*) value {
  result.hasOrdinalInParent = YES;
  result.ordinalInParent = value;
  return self;
}
- (SyncEntity_Builder*) clearOrdinalInParent {
  result.hasOrdinalInParent = NO;
  result.ordinalInParent = [NSData data];
  return self;
}
@end

@interface ChromiumExtensionsActivity ()
@property (retain) NSString* extensionId;
@property int32_t bookmarkWritesSinceLastCommit;
@end

@implementation ChromiumExtensionsActivity

- (BOOL) hasExtensionId {
  return !!hasExtensionId_;
}
- (void) setHasExtensionId:(BOOL) value {
  hasExtensionId_ = !!value;
}
@synthesize extensionId;
- (BOOL) hasBookmarkWritesSinceLastCommit {
  return !!hasBookmarkWritesSinceLastCommit_;
}
- (void) setHasBookmarkWritesSinceLastCommit:(BOOL) value {
  hasBookmarkWritesSinceLastCommit_ = !!value;
}
@synthesize bookmarkWritesSinceLastCommit;
- (void) dealloc {
  self.extensionId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.extensionId = @"";
    self.bookmarkWritesSinceLastCommit = 0;
  }
  return self;
}
static ChromiumExtensionsActivity* defaultChromiumExtensionsActivityInstance = nil;
+ (void) initialize {
  if (self == [ChromiumExtensionsActivity class]) {
    defaultChromiumExtensionsActivityInstance = [[ChromiumExtensionsActivity alloc] init];
  }
}
+ (ChromiumExtensionsActivity*) defaultInstance {
  return defaultChromiumExtensionsActivityInstance;
}
- (ChromiumExtensionsActivity*) defaultInstance {
  return defaultChromiumExtensionsActivityInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasExtensionId) {
    [output writeString:1 value:self.extensionId];
  }
  if (self.hasBookmarkWritesSinceLastCommit) {
    [output writeUInt32:2 value:self.bookmarkWritesSinceLastCommit];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasExtensionId) {
    size += computeStringSize(1, self.extensionId);
  }
  if (self.hasBookmarkWritesSinceLastCommit) {
    size += computeUInt32Size(2, self.bookmarkWritesSinceLastCommit);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ChromiumExtensionsActivity*) parseFromData:(NSData*) data {
  return (ChromiumExtensionsActivity*)[[[ChromiumExtensionsActivity builder] mergeFromData:data] build];
}
+ (ChromiumExtensionsActivity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChromiumExtensionsActivity*)[[[ChromiumExtensionsActivity builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChromiumExtensionsActivity*) parseFromInputStream:(NSInputStream*) input {
  return (ChromiumExtensionsActivity*)[[[ChromiumExtensionsActivity builder] mergeFromInputStream:input] build];
}
+ (ChromiumExtensionsActivity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChromiumExtensionsActivity*)[[[ChromiumExtensionsActivity builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChromiumExtensionsActivity*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChromiumExtensionsActivity*)[[[ChromiumExtensionsActivity builder] mergeFromCodedInputStream:input] build];
}
+ (ChromiumExtensionsActivity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChromiumExtensionsActivity*)[[[ChromiumExtensionsActivity builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChromiumExtensionsActivity_Builder*) builder {
  return [[[ChromiumExtensionsActivity_Builder alloc] init] autorelease];
}
+ (ChromiumExtensionsActivity_Builder*) builderWithPrototype:(ChromiumExtensionsActivity*) prototype {
  return [[ChromiumExtensionsActivity builder] mergeFrom:prototype];
}
- (ChromiumExtensionsActivity_Builder*) builder {
  return [ChromiumExtensionsActivity builder];
}
@end

@interface ChromiumExtensionsActivity_Builder()
@property (retain) ChromiumExtensionsActivity* result;
@end

@implementation ChromiumExtensionsActivity_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ChromiumExtensionsActivity alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChromiumExtensionsActivity_Builder*) clear {
  self.result = [[[ChromiumExtensionsActivity alloc] init] autorelease];
  return self;
}
- (ChromiumExtensionsActivity_Builder*) clone {
  return [ChromiumExtensionsActivity builderWithPrototype:result];
}
- (ChromiumExtensionsActivity*) defaultInstance {
  return [ChromiumExtensionsActivity defaultInstance];
}
- (ChromiumExtensionsActivity*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChromiumExtensionsActivity*) buildPartial {
  ChromiumExtensionsActivity* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ChromiumExtensionsActivity_Builder*) mergeFrom:(ChromiumExtensionsActivity*) other {
  if (other == [ChromiumExtensionsActivity defaultInstance]) {
    return self;
  }
  if (other.hasExtensionId) {
    [self setExtensionId:other.extensionId];
  }
  if (other.hasBookmarkWritesSinceLastCommit) {
    [self setBookmarkWritesSinceLastCommit:other.bookmarkWritesSinceLastCommit];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChromiumExtensionsActivity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChromiumExtensionsActivity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setExtensionId:[input readString]];
        break;
      }
      case 16: {
        [self setBookmarkWritesSinceLastCommit:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasExtensionId {
  return result.hasExtensionId;
}
- (NSString*) extensionId {
  return result.extensionId;
}
- (ChromiumExtensionsActivity_Builder*) setExtensionId:(NSString*) value {
  result.hasExtensionId = YES;
  result.extensionId = value;
  return self;
}
- (ChromiumExtensionsActivity_Builder*) clearExtensionId {
  result.hasExtensionId = NO;
  result.extensionId = @"";
  return self;
}
- (BOOL) hasBookmarkWritesSinceLastCommit {
  return result.hasBookmarkWritesSinceLastCommit;
}
- (int32_t) bookmarkWritesSinceLastCommit {
  return result.bookmarkWritesSinceLastCommit;
}
- (ChromiumExtensionsActivity_Builder*) setBookmarkWritesSinceLastCommit:(int32_t) value {
  result.hasBookmarkWritesSinceLastCommit = YES;
  result.bookmarkWritesSinceLastCommit = value;
  return self;
}
- (ChromiumExtensionsActivity_Builder*) clearBookmarkWritesSinceLastCommit {
  result.hasBookmarkWritesSinceLastCommit = NO;
  result.bookmarkWritesSinceLastCommit = 0;
  return self;
}
@end

@interface CommitMessage ()
@property (retain) NSMutableArray* mutableEntriesList;
@property (retain) NSString* cacheGuid;
@property (retain) NSMutableArray* mutableExtensionsActivityList;
@end

@implementation CommitMessage

@synthesize mutableEntriesList;
- (BOOL) hasCacheGuid {
  return !!hasCacheGuid_;
}
- (void) setHasCacheGuid:(BOOL) value {
  hasCacheGuid_ = !!value;
}
@synthesize cacheGuid;
@synthesize mutableExtensionsActivityList;
- (void) dealloc {
  self.mutableEntriesList = nil;
  self.cacheGuid = nil;
  self.mutableExtensionsActivityList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.cacheGuid = @"";
  }
  return self;
}
static CommitMessage* defaultCommitMessageInstance = nil;
+ (void) initialize {
  if (self == [CommitMessage class]) {
    defaultCommitMessageInstance = [[CommitMessage alloc] init];
  }
}
+ (CommitMessage*) defaultInstance {
  return defaultCommitMessageInstance;
}
- (CommitMessage*) defaultInstance {
  return defaultCommitMessageInstance;
}
- (NSArray*) entriesList {
  return mutableEntriesList;
}
- (SyncEntity*) entriesAtIndex:(int32_t) index {
  id value = [mutableEntriesList objectAtIndex:index];
  return value;
}
- (NSArray*) extensionsActivityList {
  return mutableExtensionsActivityList;
}
- (ChromiumExtensionsActivity*) extensionsActivityAtIndex:(int32_t) index {
  id value = [mutableExtensionsActivityList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (SyncEntity* element in self.entriesList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (SyncEntity* element in self.entriesList) {
    [output writeMessage:1 value:element];
  }
  if (self.hasCacheGuid) {
    [output writeString:2 value:self.cacheGuid];
  }
  for (ChromiumExtensionsActivity* element in self.extensionsActivityList) {
    [output writeMessage:3 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (SyncEntity* element in self.entriesList) {
    size += computeMessageSize(1, element);
  }
  if (self.hasCacheGuid) {
    size += computeStringSize(2, self.cacheGuid);
  }
  for (ChromiumExtensionsActivity* element in self.extensionsActivityList) {
    size += computeMessageSize(3, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CommitMessage*) parseFromData:(NSData*) data {
  return (CommitMessage*)[[[CommitMessage builder] mergeFromData:data] build];
}
+ (CommitMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommitMessage*)[[[CommitMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommitMessage*) parseFromInputStream:(NSInputStream*) input {
  return (CommitMessage*)[[[CommitMessage builder] mergeFromInputStream:input] build];
}
+ (CommitMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommitMessage*)[[[CommitMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommitMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CommitMessage*)[[[CommitMessage builder] mergeFromCodedInputStream:input] build];
}
+ (CommitMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommitMessage*)[[[CommitMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommitMessage_Builder*) builder {
  return [[[CommitMessage_Builder alloc] init] autorelease];
}
+ (CommitMessage_Builder*) builderWithPrototype:(CommitMessage*) prototype {
  return [[CommitMessage builder] mergeFrom:prototype];
}
- (CommitMessage_Builder*) builder {
  return [CommitMessage builder];
}
@end

@interface CommitMessage_Builder()
@property (retain) CommitMessage* result;
@end

@implementation CommitMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CommitMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommitMessage_Builder*) clear {
  self.result = [[[CommitMessage alloc] init] autorelease];
  return self;
}
- (CommitMessage_Builder*) clone {
  return [CommitMessage builderWithPrototype:result];
}
- (CommitMessage*) defaultInstance {
  return [CommitMessage defaultInstance];
}
- (CommitMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommitMessage*) buildPartial {
  CommitMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CommitMessage_Builder*) mergeFrom:(CommitMessage*) other {
  if (other == [CommitMessage defaultInstance]) {
    return self;
  }
  if (other.mutableEntriesList.count > 0) {
    if (result.mutableEntriesList == nil) {
      result.mutableEntriesList = [NSMutableArray array];
    }
    [result.mutableEntriesList addObjectsFromArray:other.mutableEntriesList];
  }
  if (other.hasCacheGuid) {
    [self setCacheGuid:other.cacheGuid];
  }
  if (other.mutableExtensionsActivityList.count > 0) {
    if (result.mutableExtensionsActivityList == nil) {
      result.mutableExtensionsActivityList = [NSMutableArray array];
    }
    [result.mutableExtensionsActivityList addObjectsFromArray:other.mutableExtensionsActivityList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommitMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CommitMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        SyncEntity_Builder* subBuilder = [SyncEntity builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addEntries:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setCacheGuid:[input readString]];
        break;
      }
      case 26: {
        ChromiumExtensionsActivity_Builder* subBuilder = [ChromiumExtensionsActivity builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExtensionsActivity:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) entriesList {
  if (result.mutableEntriesList == nil) { return [NSArray array]; }
  return result.mutableEntriesList;
}
- (SyncEntity*) entriesAtIndex:(int32_t) index {
  return [result entriesAtIndex:index];
}
- (CommitMessage_Builder*) replaceEntriesAtIndex:(int32_t) index with:(SyncEntity*) value {
  [result.mutableEntriesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (CommitMessage_Builder*) addAllEntries:(NSArray*) values {
  if (result.mutableEntriesList == nil) {
    result.mutableEntriesList = [NSMutableArray array];
  }
  [result.mutableEntriesList addObjectsFromArray:values];
  return self;
}
- (CommitMessage_Builder*) clearEntriesList {
  result.mutableEntriesList = nil;
  return self;
}
- (CommitMessage_Builder*) addEntries:(SyncEntity*) value {
  if (result.mutableEntriesList == nil) {
    result.mutableEntriesList = [NSMutableArray array];
  }
  [result.mutableEntriesList addObject:value];
  return self;
}
- (BOOL) hasCacheGuid {
  return result.hasCacheGuid;
}
- (NSString*) cacheGuid {
  return result.cacheGuid;
}
- (CommitMessage_Builder*) setCacheGuid:(NSString*) value {
  result.hasCacheGuid = YES;
  result.cacheGuid = value;
  return self;
}
- (CommitMessage_Builder*) clearCacheGuid {
  result.hasCacheGuid = NO;
  result.cacheGuid = @"";
  return self;
}
- (NSArray*) extensionsActivityList {
  if (result.mutableExtensionsActivityList == nil) { return [NSArray array]; }
  return result.mutableExtensionsActivityList;
}
- (ChromiumExtensionsActivity*) extensionsActivityAtIndex:(int32_t) index {
  return [result extensionsActivityAtIndex:index];
}
- (CommitMessage_Builder*) replaceExtensionsActivityAtIndex:(int32_t) index with:(ChromiumExtensionsActivity*) value {
  [result.mutableExtensionsActivityList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (CommitMessage_Builder*) addAllExtensionsActivity:(NSArray*) values {
  if (result.mutableExtensionsActivityList == nil) {
    result.mutableExtensionsActivityList = [NSMutableArray array];
  }
  [result.mutableExtensionsActivityList addObjectsFromArray:values];
  return self;
}
- (CommitMessage_Builder*) clearExtensionsActivityList {
  result.mutableExtensionsActivityList = nil;
  return self;
}
- (CommitMessage_Builder*) addExtensionsActivity:(ChromiumExtensionsActivity*) value {
  if (result.mutableExtensionsActivityList == nil) {
    result.mutableExtensionsActivityList = [NSMutableArray array];
  }
  [result.mutableExtensionsActivityList addObject:value];
  return self;
}
@end

@interface DataTypeProgressMarker ()
@property int32_t dataTypeId;
@property (retain) NSData* token;
@property int64_t timestampTokenForMigration;
@property (retain) NSString* notificationHint;
@end

@implementation DataTypeProgressMarker

- (BOOL) hasDataTypeId {
  return !!hasDataTypeId_;
}
- (void) setHasDataTypeId:(BOOL) value {
  hasDataTypeId_ = !!value;
}
@synthesize dataTypeId;
- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (BOOL) hasTimestampTokenForMigration {
  return !!hasTimestampTokenForMigration_;
}
- (void) setHasTimestampTokenForMigration:(BOOL) value {
  hasTimestampTokenForMigration_ = !!value;
}
@synthesize timestampTokenForMigration;
- (BOOL) hasNotificationHint {
  return !!hasNotificationHint_;
}
- (void) setHasNotificationHint:(BOOL) value {
  hasNotificationHint_ = !!value;
}
@synthesize notificationHint;
- (void) dealloc {
  self.token = nil;
  self.notificationHint = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.dataTypeId = 0;
    self.token = [NSData data];
    self.timestampTokenForMigration = 0L;
    self.notificationHint = @"";
  }
  return self;
}
static DataTypeProgressMarker* defaultDataTypeProgressMarkerInstance = nil;
+ (void) initialize {
  if (self == [DataTypeProgressMarker class]) {
    defaultDataTypeProgressMarkerInstance = [[DataTypeProgressMarker alloc] init];
  }
}
+ (DataTypeProgressMarker*) defaultInstance {
  return defaultDataTypeProgressMarkerInstance;
}
- (DataTypeProgressMarker*) defaultInstance {
  return defaultDataTypeProgressMarkerInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDataTypeId) {
    [output writeInt32:1 value:self.dataTypeId];
  }
  if (self.hasToken) {
    [output writeData:2 value:self.token];
  }
  if (self.hasTimestampTokenForMigration) {
    [output writeInt64:3 value:self.timestampTokenForMigration];
  }
  if (self.hasNotificationHint) {
    [output writeString:4 value:self.notificationHint];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDataTypeId) {
    size += computeInt32Size(1, self.dataTypeId);
  }
  if (self.hasToken) {
    size += computeDataSize(2, self.token);
  }
  if (self.hasTimestampTokenForMigration) {
    size += computeInt64Size(3, self.timestampTokenForMigration);
  }
  if (self.hasNotificationHint) {
    size += computeStringSize(4, self.notificationHint);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (DataTypeProgressMarker*) parseFromData:(NSData*) data {
  return (DataTypeProgressMarker*)[[[DataTypeProgressMarker builder] mergeFromData:data] build];
}
+ (DataTypeProgressMarker*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DataTypeProgressMarker*)[[[DataTypeProgressMarker builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DataTypeProgressMarker*) parseFromInputStream:(NSInputStream*) input {
  return (DataTypeProgressMarker*)[[[DataTypeProgressMarker builder] mergeFromInputStream:input] build];
}
+ (DataTypeProgressMarker*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DataTypeProgressMarker*)[[[DataTypeProgressMarker builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DataTypeProgressMarker*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DataTypeProgressMarker*)[[[DataTypeProgressMarker builder] mergeFromCodedInputStream:input] build];
}
+ (DataTypeProgressMarker*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DataTypeProgressMarker*)[[[DataTypeProgressMarker builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DataTypeProgressMarker_Builder*) builder {
  return [[[DataTypeProgressMarker_Builder alloc] init] autorelease];
}
+ (DataTypeProgressMarker_Builder*) builderWithPrototype:(DataTypeProgressMarker*) prototype {
  return [[DataTypeProgressMarker builder] mergeFrom:prototype];
}
- (DataTypeProgressMarker_Builder*) builder {
  return [DataTypeProgressMarker builder];
}
@end

@interface DataTypeProgressMarker_Builder()
@property (retain) DataTypeProgressMarker* result;
@end

@implementation DataTypeProgressMarker_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[DataTypeProgressMarker alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (DataTypeProgressMarker_Builder*) clear {
  self.result = [[[DataTypeProgressMarker alloc] init] autorelease];
  return self;
}
- (DataTypeProgressMarker_Builder*) clone {
  return [DataTypeProgressMarker builderWithPrototype:result];
}
- (DataTypeProgressMarker*) defaultInstance {
  return [DataTypeProgressMarker defaultInstance];
}
- (DataTypeProgressMarker*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DataTypeProgressMarker*) buildPartial {
  DataTypeProgressMarker* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (DataTypeProgressMarker_Builder*) mergeFrom:(DataTypeProgressMarker*) other {
  if (other == [DataTypeProgressMarker defaultInstance]) {
    return self;
  }
  if (other.hasDataTypeId) {
    [self setDataTypeId:other.dataTypeId];
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasTimestampTokenForMigration) {
    [self setTimestampTokenForMigration:other.timestampTokenForMigration];
  }
  if (other.hasNotificationHint) {
    [self setNotificationHint:other.notificationHint];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DataTypeProgressMarker_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DataTypeProgressMarker_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDataTypeId:[input readInt32]];
        break;
      }
      case 18: {
        [self setToken:[input readData]];
        break;
      }
      case 24: {
        [self setTimestampTokenForMigration:[input readInt64]];
        break;
      }
      case 34: {
        [self setNotificationHint:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasDataTypeId {
  return result.hasDataTypeId;
}
- (int32_t) dataTypeId {
  return result.dataTypeId;
}
- (DataTypeProgressMarker_Builder*) setDataTypeId:(int32_t) value {
  result.hasDataTypeId = YES;
  result.dataTypeId = value;
  return self;
}
- (DataTypeProgressMarker_Builder*) clearDataTypeId {
  result.hasDataTypeId = NO;
  result.dataTypeId = 0;
  return self;
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSData*) token {
  return result.token;
}
- (DataTypeProgressMarker_Builder*) setToken:(NSData*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (DataTypeProgressMarker_Builder*) clearToken {
  result.hasToken = NO;
  result.token = [NSData data];
  return self;
}
- (BOOL) hasTimestampTokenForMigration {
  return result.hasTimestampTokenForMigration;
}
- (int64_t) timestampTokenForMigration {
  return result.timestampTokenForMigration;
}
- (DataTypeProgressMarker_Builder*) setTimestampTokenForMigration:(int64_t) value {
  result.hasTimestampTokenForMigration = YES;
  result.timestampTokenForMigration = value;
  return self;
}
- (DataTypeProgressMarker_Builder*) clearTimestampTokenForMigration {
  result.hasTimestampTokenForMigration = NO;
  result.timestampTokenForMigration = 0L;
  return self;
}
- (BOOL) hasNotificationHint {
  return result.hasNotificationHint;
}
- (NSString*) notificationHint {
  return result.notificationHint;
}
- (DataTypeProgressMarker_Builder*) setNotificationHint:(NSString*) value {
  result.hasNotificationHint = YES;
  result.notificationHint = value;
  return self;
}
- (DataTypeProgressMarker_Builder*) clearNotificationHint {
  result.hasNotificationHint = NO;
  result.notificationHint = @"";
  return self;
}
@end

@interface GetUpdatesMessage ()
@property int64_t fromTimestamp;
@property (retain) GetUpdatesCallerInfo* callerInfo;
@property BOOL fetchFolders;
@property (retain) EntitySpecifics* requestedTypes;
@property int32_t batchSize;
@property (retain) NSMutableArray* mutableFromProgressMarkerList;
@property BOOL streaming;
@property BOOL createMobileBookmarksFolder;
@end

@implementation GetUpdatesMessage

- (BOOL) hasFromTimestamp {
  return !!hasFromTimestamp_;
}
- (void) setHasFromTimestamp:(BOOL) value {
  hasFromTimestamp_ = !!value;
}
@synthesize fromTimestamp;
- (BOOL) hasCallerInfo {
  return !!hasCallerInfo_;
}
- (void) setHasCallerInfo:(BOOL) value {
  hasCallerInfo_ = !!value;
}
@synthesize callerInfo;
- (BOOL) hasFetchFolders {
  return !!hasFetchFolders_;
}
- (void) setHasFetchFolders:(BOOL) value {
  hasFetchFolders_ = !!value;
}
- (BOOL) fetchFolders {
  return !!fetchFolders_;
}
- (void) setFetchFolders:(BOOL) value {
  fetchFolders_ = !!value;
}
- (BOOL) hasRequestedTypes {
  return !!hasRequestedTypes_;
}
- (void) setHasRequestedTypes:(BOOL) value {
  hasRequestedTypes_ = !!value;
}
@synthesize requestedTypes;
- (BOOL) hasBatchSize {
  return !!hasBatchSize_;
}
- (void) setHasBatchSize:(BOOL) value {
  hasBatchSize_ = !!value;
}
@synthesize batchSize;
@synthesize mutableFromProgressMarkerList;
- (BOOL) hasStreaming {
  return !!hasStreaming_;
}
- (void) setHasStreaming:(BOOL) value {
  hasStreaming_ = !!value;
}
- (BOOL) streaming {
  return !!streaming_;
}
- (void) setStreaming:(BOOL) value {
  streaming_ = !!value;
}
- (BOOL) hasCreateMobileBookmarksFolder {
  return !!hasCreateMobileBookmarksFolder_;
}
- (void) setHasCreateMobileBookmarksFolder:(BOOL) value {
  hasCreateMobileBookmarksFolder_ = !!value;
}
- (BOOL) createMobileBookmarksFolder {
  return !!createMobileBookmarksFolder_;
}
- (void) setCreateMobileBookmarksFolder:(BOOL) value {
  createMobileBookmarksFolder_ = !!value;
}
- (void) dealloc {
  self.callerInfo = nil;
  self.requestedTypes = nil;
  self.mutableFromProgressMarkerList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.fromTimestamp = 0L;
    self.callerInfo = [GetUpdatesCallerInfo defaultInstance];
    self.fetchFolders = YES;
    self.requestedTypes = [EntitySpecifics defaultInstance];
    self.batchSize = 0;
    self.streaming = NO;
    self.createMobileBookmarksFolder = NO;
  }
  return self;
}
static GetUpdatesMessage* defaultGetUpdatesMessageInstance = nil;
+ (void) initialize {
  if (self == [GetUpdatesMessage class]) {
    defaultGetUpdatesMessageInstance = [[GetUpdatesMessage alloc] init];
  }
}
+ (GetUpdatesMessage*) defaultInstance {
  return defaultGetUpdatesMessageInstance;
}
- (GetUpdatesMessage*) defaultInstance {
  return defaultGetUpdatesMessageInstance;
}
- (NSArray*) fromProgressMarkerList {
  return mutableFromProgressMarkerList;
}
- (DataTypeProgressMarker*) fromProgressMarkerAtIndex:(int32_t) index {
  id value = [mutableFromProgressMarkerList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (self.hasCallerInfo) {
    if (!self.callerInfo.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFromTimestamp) {
    [output writeInt64:1 value:self.fromTimestamp];
  }
  if (self.hasCallerInfo) {
    [output writeMessage:2 value:self.callerInfo];
  }
  if (self.hasFetchFolders) {
    [output writeBool:3 value:self.fetchFolders];
  }
  if (self.hasRequestedTypes) {
    [output writeMessage:4 value:self.requestedTypes];
  }
  if (self.hasBatchSize) {
    [output writeInt32:5 value:self.batchSize];
  }
  for (DataTypeProgressMarker* element in self.fromProgressMarkerList) {
    [output writeMessage:6 value:element];
  }
  if (self.hasStreaming) {
    [output writeBool:7 value:self.streaming];
  }
  if (self.hasCreateMobileBookmarksFolder) {
    [output writeBool:1000 value:self.createMobileBookmarksFolder];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasFromTimestamp) {
    size += computeInt64Size(1, self.fromTimestamp);
  }
  if (self.hasCallerInfo) {
    size += computeMessageSize(2, self.callerInfo);
  }
  if (self.hasFetchFolders) {
    size += computeBoolSize(3, self.fetchFolders);
  }
  if (self.hasRequestedTypes) {
    size += computeMessageSize(4, self.requestedTypes);
  }
  if (self.hasBatchSize) {
    size += computeInt32Size(5, self.batchSize);
  }
  for (DataTypeProgressMarker* element in self.fromProgressMarkerList) {
    size += computeMessageSize(6, element);
  }
  if (self.hasStreaming) {
    size += computeBoolSize(7, self.streaming);
  }
  if (self.hasCreateMobileBookmarksFolder) {
    size += computeBoolSize(1000, self.createMobileBookmarksFolder);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetUpdatesMessage*) parseFromData:(NSData*) data {
  return (GetUpdatesMessage*)[[[GetUpdatesMessage builder] mergeFromData:data] build];
}
+ (GetUpdatesMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUpdatesMessage*)[[[GetUpdatesMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetUpdatesMessage*) parseFromInputStream:(NSInputStream*) input {
  return (GetUpdatesMessage*)[[[GetUpdatesMessage builder] mergeFromInputStream:input] build];
}
+ (GetUpdatesMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUpdatesMessage*)[[[GetUpdatesMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUpdatesMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetUpdatesMessage*)[[[GetUpdatesMessage builder] mergeFromCodedInputStream:input] build];
}
+ (GetUpdatesMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUpdatesMessage*)[[[GetUpdatesMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUpdatesMessage_Builder*) builder {
  return [[[GetUpdatesMessage_Builder alloc] init] autorelease];
}
+ (GetUpdatesMessage_Builder*) builderWithPrototype:(GetUpdatesMessage*) prototype {
  return [[GetUpdatesMessage builder] mergeFrom:prototype];
}
- (GetUpdatesMessage_Builder*) builder {
  return [GetUpdatesMessage builder];
}
@end

@interface GetUpdatesMessage_Builder()
@property (retain) GetUpdatesMessage* result;
@end

@implementation GetUpdatesMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetUpdatesMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetUpdatesMessage_Builder*) clear {
  self.result = [[[GetUpdatesMessage alloc] init] autorelease];
  return self;
}
- (GetUpdatesMessage_Builder*) clone {
  return [GetUpdatesMessage builderWithPrototype:result];
}
- (GetUpdatesMessage*) defaultInstance {
  return [GetUpdatesMessage defaultInstance];
}
- (GetUpdatesMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetUpdatesMessage*) buildPartial {
  GetUpdatesMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetUpdatesMessage_Builder*) mergeFrom:(GetUpdatesMessage*) other {
  if (other == [GetUpdatesMessage defaultInstance]) {
    return self;
  }
  if (other.hasFromTimestamp) {
    [self setFromTimestamp:other.fromTimestamp];
  }
  if (other.hasCallerInfo) {
    [self mergeCallerInfo:other.callerInfo];
  }
  if (other.hasFetchFolders) {
    [self setFetchFolders:other.fetchFolders];
  }
  if (other.hasRequestedTypes) {
    [self mergeRequestedTypes:other.requestedTypes];
  }
  if (other.hasBatchSize) {
    [self setBatchSize:other.batchSize];
  }
  if (other.mutableFromProgressMarkerList.count > 0) {
    if (result.mutableFromProgressMarkerList == nil) {
      result.mutableFromProgressMarkerList = [NSMutableArray array];
    }
    [result.mutableFromProgressMarkerList addObjectsFromArray:other.mutableFromProgressMarkerList];
  }
  if (other.hasStreaming) {
    [self setStreaming:other.streaming];
  }
  if (other.hasCreateMobileBookmarksFolder) {
    [self setCreateMobileBookmarksFolder:other.createMobileBookmarksFolder];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetUpdatesMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetUpdatesMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFromTimestamp:[input readInt64]];
        break;
      }
      case 18: {
        GetUpdatesCallerInfo_Builder* subBuilder = [GetUpdatesCallerInfo builder];
        if (self.hasCallerInfo) {
          [subBuilder mergeFrom:self.callerInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCallerInfo:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setFetchFolders:[input readBool]];
        break;
      }
      case 34: {
        EntitySpecifics_Builder* subBuilder = [EntitySpecifics builder];
        if (self.hasRequestedTypes) {
          [subBuilder mergeFrom:self.requestedTypes];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRequestedTypes:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setBatchSize:[input readInt32]];
        break;
      }
      case 50: {
        DataTypeProgressMarker_Builder* subBuilder = [DataTypeProgressMarker builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFromProgressMarker:[subBuilder buildPartial]];
        break;
      }
      case 56: {
        [self setStreaming:[input readBool]];
        break;
      }
      case 8000: {
        [self setCreateMobileBookmarksFolder:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasFromTimestamp {
  return result.hasFromTimestamp;
}
- (int64_t) fromTimestamp {
  return result.fromTimestamp;
}
- (GetUpdatesMessage_Builder*) setFromTimestamp:(int64_t) value {
  result.hasFromTimestamp = YES;
  result.fromTimestamp = value;
  return self;
}
- (GetUpdatesMessage_Builder*) clearFromTimestamp {
  result.hasFromTimestamp = NO;
  result.fromTimestamp = 0L;
  return self;
}
- (BOOL) hasCallerInfo {
  return result.hasCallerInfo;
}
- (GetUpdatesCallerInfo*) callerInfo {
  return result.callerInfo;
}
- (GetUpdatesMessage_Builder*) setCallerInfo:(GetUpdatesCallerInfo*) value {
  result.hasCallerInfo = YES;
  result.callerInfo = value;
  return self;
}
- (GetUpdatesMessage_Builder*) setCallerInfoBuilder:(GetUpdatesCallerInfo_Builder*) builderForValue {
  return [self setCallerInfo:[builderForValue build]];
}
- (GetUpdatesMessage_Builder*) mergeCallerInfo:(GetUpdatesCallerInfo*) value {
  if (result.hasCallerInfo &&
      result.callerInfo != [GetUpdatesCallerInfo defaultInstance]) {
    result.callerInfo =
      [[[GetUpdatesCallerInfo builderWithPrototype:result.callerInfo] mergeFrom:value] buildPartial];
  } else {
    result.callerInfo = value;
  }
  result.hasCallerInfo = YES;
  return self;
}
- (GetUpdatesMessage_Builder*) clearCallerInfo {
  result.hasCallerInfo = NO;
  result.callerInfo = [GetUpdatesCallerInfo defaultInstance];
  return self;
}
- (BOOL) hasFetchFolders {
  return result.hasFetchFolders;
}
- (BOOL) fetchFolders {
  return result.fetchFolders;
}
- (GetUpdatesMessage_Builder*) setFetchFolders:(BOOL) value {
  result.hasFetchFolders = YES;
  result.fetchFolders = value;
  return self;
}
- (GetUpdatesMessage_Builder*) clearFetchFolders {
  result.hasFetchFolders = NO;
  result.fetchFolders = YES;
  return self;
}
- (BOOL) hasRequestedTypes {
  return result.hasRequestedTypes;
}
- (EntitySpecifics*) requestedTypes {
  return result.requestedTypes;
}
- (GetUpdatesMessage_Builder*) setRequestedTypes:(EntitySpecifics*) value {
  result.hasRequestedTypes = YES;
  result.requestedTypes = value;
  return self;
}
- (GetUpdatesMessage_Builder*) setRequestedTypesBuilder:(EntitySpecifics_Builder*) builderForValue {
  return [self setRequestedTypes:[builderForValue build]];
}
- (GetUpdatesMessage_Builder*) mergeRequestedTypes:(EntitySpecifics*) value {
  if (result.hasRequestedTypes &&
      result.requestedTypes != [EntitySpecifics defaultInstance]) {
    result.requestedTypes =
      [[[EntitySpecifics builderWithPrototype:result.requestedTypes] mergeFrom:value] buildPartial];
  } else {
    result.requestedTypes = value;
  }
  result.hasRequestedTypes = YES;
  return self;
}
- (GetUpdatesMessage_Builder*) clearRequestedTypes {
  result.hasRequestedTypes = NO;
  result.requestedTypes = [EntitySpecifics defaultInstance];
  return self;
}
- (BOOL) hasBatchSize {
  return result.hasBatchSize;
}
- (int32_t) batchSize {
  return result.batchSize;
}
- (GetUpdatesMessage_Builder*) setBatchSize:(int32_t) value {
  result.hasBatchSize = YES;
  result.batchSize = value;
  return self;
}
- (GetUpdatesMessage_Builder*) clearBatchSize {
  result.hasBatchSize = NO;
  result.batchSize = 0;
  return self;
}
- (NSArray*) fromProgressMarkerList {
  if (result.mutableFromProgressMarkerList == nil) { return [NSArray array]; }
  return result.mutableFromProgressMarkerList;
}
- (DataTypeProgressMarker*) fromProgressMarkerAtIndex:(int32_t) index {
  return [result fromProgressMarkerAtIndex:index];
}
- (GetUpdatesMessage_Builder*) replaceFromProgressMarkerAtIndex:(int32_t) index with:(DataTypeProgressMarker*) value {
  [result.mutableFromProgressMarkerList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (GetUpdatesMessage_Builder*) addAllFromProgressMarker:(NSArray*) values {
  if (result.mutableFromProgressMarkerList == nil) {
    result.mutableFromProgressMarkerList = [NSMutableArray array];
  }
  [result.mutableFromProgressMarkerList addObjectsFromArray:values];
  return self;
}
- (GetUpdatesMessage_Builder*) clearFromProgressMarkerList {
  result.mutableFromProgressMarkerList = nil;
  return self;
}
- (GetUpdatesMessage_Builder*) addFromProgressMarker:(DataTypeProgressMarker*) value {
  if (result.mutableFromProgressMarkerList == nil) {
    result.mutableFromProgressMarkerList = [NSMutableArray array];
  }
  [result.mutableFromProgressMarkerList addObject:value];
  return self;
}
- (BOOL) hasStreaming {
  return result.hasStreaming;
}
- (BOOL) streaming {
  return result.streaming;
}
- (GetUpdatesMessage_Builder*) setStreaming:(BOOL) value {
  result.hasStreaming = YES;
  result.streaming = value;
  return self;
}
- (GetUpdatesMessage_Builder*) clearStreaming {
  result.hasStreaming = NO;
  result.streaming = NO;
  return self;
}
- (BOOL) hasCreateMobileBookmarksFolder {
  return result.hasCreateMobileBookmarksFolder;
}
- (BOOL) createMobileBookmarksFolder {
  return result.createMobileBookmarksFolder;
}
- (GetUpdatesMessage_Builder*) setCreateMobileBookmarksFolder:(BOOL) value {
  result.hasCreateMobileBookmarksFolder = YES;
  result.createMobileBookmarksFolder = value;
  return self;
}
- (GetUpdatesMessage_Builder*) clearCreateMobileBookmarksFolder {
  result.hasCreateMobileBookmarksFolder = NO;
  result.createMobileBookmarksFolder = NO;
  return self;
}
@end

@interface AuthenticateMessage ()
@property (retain) NSString* authToken;
@end

@implementation AuthenticateMessage

- (BOOL) hasAuthToken {
  return !!hasAuthToken_;
}
- (void) setHasAuthToken:(BOOL) value {
  hasAuthToken_ = !!value;
}
@synthesize authToken;
- (void) dealloc {
  self.authToken = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.authToken = @"";
  }
  return self;
}
static AuthenticateMessage* defaultAuthenticateMessageInstance = nil;
+ (void) initialize {
  if (self == [AuthenticateMessage class]) {
    defaultAuthenticateMessageInstance = [[AuthenticateMessage alloc] init];
  }
}
+ (AuthenticateMessage*) defaultInstance {
  return defaultAuthenticateMessageInstance;
}
- (AuthenticateMessage*) defaultInstance {
  return defaultAuthenticateMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasAuthToken) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAuthToken) {
    [output writeString:1 value:self.authToken];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasAuthToken) {
    size += computeStringSize(1, self.authToken);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AuthenticateMessage*) parseFromData:(NSData*) data {
  return (AuthenticateMessage*)[[[AuthenticateMessage builder] mergeFromData:data] build];
}
+ (AuthenticateMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthenticateMessage*)[[[AuthenticateMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AuthenticateMessage*) parseFromInputStream:(NSInputStream*) input {
  return (AuthenticateMessage*)[[[AuthenticateMessage builder] mergeFromInputStream:input] build];
}
+ (AuthenticateMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthenticateMessage*)[[[AuthenticateMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthenticateMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AuthenticateMessage*)[[[AuthenticateMessage builder] mergeFromCodedInputStream:input] build];
}
+ (AuthenticateMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthenticateMessage*)[[[AuthenticateMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthenticateMessage_Builder*) builder {
  return [[[AuthenticateMessage_Builder alloc] init] autorelease];
}
+ (AuthenticateMessage_Builder*) builderWithPrototype:(AuthenticateMessage*) prototype {
  return [[AuthenticateMessage builder] mergeFrom:prototype];
}
- (AuthenticateMessage_Builder*) builder {
  return [AuthenticateMessage builder];
}
@end

@interface AuthenticateMessage_Builder()
@property (retain) AuthenticateMessage* result;
@end

@implementation AuthenticateMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AuthenticateMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AuthenticateMessage_Builder*) clear {
  self.result = [[[AuthenticateMessage alloc] init] autorelease];
  return self;
}
- (AuthenticateMessage_Builder*) clone {
  return [AuthenticateMessage builderWithPrototype:result];
}
- (AuthenticateMessage*) defaultInstance {
  return [AuthenticateMessage defaultInstance];
}
- (AuthenticateMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AuthenticateMessage*) buildPartial {
  AuthenticateMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AuthenticateMessage_Builder*) mergeFrom:(AuthenticateMessage*) other {
  if (other == [AuthenticateMessage defaultInstance]) {
    return self;
  }
  if (other.hasAuthToken) {
    [self setAuthToken:other.authToken];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AuthenticateMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AuthenticateMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setAuthToken:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasAuthToken {
  return result.hasAuthToken;
}
- (NSString*) authToken {
  return result.authToken;
}
- (AuthenticateMessage_Builder*) setAuthToken:(NSString*) value {
  result.hasAuthToken = YES;
  result.authToken = value;
  return self;
}
- (AuthenticateMessage_Builder*) clearAuthToken {
  result.hasAuthToken = NO;
  result.authToken = @"";
  return self;
}
@end

@interface ClearUserDataMessage ()
@end

@implementation ClearUserDataMessage

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static ClearUserDataMessage* defaultClearUserDataMessageInstance = nil;
+ (void) initialize {
  if (self == [ClearUserDataMessage class]) {
    defaultClearUserDataMessageInstance = [[ClearUserDataMessage alloc] init];
  }
}
+ (ClearUserDataMessage*) defaultInstance {
  return defaultClearUserDataMessageInstance;
}
- (ClearUserDataMessage*) defaultInstance {
  return defaultClearUserDataMessageInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ClearUserDataMessage*) parseFromData:(NSData*) data {
  return (ClearUserDataMessage*)[[[ClearUserDataMessage builder] mergeFromData:data] build];
}
+ (ClearUserDataMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClearUserDataMessage*)[[[ClearUserDataMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClearUserDataMessage*) parseFromInputStream:(NSInputStream*) input {
  return (ClearUserDataMessage*)[[[ClearUserDataMessage builder] mergeFromInputStream:input] build];
}
+ (ClearUserDataMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClearUserDataMessage*)[[[ClearUserDataMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClearUserDataMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClearUserDataMessage*)[[[ClearUserDataMessage builder] mergeFromCodedInputStream:input] build];
}
+ (ClearUserDataMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClearUserDataMessage*)[[[ClearUserDataMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClearUserDataMessage_Builder*) builder {
  return [[[ClearUserDataMessage_Builder alloc] init] autorelease];
}
+ (ClearUserDataMessage_Builder*) builderWithPrototype:(ClearUserDataMessage*) prototype {
  return [[ClearUserDataMessage builder] mergeFrom:prototype];
}
- (ClearUserDataMessage_Builder*) builder {
  return [ClearUserDataMessage builder];
}
@end

@interface ClearUserDataMessage_Builder()
@property (retain) ClearUserDataMessage* result;
@end

@implementation ClearUserDataMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ClearUserDataMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClearUserDataMessage_Builder*) clear {
  self.result = [[[ClearUserDataMessage alloc] init] autorelease];
  return self;
}
- (ClearUserDataMessage_Builder*) clone {
  return [ClearUserDataMessage builderWithPrototype:result];
}
- (ClearUserDataMessage*) defaultInstance {
  return [ClearUserDataMessage defaultInstance];
}
- (ClearUserDataMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClearUserDataMessage*) buildPartial {
  ClearUserDataMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ClearUserDataMessage_Builder*) mergeFrom:(ClearUserDataMessage*) other {
  if (other == [ClearUserDataMessage defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClearUserDataMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClearUserDataMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface ClearUserDataResponse ()
@end

@implementation ClearUserDataResponse

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static ClearUserDataResponse* defaultClearUserDataResponseInstance = nil;
+ (void) initialize {
  if (self == [ClearUserDataResponse class]) {
    defaultClearUserDataResponseInstance = [[ClearUserDataResponse alloc] init];
  }
}
+ (ClearUserDataResponse*) defaultInstance {
  return defaultClearUserDataResponseInstance;
}
- (ClearUserDataResponse*) defaultInstance {
  return defaultClearUserDataResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ClearUserDataResponse*) parseFromData:(NSData*) data {
  return (ClearUserDataResponse*)[[[ClearUserDataResponse builder] mergeFromData:data] build];
}
+ (ClearUserDataResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClearUserDataResponse*)[[[ClearUserDataResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClearUserDataResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ClearUserDataResponse*)[[[ClearUserDataResponse builder] mergeFromInputStream:input] build];
}
+ (ClearUserDataResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClearUserDataResponse*)[[[ClearUserDataResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClearUserDataResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClearUserDataResponse*)[[[ClearUserDataResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ClearUserDataResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClearUserDataResponse*)[[[ClearUserDataResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClearUserDataResponse_Builder*) builder {
  return [[[ClearUserDataResponse_Builder alloc] init] autorelease];
}
+ (ClearUserDataResponse_Builder*) builderWithPrototype:(ClearUserDataResponse*) prototype {
  return [[ClearUserDataResponse builder] mergeFrom:prototype];
}
- (ClearUserDataResponse_Builder*) builder {
  return [ClearUserDataResponse builder];
}
@end

@interface ClearUserDataResponse_Builder()
@property (retain) ClearUserDataResponse* result;
@end

@implementation ClearUserDataResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ClearUserDataResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClearUserDataResponse_Builder*) clear {
  self.result = [[[ClearUserDataResponse alloc] init] autorelease];
  return self;
}
- (ClearUserDataResponse_Builder*) clone {
  return [ClearUserDataResponse builderWithPrototype:result];
}
- (ClearUserDataResponse*) defaultInstance {
  return [ClearUserDataResponse defaultInstance];
}
- (ClearUserDataResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClearUserDataResponse*) buildPartial {
  ClearUserDataResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ClearUserDataResponse_Builder*) mergeFrom:(ClearUserDataResponse*) other {
  if (other == [ClearUserDataResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClearUserDataResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClearUserDataResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface ClientToServerMessage ()
@property (retain) NSString* share;
@property int32_t protocolVersion;
@property ClientToServerMessage_Contents messageContents;
@property (retain) CommitMessage* commit;
@property (retain) GetUpdatesMessage* getUpdates;
@property (retain) AuthenticateMessage* authenticate;
@property (retain) ClearUserDataMessage* clearUserData;
@property (retain) NSString* storeBirthday;
@property BOOL syncProblemDetected;
@property (retain) DebugInfo* debugInfo;
@end

@implementation ClientToServerMessage

- (BOOL) hasShare {
  return !!hasShare_;
}
- (void) setHasShare:(BOOL) value {
  hasShare_ = !!value;
}
@synthesize share;
- (BOOL) hasProtocolVersion {
  return !!hasProtocolVersion_;
}
- (void) setHasProtocolVersion:(BOOL) value {
  hasProtocolVersion_ = !!value;
}
@synthesize protocolVersion;
- (BOOL) hasMessageContents {
  return !!hasMessageContents_;
}
- (void) setHasMessageContents:(BOOL) value {
  hasMessageContents_ = !!value;
}
@synthesize messageContents;
- (BOOL) hasCommit {
  return !!hasCommit_;
}
- (void) setHasCommit:(BOOL) value {
  hasCommit_ = !!value;
}
@synthesize commit;
- (BOOL) hasGetUpdates {
  return !!hasGetUpdates_;
}
- (void) setHasGetUpdates:(BOOL) value {
  hasGetUpdates_ = !!value;
}
@synthesize getUpdates;
- (BOOL) hasAuthenticate {
  return !!hasAuthenticate_;
}
- (void) setHasAuthenticate:(BOOL) value {
  hasAuthenticate_ = !!value;
}
@synthesize authenticate;
- (BOOL) hasClearUserData {
  return !!hasClearUserData_;
}
- (void) setHasClearUserData:(BOOL) value {
  hasClearUserData_ = !!value;
}
@synthesize clearUserData;
- (BOOL) hasStoreBirthday {
  return !!hasStoreBirthday_;
}
- (void) setHasStoreBirthday:(BOOL) value {
  hasStoreBirthday_ = !!value;
}
@synthesize storeBirthday;
- (BOOL) hasSyncProblemDetected {
  return !!hasSyncProblemDetected_;
}
- (void) setHasSyncProblemDetected:(BOOL) value {
  hasSyncProblemDetected_ = !!value;
}
- (BOOL) syncProblemDetected {
  return !!syncProblemDetected_;
}
- (void) setSyncProblemDetected:(BOOL) value {
  syncProblemDetected_ = !!value;
}
- (BOOL) hasDebugInfo {
  return !!hasDebugInfo_;
}
- (void) setHasDebugInfo:(BOOL) value {
  hasDebugInfo_ = !!value;
}
@synthesize debugInfo;
- (void) dealloc {
  self.share = nil;
  self.commit = nil;
  self.getUpdates = nil;
  self.authenticate = nil;
  self.clearUserData = nil;
  self.storeBirthday = nil;
  self.debugInfo = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.share = @"";
    self.protocolVersion = 31;
    self.messageContents = ClientToServerMessage_ContentsCommit;
    self.commit = [CommitMessage defaultInstance];
    self.getUpdates = [GetUpdatesMessage defaultInstance];
    self.authenticate = [AuthenticateMessage defaultInstance];
    self.clearUserData = [ClearUserDataMessage defaultInstance];
    self.storeBirthday = @"";
    self.syncProblemDetected = NO;
    self.debugInfo = [DebugInfo defaultInstance];
  }
  return self;
}
static ClientToServerMessage* defaultClientToServerMessageInstance = nil;
+ (void) initialize {
  if (self == [ClientToServerMessage class]) {
    defaultClientToServerMessageInstance = [[ClientToServerMessage alloc] init];
  }
}
+ (ClientToServerMessage*) defaultInstance {
  return defaultClientToServerMessageInstance;
}
- (ClientToServerMessage*) defaultInstance {
  return defaultClientToServerMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasShare) {
    return NO;
  }
  if (!self.hasMessageContents) {
    return NO;
  }
  if (self.hasCommit) {
    if (!self.commit.isInitialized) {
      return NO;
    }
  }
  if (self.hasGetUpdates) {
    if (!self.getUpdates.isInitialized) {
      return NO;
    }
  }
  if (self.hasAuthenticate) {
    if (!self.authenticate.isInitialized) {
      return NO;
    }
  }
  if (self.hasDebugInfo) {
    if (!self.debugInfo.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasShare) {
    [output writeString:1 value:self.share];
  }
  if (self.hasProtocolVersion) {
    [output writeInt32:2 value:self.protocolVersion];
  }
  if (self.hasMessageContents) {
    [output writeEnum:3 value:self.messageContents];
  }
  if (self.hasCommit) {
    [output writeMessage:4 value:self.commit];
  }
  if (self.hasGetUpdates) {
    [output writeMessage:5 value:self.getUpdates];
  }
  if (self.hasAuthenticate) {
    [output writeMessage:6 value:self.authenticate];
  }
  if (self.hasStoreBirthday) {
    [output writeString:7 value:self.storeBirthday];
  }
  if (self.hasSyncProblemDetected) {
    [output writeBool:8 value:self.syncProblemDetected];
  }
  if (self.hasClearUserData) {
    [output writeMessage:9 value:self.clearUserData];
  }
  if (self.hasDebugInfo) {
    [output writeMessage:10 value:self.debugInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasShare) {
    size += computeStringSize(1, self.share);
  }
  if (self.hasProtocolVersion) {
    size += computeInt32Size(2, self.protocolVersion);
  }
  if (self.hasMessageContents) {
    size += computeEnumSize(3, self.messageContents);
  }
  if (self.hasCommit) {
    size += computeMessageSize(4, self.commit);
  }
  if (self.hasGetUpdates) {
    size += computeMessageSize(5, self.getUpdates);
  }
  if (self.hasAuthenticate) {
    size += computeMessageSize(6, self.authenticate);
  }
  if (self.hasStoreBirthday) {
    size += computeStringSize(7, self.storeBirthday);
  }
  if (self.hasSyncProblemDetected) {
    size += computeBoolSize(8, self.syncProblemDetected);
  }
  if (self.hasClearUserData) {
    size += computeMessageSize(9, self.clearUserData);
  }
  if (self.hasDebugInfo) {
    size += computeMessageSize(10, self.debugInfo);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ClientToServerMessage*) parseFromData:(NSData*) data {
  return (ClientToServerMessage*)[[[ClientToServerMessage builder] mergeFromData:data] build];
}
+ (ClientToServerMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientToServerMessage*)[[[ClientToServerMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClientToServerMessage*) parseFromInputStream:(NSInputStream*) input {
  return (ClientToServerMessage*)[[[ClientToServerMessage builder] mergeFromInputStream:input] build];
}
+ (ClientToServerMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientToServerMessage*)[[[ClientToServerMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientToServerMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClientToServerMessage*)[[[ClientToServerMessage builder] mergeFromCodedInputStream:input] build];
}
+ (ClientToServerMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientToServerMessage*)[[[ClientToServerMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientToServerMessage_Builder*) builder {
  return [[[ClientToServerMessage_Builder alloc] init] autorelease];
}
+ (ClientToServerMessage_Builder*) builderWithPrototype:(ClientToServerMessage*) prototype {
  return [[ClientToServerMessage builder] mergeFrom:prototype];
}
- (ClientToServerMessage_Builder*) builder {
  return [ClientToServerMessage builder];
}
@end

BOOL ClientToServerMessage_ContentsIsValidValue(ClientToServerMessage_Contents value) {
  switch (value) {
    case ClientToServerMessage_ContentsCommit:
    case ClientToServerMessage_ContentsGetUpdates:
    case ClientToServerMessage_ContentsAuthenticate:
    case ClientToServerMessage_ContentsClearData:
      return YES;
    default:
      return NO;
  }
}
@interface ClientToServerMessage_Builder()
@property (retain) ClientToServerMessage* result;
@end

@implementation ClientToServerMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ClientToServerMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClientToServerMessage_Builder*) clear {
  self.result = [[[ClientToServerMessage alloc] init] autorelease];
  return self;
}
- (ClientToServerMessage_Builder*) clone {
  return [ClientToServerMessage builderWithPrototype:result];
}
- (ClientToServerMessage*) defaultInstance {
  return [ClientToServerMessage defaultInstance];
}
- (ClientToServerMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClientToServerMessage*) buildPartial {
  ClientToServerMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ClientToServerMessage_Builder*) mergeFrom:(ClientToServerMessage*) other {
  if (other == [ClientToServerMessage defaultInstance]) {
    return self;
  }
  if (other.hasShare) {
    [self setShare:other.share];
  }
  if (other.hasProtocolVersion) {
    [self setProtocolVersion:other.protocolVersion];
  }
  if (other.hasMessageContents) {
    [self setMessageContents:other.messageContents];
  }
  if (other.hasCommit) {
    [self mergeCommit:other.commit];
  }
  if (other.hasGetUpdates) {
    [self mergeGetUpdates:other.getUpdates];
  }
  if (other.hasAuthenticate) {
    [self mergeAuthenticate:other.authenticate];
  }
  if (other.hasClearUserData) {
    [self mergeClearUserData:other.clearUserData];
  }
  if (other.hasStoreBirthday) {
    [self setStoreBirthday:other.storeBirthday];
  }
  if (other.hasSyncProblemDetected) {
    [self setSyncProblemDetected:other.syncProblemDetected];
  }
  if (other.hasDebugInfo) {
    [self mergeDebugInfo:other.debugInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClientToServerMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClientToServerMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setShare:[input readString]];
        break;
      }
      case 16: {
        [self setProtocolVersion:[input readInt32]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (ClientToServerMessage_ContentsIsValidValue(value)) {
          [self setMessageContents:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 34: {
        CommitMessage_Builder* subBuilder = [CommitMessage builder];
        if (self.hasCommit) {
          [subBuilder mergeFrom:self.commit];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCommit:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        GetUpdatesMessage_Builder* subBuilder = [GetUpdatesMessage builder];
        if (self.hasGetUpdates) {
          [subBuilder mergeFrom:self.getUpdates];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGetUpdates:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        AuthenticateMessage_Builder* subBuilder = [AuthenticateMessage builder];
        if (self.hasAuthenticate) {
          [subBuilder mergeFrom:self.authenticate];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAuthenticate:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        [self setStoreBirthday:[input readString]];
        break;
      }
      case 64: {
        [self setSyncProblemDetected:[input readBool]];
        break;
      }
      case 74: {
        ClearUserDataMessage_Builder* subBuilder = [ClearUserDataMessage builder];
        if (self.hasClearUserData) {
          [subBuilder mergeFrom:self.clearUserData];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClearUserData:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        DebugInfo_Builder* subBuilder = [DebugInfo builder];
        if (self.hasDebugInfo) {
          [subBuilder mergeFrom:self.debugInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDebugInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasShare {
  return result.hasShare;
}
- (NSString*) share {
  return result.share;
}
- (ClientToServerMessage_Builder*) setShare:(NSString*) value {
  result.hasShare = YES;
  result.share = value;
  return self;
}
- (ClientToServerMessage_Builder*) clearShare {
  result.hasShare = NO;
  result.share = @"";
  return self;
}
- (BOOL) hasProtocolVersion {
  return result.hasProtocolVersion;
}
- (int32_t) protocolVersion {
  return result.protocolVersion;
}
- (ClientToServerMessage_Builder*) setProtocolVersion:(int32_t) value {
  result.hasProtocolVersion = YES;
  result.protocolVersion = value;
  return self;
}
- (ClientToServerMessage_Builder*) clearProtocolVersion {
  result.hasProtocolVersion = NO;
  result.protocolVersion = 31;
  return self;
}
- (BOOL) hasMessageContents {
  return result.hasMessageContents;
}
- (ClientToServerMessage_Contents) messageContents {
  return result.messageContents;
}
- (ClientToServerMessage_Builder*) setMessageContents:(ClientToServerMessage_Contents) value {
  result.hasMessageContents = YES;
  result.messageContents = value;
  return self;
}
- (ClientToServerMessage_Builder*) clearMessageContents {
  result.hasMessageContents = NO;
  result.messageContents = ClientToServerMessage_ContentsCommit;
  return self;
}
- (BOOL) hasCommit {
  return result.hasCommit;
}
- (CommitMessage*) commit {
  return result.commit;
}
- (ClientToServerMessage_Builder*) setCommit:(CommitMessage*) value {
  result.hasCommit = YES;
  result.commit = value;
  return self;
}
- (ClientToServerMessage_Builder*) setCommitBuilder:(CommitMessage_Builder*) builderForValue {
  return [self setCommit:[builderForValue build]];
}
- (ClientToServerMessage_Builder*) mergeCommit:(CommitMessage*) value {
  if (result.hasCommit &&
      result.commit != [CommitMessage defaultInstance]) {
    result.commit =
      [[[CommitMessage builderWithPrototype:result.commit] mergeFrom:value] buildPartial];
  } else {
    result.commit = value;
  }
  result.hasCommit = YES;
  return self;
}
- (ClientToServerMessage_Builder*) clearCommit {
  result.hasCommit = NO;
  result.commit = [CommitMessage defaultInstance];
  return self;
}
- (BOOL) hasGetUpdates {
  return result.hasGetUpdates;
}
- (GetUpdatesMessage*) getUpdates {
  return result.getUpdates;
}
- (ClientToServerMessage_Builder*) setGetUpdates:(GetUpdatesMessage*) value {
  result.hasGetUpdates = YES;
  result.getUpdates = value;
  return self;
}
- (ClientToServerMessage_Builder*) setGetUpdatesBuilder:(GetUpdatesMessage_Builder*) builderForValue {
  return [self setGetUpdates:[builderForValue build]];
}
- (ClientToServerMessage_Builder*) mergeGetUpdates:(GetUpdatesMessage*) value {
  if (result.hasGetUpdates &&
      result.getUpdates != [GetUpdatesMessage defaultInstance]) {
    result.getUpdates =
      [[[GetUpdatesMessage builderWithPrototype:result.getUpdates] mergeFrom:value] buildPartial];
  } else {
    result.getUpdates = value;
  }
  result.hasGetUpdates = YES;
  return self;
}
- (ClientToServerMessage_Builder*) clearGetUpdates {
  result.hasGetUpdates = NO;
  result.getUpdates = [GetUpdatesMessage defaultInstance];
  return self;
}
- (BOOL) hasAuthenticate {
  return result.hasAuthenticate;
}
- (AuthenticateMessage*) authenticate {
  return result.authenticate;
}
- (ClientToServerMessage_Builder*) setAuthenticate:(AuthenticateMessage*) value {
  result.hasAuthenticate = YES;
  result.authenticate = value;
  return self;
}
- (ClientToServerMessage_Builder*) setAuthenticateBuilder:(AuthenticateMessage_Builder*) builderForValue {
  return [self setAuthenticate:[builderForValue build]];
}
- (ClientToServerMessage_Builder*) mergeAuthenticate:(AuthenticateMessage*) value {
  if (result.hasAuthenticate &&
      result.authenticate != [AuthenticateMessage defaultInstance]) {
    result.authenticate =
      [[[AuthenticateMessage builderWithPrototype:result.authenticate] mergeFrom:value] buildPartial];
  } else {
    result.authenticate = value;
  }
  result.hasAuthenticate = YES;
  return self;
}
- (ClientToServerMessage_Builder*) clearAuthenticate {
  result.hasAuthenticate = NO;
  result.authenticate = [AuthenticateMessage defaultInstance];
  return self;
}
- (BOOL) hasClearUserData {
  return result.hasClearUserData;
}
- (ClearUserDataMessage*) clearUserData {
  return result.clearUserData;
}
- (ClientToServerMessage_Builder*) setClearUserData:(ClearUserDataMessage*) value {
  result.hasClearUserData = YES;
  result.clearUserData = value;
  return self;
}
- (ClientToServerMessage_Builder*) setClearUserDataBuilder:(ClearUserDataMessage_Builder*) builderForValue {
  return [self setClearUserData:[builderForValue build]];
}
- (ClientToServerMessage_Builder*) mergeClearUserData:(ClearUserDataMessage*) value {
  if (result.hasClearUserData &&
      result.clearUserData != [ClearUserDataMessage defaultInstance]) {
    result.clearUserData =
      [[[ClearUserDataMessage builderWithPrototype:result.clearUserData] mergeFrom:value] buildPartial];
  } else {
    result.clearUserData = value;
  }
  result.hasClearUserData = YES;
  return self;
}
- (ClientToServerMessage_Builder*) clearClearUserData {
  result.hasClearUserData = NO;
  result.clearUserData = [ClearUserDataMessage defaultInstance];
  return self;
}
- (BOOL) hasStoreBirthday {
  return result.hasStoreBirthday;
}
- (NSString*) storeBirthday {
  return result.storeBirthday;
}
- (ClientToServerMessage_Builder*) setStoreBirthday:(NSString*) value {
  result.hasStoreBirthday = YES;
  result.storeBirthday = value;
  return self;
}
- (ClientToServerMessage_Builder*) clearStoreBirthday {
  result.hasStoreBirthday = NO;
  result.storeBirthday = @"";
  return self;
}
- (BOOL) hasSyncProblemDetected {
  return result.hasSyncProblemDetected;
}
- (BOOL) syncProblemDetected {
  return result.syncProblemDetected;
}
- (ClientToServerMessage_Builder*) setSyncProblemDetected:(BOOL) value {
  result.hasSyncProblemDetected = YES;
  result.syncProblemDetected = value;
  return self;
}
- (ClientToServerMessage_Builder*) clearSyncProblemDetected {
  result.hasSyncProblemDetected = NO;
  result.syncProblemDetected = NO;
  return self;
}
- (BOOL) hasDebugInfo {
  return result.hasDebugInfo;
}
- (DebugInfo*) debugInfo {
  return result.debugInfo;
}
- (ClientToServerMessage_Builder*) setDebugInfo:(DebugInfo*) value {
  result.hasDebugInfo = YES;
  result.debugInfo = value;
  return self;
}
- (ClientToServerMessage_Builder*) setDebugInfoBuilder:(DebugInfo_Builder*) builderForValue {
  return [self setDebugInfo:[builderForValue build]];
}
- (ClientToServerMessage_Builder*) mergeDebugInfo:(DebugInfo*) value {
  if (result.hasDebugInfo &&
      result.debugInfo != [DebugInfo defaultInstance]) {
    result.debugInfo =
      [[[DebugInfo builderWithPrototype:result.debugInfo] mergeFrom:value] buildPartial];
  } else {
    result.debugInfo = value;
  }
  result.hasDebugInfo = YES;
  return self;
}
- (ClientToServerMessage_Builder*) clearDebugInfo {
  result.hasDebugInfo = NO;
  result.debugInfo = [DebugInfo defaultInstance];
  return self;
}
@end

@interface CommitResponse ()
@property (retain) NSMutableArray* mutableEntryResponseList;
@end

@implementation CommitResponse

@synthesize mutableEntryResponseList;
- (void) dealloc {
  self.mutableEntryResponseList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CommitResponse* defaultCommitResponseInstance = nil;
+ (void) initialize {
  if (self == [CommitResponse class]) {
    defaultCommitResponseInstance = [[CommitResponse alloc] init];
  }
}
+ (CommitResponse*) defaultInstance {
  return defaultCommitResponseInstance;
}
- (CommitResponse*) defaultInstance {
  return defaultCommitResponseInstance;
}
- (NSArray*) entryResponseList {
  return mutableEntryResponseList;
}
- (CommitResponse_EntryResponse*) entryResponseAtIndex:(int32_t) index {
  id value = [mutableEntryResponseList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (CommitResponse_EntryResponse* element in self.entryResponseList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (CommitResponse_EntryResponse* element in self.entryResponseList) {
    [output writeGroup:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (CommitResponse_EntryResponse* element in self.entryResponseList) {
    size += computeGroupSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CommitResponse*) parseFromData:(NSData*) data {
  return (CommitResponse*)[[[CommitResponse builder] mergeFromData:data] build];
}
+ (CommitResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommitResponse*)[[[CommitResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommitResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CommitResponse*)[[[CommitResponse builder] mergeFromInputStream:input] build];
}
+ (CommitResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommitResponse*)[[[CommitResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommitResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CommitResponse*)[[[CommitResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CommitResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommitResponse*)[[[CommitResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommitResponse_Builder*) builder {
  return [[[CommitResponse_Builder alloc] init] autorelease];
}
+ (CommitResponse_Builder*) builderWithPrototype:(CommitResponse*) prototype {
  return [[CommitResponse builder] mergeFrom:prototype];
}
- (CommitResponse_Builder*) builder {
  return [CommitResponse builder];
}
@end

BOOL CommitResponse_ResponseTypeIsValidValue(CommitResponse_ResponseType value) {
  switch (value) {
    case CommitResponse_ResponseTypeSuccess:
    case CommitResponse_ResponseTypeConflict:
    case CommitResponse_ResponseTypeRetry:
    case CommitResponse_ResponseTypeInvalidMessage:
    case CommitResponse_ResponseTypeOverQuota:
    case CommitResponse_ResponseTypeTransientError:
      return YES;
    default:
      return NO;
  }
}
@interface CommitResponse_EntryResponse ()
@property CommitResponse_ResponseType responseType;
@property (retain) NSString* idString;
@property (retain) NSString* parentIdString;
@property int64_t positionInParent;
@property int64_t version;
@property (retain) NSString* name;
@property (retain) NSString* nonUniqueName;
@property (retain) NSString* errorMessage;
@property int64_t mtime;
@end

@implementation CommitResponse_EntryResponse

- (BOOL) hasResponseType {
  return !!hasResponseType_;
}
- (void) setHasResponseType:(BOOL) value {
  hasResponseType_ = !!value;
}
@synthesize responseType;
- (BOOL) hasIdString {
  return !!hasIdString_;
}
- (void) setHasIdString:(BOOL) value {
  hasIdString_ = !!value;
}
@synthesize idString;
- (BOOL) hasParentIdString {
  return !!hasParentIdString_;
}
- (void) setHasParentIdString:(BOOL) value {
  hasParentIdString_ = !!value;
}
@synthesize parentIdString;
- (BOOL) hasPositionInParent {
  return !!hasPositionInParent_;
}
- (void) setHasPositionInParent:(BOOL) value {
  hasPositionInParent_ = !!value;
}
@synthesize positionInParent;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value {
  hasVersion_ = !!value;
}
@synthesize version;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasNonUniqueName {
  return !!hasNonUniqueName_;
}
- (void) setHasNonUniqueName:(BOOL) value {
  hasNonUniqueName_ = !!value;
}
@synthesize nonUniqueName;
- (BOOL) hasErrorMessage {
  return !!hasErrorMessage_;
}
- (void) setHasErrorMessage:(BOOL) value {
  hasErrorMessage_ = !!value;
}
@synthesize errorMessage;
- (BOOL) hasMtime {
  return !!hasMtime_;
}
- (void) setHasMtime:(BOOL) value {
  hasMtime_ = !!value;
}
@synthesize mtime;
- (void) dealloc {
  self.idString = nil;
  self.parentIdString = nil;
  self.name = nil;
  self.nonUniqueName = nil;
  self.errorMessage = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.responseType = CommitResponse_ResponseTypeSuccess;
    self.idString = @"";
    self.parentIdString = @"";
    self.positionInParent = 0L;
    self.version = 0L;
    self.name = @"";
    self.nonUniqueName = @"";
    self.errorMessage = @"";
    self.mtime = 0L;
  }
  return self;
}
static CommitResponse_EntryResponse* defaultCommitResponse_EntryResponseInstance = nil;
+ (void) initialize {
  if (self == [CommitResponse_EntryResponse class]) {
    defaultCommitResponse_EntryResponseInstance = [[CommitResponse_EntryResponse alloc] init];
  }
}
+ (CommitResponse_EntryResponse*) defaultInstance {
  return defaultCommitResponse_EntryResponseInstance;
}
- (CommitResponse_EntryResponse*) defaultInstance {
  return defaultCommitResponse_EntryResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasResponseType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResponseType) {
    [output writeEnum:2 value:self.responseType];
  }
  if (self.hasIdString) {
    [output writeString:3 value:self.idString];
  }
  if (self.hasParentIdString) {
    [output writeString:4 value:self.parentIdString];
  }
  if (self.hasPositionInParent) {
    [output writeInt64:5 value:self.positionInParent];
  }
  if (self.hasVersion) {
    [output writeInt64:6 value:self.version];
  }
  if (self.hasName) {
    [output writeString:7 value:self.name];
  }
  if (self.hasNonUniqueName) {
    [output writeString:8 value:self.nonUniqueName];
  }
  if (self.hasErrorMessage) {
    [output writeString:9 value:self.errorMessage];
  }
  if (self.hasMtime) {
    [output writeInt64:10 value:self.mtime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasResponseType) {
    size += computeEnumSize(2, self.responseType);
  }
  if (self.hasIdString) {
    size += computeStringSize(3, self.idString);
  }
  if (self.hasParentIdString) {
    size += computeStringSize(4, self.parentIdString);
  }
  if (self.hasPositionInParent) {
    size += computeInt64Size(5, self.positionInParent);
  }
  if (self.hasVersion) {
    size += computeInt64Size(6, self.version);
  }
  if (self.hasName) {
    size += computeStringSize(7, self.name);
  }
  if (self.hasNonUniqueName) {
    size += computeStringSize(8, self.nonUniqueName);
  }
  if (self.hasErrorMessage) {
    size += computeStringSize(9, self.errorMessage);
  }
  if (self.hasMtime) {
    size += computeInt64Size(10, self.mtime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CommitResponse_EntryResponse*) parseFromData:(NSData*) data {
  return (CommitResponse_EntryResponse*)[[[CommitResponse_EntryResponse builder] mergeFromData:data] build];
}
+ (CommitResponse_EntryResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommitResponse_EntryResponse*)[[[CommitResponse_EntryResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommitResponse_EntryResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CommitResponse_EntryResponse*)[[[CommitResponse_EntryResponse builder] mergeFromInputStream:input] build];
}
+ (CommitResponse_EntryResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommitResponse_EntryResponse*)[[[CommitResponse_EntryResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommitResponse_EntryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CommitResponse_EntryResponse*)[[[CommitResponse_EntryResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CommitResponse_EntryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommitResponse_EntryResponse*)[[[CommitResponse_EntryResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommitResponse_EntryResponse_Builder*) builder {
  return [[[CommitResponse_EntryResponse_Builder alloc] init] autorelease];
}
+ (CommitResponse_EntryResponse_Builder*) builderWithPrototype:(CommitResponse_EntryResponse*) prototype {
  return [[CommitResponse_EntryResponse builder] mergeFrom:prototype];
}
- (CommitResponse_EntryResponse_Builder*) builder {
  return [CommitResponse_EntryResponse builder];
}
@end

@interface CommitResponse_EntryResponse_Builder()
@property (retain) CommitResponse_EntryResponse* result;
@end

@implementation CommitResponse_EntryResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CommitResponse_EntryResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommitResponse_EntryResponse_Builder*) clear {
  self.result = [[[CommitResponse_EntryResponse alloc] init] autorelease];
  return self;
}
- (CommitResponse_EntryResponse_Builder*) clone {
  return [CommitResponse_EntryResponse builderWithPrototype:result];
}
- (CommitResponse_EntryResponse*) defaultInstance {
  return [CommitResponse_EntryResponse defaultInstance];
}
- (CommitResponse_EntryResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommitResponse_EntryResponse*) buildPartial {
  CommitResponse_EntryResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CommitResponse_EntryResponse_Builder*) mergeFrom:(CommitResponse_EntryResponse*) other {
  if (other == [CommitResponse_EntryResponse defaultInstance]) {
    return self;
  }
  if (other.hasResponseType) {
    [self setResponseType:other.responseType];
  }
  if (other.hasIdString) {
    [self setIdString:other.idString];
  }
  if (other.hasParentIdString) {
    [self setParentIdString:other.parentIdString];
  }
  if (other.hasPositionInParent) {
    [self setPositionInParent:other.positionInParent];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasNonUniqueName) {
    [self setNonUniqueName:other.nonUniqueName];
  }
  if (other.hasErrorMessage) {
    [self setErrorMessage:other.errorMessage];
  }
  if (other.hasMtime) {
    [self setMtime:other.mtime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommitResponse_EntryResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CommitResponse_EntryResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (CommitResponse_ResponseTypeIsValidValue(value)) {
          [self setResponseType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setIdString:[input readString]];
        break;
      }
      case 34: {
        [self setParentIdString:[input readString]];
        break;
      }
      case 40: {
        [self setPositionInParent:[input readInt64]];
        break;
      }
      case 48: {
        [self setVersion:[input readInt64]];
        break;
      }
      case 58: {
        [self setName:[input readString]];
        break;
      }
      case 66: {
        [self setNonUniqueName:[input readString]];
        break;
      }
      case 74: {
        [self setErrorMessage:[input readString]];
        break;
      }
      case 80: {
        [self setMtime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasResponseType {
  return result.hasResponseType;
}
- (CommitResponse_ResponseType) responseType {
  return result.responseType;
}
- (CommitResponse_EntryResponse_Builder*) setResponseType:(CommitResponse_ResponseType) value {
  result.hasResponseType = YES;
  result.responseType = value;
  return self;
}
- (CommitResponse_EntryResponse_Builder*) clearResponseType {
  result.hasResponseType = NO;
  result.responseType = CommitResponse_ResponseTypeSuccess;
  return self;
}
- (BOOL) hasIdString {
  return result.hasIdString;
}
- (NSString*) idString {
  return result.idString;
}
- (CommitResponse_EntryResponse_Builder*) setIdString:(NSString*) value {
  result.hasIdString = YES;
  result.idString = value;
  return self;
}
- (CommitResponse_EntryResponse_Builder*) clearIdString {
  result.hasIdString = NO;
  result.idString = @"";
  return self;
}
- (BOOL) hasParentIdString {
  return result.hasParentIdString;
}
- (NSString*) parentIdString {
  return result.parentIdString;
}
- (CommitResponse_EntryResponse_Builder*) setParentIdString:(NSString*) value {
  result.hasParentIdString = YES;
  result.parentIdString = value;
  return self;
}
- (CommitResponse_EntryResponse_Builder*) clearParentIdString {
  result.hasParentIdString = NO;
  result.parentIdString = @"";
  return self;
}
- (BOOL) hasPositionInParent {
  return result.hasPositionInParent;
}
- (int64_t) positionInParent {
  return result.positionInParent;
}
- (CommitResponse_EntryResponse_Builder*) setPositionInParent:(int64_t) value {
  result.hasPositionInParent = YES;
  result.positionInParent = value;
  return self;
}
- (CommitResponse_EntryResponse_Builder*) clearPositionInParent {
  result.hasPositionInParent = NO;
  result.positionInParent = 0L;
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int64_t) version {
  return result.version;
}
- (CommitResponse_EntryResponse_Builder*) setVersion:(int64_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (CommitResponse_EntryResponse_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 0L;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (CommitResponse_EntryResponse_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (CommitResponse_EntryResponse_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasNonUniqueName {
  return result.hasNonUniqueName;
}
- (NSString*) nonUniqueName {
  return result.nonUniqueName;
}
- (CommitResponse_EntryResponse_Builder*) setNonUniqueName:(NSString*) value {
  result.hasNonUniqueName = YES;
  result.nonUniqueName = value;
  return self;
}
- (CommitResponse_EntryResponse_Builder*) clearNonUniqueName {
  result.hasNonUniqueName = NO;
  result.nonUniqueName = @"";
  return self;
}
- (BOOL) hasErrorMessage {
  return result.hasErrorMessage;
}
- (NSString*) errorMessage {
  return result.errorMessage;
}
- (CommitResponse_EntryResponse_Builder*) setErrorMessage:(NSString*) value {
  result.hasErrorMessage = YES;
  result.errorMessage = value;
  return self;
}
- (CommitResponse_EntryResponse_Builder*) clearErrorMessage {
  result.hasErrorMessage = NO;
  result.errorMessage = @"";
  return self;
}
- (BOOL) hasMtime {
  return result.hasMtime;
}
- (int64_t) mtime {
  return result.mtime;
}
- (CommitResponse_EntryResponse_Builder*) setMtime:(int64_t) value {
  result.hasMtime = YES;
  result.mtime = value;
  return self;
}
- (CommitResponse_EntryResponse_Builder*) clearMtime {
  result.hasMtime = NO;
  result.mtime = 0L;
  return self;
}
@end

@interface CommitResponse_Builder()
@property (retain) CommitResponse* result;
@end

@implementation CommitResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CommitResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommitResponse_Builder*) clear {
  self.result = [[[CommitResponse alloc] init] autorelease];
  return self;
}
- (CommitResponse_Builder*) clone {
  return [CommitResponse builderWithPrototype:result];
}
- (CommitResponse*) defaultInstance {
  return [CommitResponse defaultInstance];
}
- (CommitResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommitResponse*) buildPartial {
  CommitResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CommitResponse_Builder*) mergeFrom:(CommitResponse*) other {
  if (other == [CommitResponse defaultInstance]) {
    return self;
  }
  if (other.mutableEntryResponseList.count > 0) {
    if (result.mutableEntryResponseList == nil) {
      result.mutableEntryResponseList = [NSMutableArray array];
    }
    [result.mutableEntryResponseList addObjectsFromArray:other.mutableEntryResponseList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommitResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CommitResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 11: {
        CommitResponse_EntryResponse_Builder* subBuilder = [CommitResponse_EntryResponse builder];
        [input readGroup:1 builder:subBuilder extensionRegistry:extensionRegistry];
        [self addEntryResponse:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) entryResponseList {
  if (result.mutableEntryResponseList == nil) { return [NSArray array]; }
  return result.mutableEntryResponseList;
}
- (CommitResponse_EntryResponse*) entryResponseAtIndex:(int32_t) index {
  return [result entryResponseAtIndex:index];
}
- (CommitResponse_Builder*) replaceEntryResponseAtIndex:(int32_t) index with:(CommitResponse_EntryResponse*) value {
  [result.mutableEntryResponseList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (CommitResponse_Builder*) addAllEntryResponse:(NSArray*) values {
  if (result.mutableEntryResponseList == nil) {
    result.mutableEntryResponseList = [NSMutableArray array];
  }
  [result.mutableEntryResponseList addObjectsFromArray:values];
  return self;
}
- (CommitResponse_Builder*) clearEntryResponseList {
  result.mutableEntryResponseList = nil;
  return self;
}
- (CommitResponse_Builder*) addEntryResponse:(CommitResponse_EntryResponse*) value {
  if (result.mutableEntryResponseList == nil) {
    result.mutableEntryResponseList = [NSMutableArray array];
  }
  [result.mutableEntryResponseList addObject:value];
  return self;
}
@end

@interface GetUpdatesResponse ()
@property (retain) NSMutableArray* mutableEntriesList;
@property int64_t newTimestamp;
@property int64_t deprecatedNewestTimestamp;
@property int64_t changesRemaining;
@property (retain) NSMutableArray* mutableNewProgressMarkerList;
@end

@implementation GetUpdatesResponse

@synthesize mutableEntriesList;
- (BOOL) hasNewTimestamp {
  return !!hasNewTimestamp_;
}
- (void) setHasNewTimestamp:(BOOL) value {
  hasNewTimestamp_ = !!value;
}
@synthesize newTimestamp;
- (BOOL) hasDeprecatedNewestTimestamp {
  return !!hasDeprecatedNewestTimestamp_;
}
- (void) setHasDeprecatedNewestTimestamp:(BOOL) value {
  hasDeprecatedNewestTimestamp_ = !!value;
}
@synthesize deprecatedNewestTimestamp;
- (BOOL) hasChangesRemaining {
  return !!hasChangesRemaining_;
}
- (void) setHasChangesRemaining:(BOOL) value {
  hasChangesRemaining_ = !!value;
}
@synthesize changesRemaining;
@synthesize mutableNewProgressMarkerList;
- (void) dealloc {
  self.mutableEntriesList = nil;
  //self.mutableNewProgressMarkerList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.newTimestamp = 0L;
    self.deprecatedNewestTimestamp = 0L;
    self.changesRemaining = 0L;
  }
  return self;
}
static GetUpdatesResponse* defaultGetUpdatesResponseInstance = nil;
+ (void) initialize {
  if (self == [GetUpdatesResponse class]) {
    defaultGetUpdatesResponseInstance = [[GetUpdatesResponse alloc] init];
  }
}
+ (GetUpdatesResponse*) defaultInstance {
  return defaultGetUpdatesResponseInstance;
}
- (GetUpdatesResponse*) defaultInstance {
  return defaultGetUpdatesResponseInstance;
}
- (NSArray*) entriesList {
  return mutableEntriesList;
}
- (SyncEntity*) entriesAtIndex:(int32_t) index {
  id value = [mutableEntriesList objectAtIndex:index];
  return value;
}
- (NSArray*) newProgressMarkerList {
  return mutableNewProgressMarkerList;
}
- (DataTypeProgressMarker*) newProgressMarkerAtIndex:(int32_t) index {
  id value = [mutableNewProgressMarkerList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (SyncEntity* element in self.entriesList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (SyncEntity* element in self.entriesList) {
    [output writeMessage:1 value:element];
  }
  if (self.hasNewTimestamp) {
    [output writeInt64:2 value:self.newTimestamp];
  }
  if (self.hasDeprecatedNewestTimestamp) {
    [output writeInt64:3 value:self.deprecatedNewestTimestamp];
  }
  if (self.hasChangesRemaining) {
    [output writeInt64:4 value:self.changesRemaining];
  }
  for (DataTypeProgressMarker* element in self.newProgressMarkerList) {
    [output writeMessage:5 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (SyncEntity* element in self.entriesList) {
    size += computeMessageSize(1, element);
  }
  if (self.hasNewTimestamp) {
    size += computeInt64Size(2, self.newTimestamp);
  }
  if (self.hasDeprecatedNewestTimestamp) {
    size += computeInt64Size(3, self.deprecatedNewestTimestamp);
  }
  if (self.hasChangesRemaining) {
    size += computeInt64Size(4, self.changesRemaining);
  }
  for (DataTypeProgressMarker* element in self.newProgressMarkerList) {
    size += computeMessageSize(5, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetUpdatesResponse*) parseFromData:(NSData*) data {
  return (GetUpdatesResponse*)[[[GetUpdatesResponse builder] mergeFromData:data] build];
}
+ (GetUpdatesResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUpdatesResponse*)[[[GetUpdatesResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetUpdatesResponse*) parseFromInputStream:(NSInputStream*) input {
  return (GetUpdatesResponse*)[[[GetUpdatesResponse builder] mergeFromInputStream:input] build];
}
+ (GetUpdatesResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUpdatesResponse*)[[[GetUpdatesResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUpdatesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetUpdatesResponse*)[[[GetUpdatesResponse builder] mergeFromCodedInputStream:input] build];
}
+ (GetUpdatesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUpdatesResponse*)[[[GetUpdatesResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUpdatesResponse_Builder*) builder {
  return [[[GetUpdatesResponse_Builder alloc] init] autorelease];
}
+ (GetUpdatesResponse_Builder*) builderWithPrototype:(GetUpdatesResponse*) prototype {
  return [[GetUpdatesResponse builder] mergeFrom:prototype];
}
- (GetUpdatesResponse_Builder*) builder {
  return [GetUpdatesResponse builder];
}
@end

@interface GetUpdatesResponse_Builder()
@property (retain) GetUpdatesResponse* result;
@end

@implementation GetUpdatesResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetUpdatesResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetUpdatesResponse_Builder*) clear {
  self.result = [[[GetUpdatesResponse alloc] init] autorelease];
  return self;
}
- (GetUpdatesResponse_Builder*) clone {
  return [GetUpdatesResponse builderWithPrototype:result];
}
- (GetUpdatesResponse*) defaultInstance {
  return [GetUpdatesResponse defaultInstance];
}
- (GetUpdatesResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetUpdatesResponse*) buildPartial {
  GetUpdatesResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetUpdatesResponse_Builder*) mergeFrom:(GetUpdatesResponse*) other {
  if (other == [GetUpdatesResponse defaultInstance]) {
    return self;
  }
  if (other.mutableEntriesList.count > 0) {
    if (result.mutableEntriesList == nil) {
      result.mutableEntriesList = [NSMutableArray array];
    }
    [result.mutableEntriesList addObjectsFromArray:other.mutableEntriesList];
  }
  if (other.hasNewTimestamp) {
    [self setNewTimestamp:other.newTimestamp];
  }
  if (other.hasDeprecatedNewestTimestamp) {
    [self setDeprecatedNewestTimestamp:other.deprecatedNewestTimestamp];
  }
  if (other.hasChangesRemaining) {
    [self setChangesRemaining:other.changesRemaining];
  }
  if (other.mutableNewProgressMarkerList.count > 0) {
    if (result.mutableNewProgressMarkerList == nil) {
      result.mutableNewProgressMarkerList = [NSMutableArray array];
    }
    [result.mutableNewProgressMarkerList addObjectsFromArray:other.mutableNewProgressMarkerList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetUpdatesResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetUpdatesResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        SyncEntity_Builder* subBuilder = [SyncEntity builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addEntries:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setNewTimestamp:[input readInt64]];
        break;
      }
      case 24: {
        [self setDeprecatedNewestTimestamp:[input readInt64]];
        break;
      }
      case 32: {
        [self setChangesRemaining:[input readInt64]];
        break;
      }
      case 42: {
        DataTypeProgressMarker_Builder* subBuilder = [DataTypeProgressMarker builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNewProgressMarker:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) entriesList {
  if (result.mutableEntriesList == nil) { return [NSArray array]; }
  return result.mutableEntriesList;
}
- (SyncEntity*) entriesAtIndex:(int32_t) index {
  return [result entriesAtIndex:index];
}
- (GetUpdatesResponse_Builder*) replaceEntriesAtIndex:(int32_t) index with:(SyncEntity*) value {
  [result.mutableEntriesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (GetUpdatesResponse_Builder*) addAllEntries:(NSArray*) values {
  if (result.mutableEntriesList == nil) {
    result.mutableEntriesList = [NSMutableArray array];
  }
  [result.mutableEntriesList addObjectsFromArray:values];
  return self;
}
- (GetUpdatesResponse_Builder*) clearEntriesList {
  result.mutableEntriesList = nil;
  return self;
}
- (GetUpdatesResponse_Builder*) addEntries:(SyncEntity*) value {
  if (result.mutableEntriesList == nil) {
    result.mutableEntriesList = [NSMutableArray array];
  }
  [result.mutableEntriesList addObject:value];
  return self;
}
- (BOOL) hasNewTimestamp {
  return result.hasNewTimestamp;
}
- (int64_t) newTimestamp {
  return result.newTimestamp;
}
- (GetUpdatesResponse_Builder*) setNewTimestamp:(int64_t) value {
  result.hasNewTimestamp = YES;
  result.newTimestamp = value;
  return self;
}
- (GetUpdatesResponse_Builder*) clearNewTimestamp {
  result.hasNewTimestamp = NO;
  result.newTimestamp = 0L;
  return self;
}
- (BOOL) hasDeprecatedNewestTimestamp {
  return result.hasDeprecatedNewestTimestamp;
}
- (int64_t) deprecatedNewestTimestamp {
  return result.deprecatedNewestTimestamp;
}
- (GetUpdatesResponse_Builder*) setDeprecatedNewestTimestamp:(int64_t) value {
  result.hasDeprecatedNewestTimestamp = YES;
  result.deprecatedNewestTimestamp = value;
  return self;
}
- (GetUpdatesResponse_Builder*) clearDeprecatedNewestTimestamp {
  result.hasDeprecatedNewestTimestamp = NO;
  result.deprecatedNewestTimestamp = 0L;
  return self;
}
- (BOOL) hasChangesRemaining {
  return result.hasChangesRemaining;
}
- (int64_t) changesRemaining {
  return result.changesRemaining;
}
- (GetUpdatesResponse_Builder*) setChangesRemaining:(int64_t) value {
  result.hasChangesRemaining = YES;
  result.changesRemaining = value;
  return self;
}
- (GetUpdatesResponse_Builder*) clearChangesRemaining {
  result.hasChangesRemaining = NO;
  result.changesRemaining = 0L;
  return self;
}
- (NSArray*) newProgressMarkerList {
  if (result.mutableNewProgressMarkerList == nil) { return [NSArray array]; }
  return result.mutableNewProgressMarkerList;
}
- (DataTypeProgressMarker*) newProgressMarkerAtIndex:(int32_t) index {
  return [result newProgressMarkerAtIndex:index];
}
- (GetUpdatesResponse_Builder*) replaceNewProgressMarkerAtIndex:(int32_t) index with:(DataTypeProgressMarker*) value {
  [result.mutableNewProgressMarkerList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (GetUpdatesResponse_Builder*) addAllNewProgressMarker:(NSArray*) values {
  if (result.mutableNewProgressMarkerList == nil) {
    result.mutableNewProgressMarkerList = [NSMutableArray array];
  }
  [result.mutableNewProgressMarkerList addObjectsFromArray:values];
  return self;
}
- (GetUpdatesResponse_Builder*) clearNewProgressMarkerList {
  result.mutableNewProgressMarkerList = nil;
  return self;
}
- (GetUpdatesResponse_Builder*) addNewProgressMarker:(DataTypeProgressMarker*) value {
  if (result.mutableNewProgressMarkerList == nil) {
    result.mutableNewProgressMarkerList = [NSMutableArray array];
  }
  [result.mutableNewProgressMarkerList addObject:value];
  return self;
}
@end

@interface GetUpdatesMetadataResponse ()
@property int64_t changesRemaining;
@property (retain) NSMutableArray* mutableNewProgressMarkerList;
@end

@implementation GetUpdatesMetadataResponse

- (BOOL) hasChangesRemaining {
  return !!hasChangesRemaining_;
}
- (void) setHasChangesRemaining:(BOOL) value {
  hasChangesRemaining_ = !!value;
}
@synthesize changesRemaining;
@synthesize mutableNewProgressMarkerList;
- (void) dealloc {
  self.mutableNewProgressMarkerList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.changesRemaining = 0L;
  }
  return self;
}
static GetUpdatesMetadataResponse* defaultGetUpdatesMetadataResponseInstance = nil;
+ (void) initialize {
  if (self == [GetUpdatesMetadataResponse class]) {
    defaultGetUpdatesMetadataResponseInstance = [[GetUpdatesMetadataResponse alloc] init];
  }
}
+ (GetUpdatesMetadataResponse*) defaultInstance {
  return defaultGetUpdatesMetadataResponseInstance;
}
- (GetUpdatesMetadataResponse*) defaultInstance {
  return defaultGetUpdatesMetadataResponseInstance;
}
- (NSArray*) newProgressMarkerList {
  return mutableNewProgressMarkerList;
}
- (DataTypeProgressMarker*) newProgressMarkerAtIndex:(int32_t) index {
  id value = [mutableNewProgressMarkerList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasChangesRemaining) {
    [output writeInt64:1 value:self.changesRemaining];
  }
  for (DataTypeProgressMarker* element in self.newProgressMarkerList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasChangesRemaining) {
    size += computeInt64Size(1, self.changesRemaining);
  }
  for (DataTypeProgressMarker* element in self.newProgressMarkerList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetUpdatesMetadataResponse*) parseFromData:(NSData*) data {
  return (GetUpdatesMetadataResponse*)[[[GetUpdatesMetadataResponse builder] mergeFromData:data] build];
}
+ (GetUpdatesMetadataResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUpdatesMetadataResponse*)[[[GetUpdatesMetadataResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetUpdatesMetadataResponse*) parseFromInputStream:(NSInputStream*) input {
  return (GetUpdatesMetadataResponse*)[[[GetUpdatesMetadataResponse builder] mergeFromInputStream:input] build];
}
+ (GetUpdatesMetadataResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUpdatesMetadataResponse*)[[[GetUpdatesMetadataResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUpdatesMetadataResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetUpdatesMetadataResponse*)[[[GetUpdatesMetadataResponse builder] mergeFromCodedInputStream:input] build];
}
+ (GetUpdatesMetadataResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUpdatesMetadataResponse*)[[[GetUpdatesMetadataResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUpdatesMetadataResponse_Builder*) builder {
  return [[[GetUpdatesMetadataResponse_Builder alloc] init] autorelease];
}
+ (GetUpdatesMetadataResponse_Builder*) builderWithPrototype:(GetUpdatesMetadataResponse*) prototype {
  return [[GetUpdatesMetadataResponse builder] mergeFrom:prototype];
}
- (GetUpdatesMetadataResponse_Builder*) builder {
  return [GetUpdatesMetadataResponse builder];
}
@end

@interface GetUpdatesMetadataResponse_Builder()
@property (retain) GetUpdatesMetadataResponse* result;
@end

@implementation GetUpdatesMetadataResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetUpdatesMetadataResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetUpdatesMetadataResponse_Builder*) clear {
  self.result = [[[GetUpdatesMetadataResponse alloc] init] autorelease];
  return self;
}
- (GetUpdatesMetadataResponse_Builder*) clone {
  return [GetUpdatesMetadataResponse builderWithPrototype:result];
}
- (GetUpdatesMetadataResponse*) defaultInstance {
  return [GetUpdatesMetadataResponse defaultInstance];
}
- (GetUpdatesMetadataResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetUpdatesMetadataResponse*) buildPartial {
  GetUpdatesMetadataResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetUpdatesMetadataResponse_Builder*) mergeFrom:(GetUpdatesMetadataResponse*) other {
  if (other == [GetUpdatesMetadataResponse defaultInstance]) {
    return self;
  }
  if (other.hasChangesRemaining) {
    [self setChangesRemaining:other.changesRemaining];
  }
  if (other.mutableNewProgressMarkerList.count > 0) {
    if (result.mutableNewProgressMarkerList == nil) {
      result.mutableNewProgressMarkerList = [NSMutableArray array];
    }
    [result.mutableNewProgressMarkerList addObjectsFromArray:other.mutableNewProgressMarkerList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetUpdatesMetadataResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetUpdatesMetadataResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setChangesRemaining:[input readInt64]];
        break;
      }
      case 18: {
        DataTypeProgressMarker_Builder* subBuilder = [DataTypeProgressMarker builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNewProgressMarker:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasChangesRemaining {
  return result.hasChangesRemaining;
}
- (int64_t) changesRemaining {
  return result.changesRemaining;
}
- (GetUpdatesMetadataResponse_Builder*) setChangesRemaining:(int64_t) value {
  result.hasChangesRemaining = YES;
  result.changesRemaining = value;
  return self;
}
- (GetUpdatesMetadataResponse_Builder*) clearChangesRemaining {
  result.hasChangesRemaining = NO;
  result.changesRemaining = 0L;
  return self;
}
- (NSArray*) newProgressMarkerList {
  if (result.mutableNewProgressMarkerList == nil) { return [NSArray array]; }
  return result.mutableNewProgressMarkerList;
}
- (DataTypeProgressMarker*) newProgressMarkerAtIndex:(int32_t) index {
  return [result newProgressMarkerAtIndex:index];
}
- (GetUpdatesMetadataResponse_Builder*) replaceNewProgressMarkerAtIndex:(int32_t) index with:(DataTypeProgressMarker*) value {
  [result.mutableNewProgressMarkerList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (GetUpdatesMetadataResponse_Builder*) addAllNewProgressMarker:(NSArray*) values {
  if (result.mutableNewProgressMarkerList == nil) {
    result.mutableNewProgressMarkerList = [NSMutableArray array];
  }
  [result.mutableNewProgressMarkerList addObjectsFromArray:values];
  return self;
}
- (GetUpdatesMetadataResponse_Builder*) clearNewProgressMarkerList {
  result.mutableNewProgressMarkerList = nil;
  return self;
}
- (GetUpdatesMetadataResponse_Builder*) addNewProgressMarker:(DataTypeProgressMarker*) value {
  if (result.mutableNewProgressMarkerList == nil) {
    result.mutableNewProgressMarkerList = [NSMutableArray array];
  }
  [result.mutableNewProgressMarkerList addObject:value];
  return self;
}
@end

@interface GetUpdatesStreamingResponse ()
@property (retain) NSMutableArray* mutableEntriesList;
@end

@implementation GetUpdatesStreamingResponse

@synthesize mutableEntriesList;
- (void) dealloc {
  self.mutableEntriesList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static GetUpdatesStreamingResponse* defaultGetUpdatesStreamingResponseInstance = nil;
+ (void) initialize {
  if (self == [GetUpdatesStreamingResponse class]) {
    defaultGetUpdatesStreamingResponseInstance = [[GetUpdatesStreamingResponse alloc] init];
  }
}
+ (GetUpdatesStreamingResponse*) defaultInstance {
  return defaultGetUpdatesStreamingResponseInstance;
}
- (GetUpdatesStreamingResponse*) defaultInstance {
  return defaultGetUpdatesStreamingResponseInstance;
}
- (NSArray*) entriesList {
  return mutableEntriesList;
}
- (SyncEntity*) entriesAtIndex:(int32_t) index {
  id value = [mutableEntriesList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (SyncEntity* element in self.entriesList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (SyncEntity* element in self.entriesList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (SyncEntity* element in self.entriesList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetUpdatesStreamingResponse*) parseFromData:(NSData*) data {
  return (GetUpdatesStreamingResponse*)[[[GetUpdatesStreamingResponse builder] mergeFromData:data] build];
}
+ (GetUpdatesStreamingResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUpdatesStreamingResponse*)[[[GetUpdatesStreamingResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetUpdatesStreamingResponse*) parseFromInputStream:(NSInputStream*) input {
  return (GetUpdatesStreamingResponse*)[[[GetUpdatesStreamingResponse builder] mergeFromInputStream:input] build];
}
+ (GetUpdatesStreamingResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUpdatesStreamingResponse*)[[[GetUpdatesStreamingResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUpdatesStreamingResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetUpdatesStreamingResponse*)[[[GetUpdatesStreamingResponse builder] mergeFromCodedInputStream:input] build];
}
+ (GetUpdatesStreamingResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetUpdatesStreamingResponse*)[[[GetUpdatesStreamingResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetUpdatesStreamingResponse_Builder*) builder {
  return [[[GetUpdatesStreamingResponse_Builder alloc] init] autorelease];
}
+ (GetUpdatesStreamingResponse_Builder*) builderWithPrototype:(GetUpdatesStreamingResponse*) prototype {
  return [[GetUpdatesStreamingResponse builder] mergeFrom:prototype];
}
- (GetUpdatesStreamingResponse_Builder*) builder {
  return [GetUpdatesStreamingResponse builder];
}
@end

@interface GetUpdatesStreamingResponse_Builder()
@property (retain) GetUpdatesStreamingResponse* result;
@end

@implementation GetUpdatesStreamingResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetUpdatesStreamingResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetUpdatesStreamingResponse_Builder*) clear {
  self.result = [[[GetUpdatesStreamingResponse alloc] init] autorelease];
  return self;
}
- (GetUpdatesStreamingResponse_Builder*) clone {
  return [GetUpdatesStreamingResponse builderWithPrototype:result];
}
- (GetUpdatesStreamingResponse*) defaultInstance {
  return [GetUpdatesStreamingResponse defaultInstance];
}
- (GetUpdatesStreamingResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetUpdatesStreamingResponse*) buildPartial {
  GetUpdatesStreamingResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetUpdatesStreamingResponse_Builder*) mergeFrom:(GetUpdatesStreamingResponse*) other {
  if (other == [GetUpdatesStreamingResponse defaultInstance]) {
    return self;
  }
  if (other.mutableEntriesList.count > 0) {
    if (result.mutableEntriesList == nil) {
      result.mutableEntriesList = [NSMutableArray array];
    }
    [result.mutableEntriesList addObjectsFromArray:other.mutableEntriesList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetUpdatesStreamingResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetUpdatesStreamingResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        SyncEntity_Builder* subBuilder = [SyncEntity builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addEntries:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) entriesList {
  if (result.mutableEntriesList == nil) { return [NSArray array]; }
  return result.mutableEntriesList;
}
- (SyncEntity*) entriesAtIndex:(int32_t) index {
  return [result entriesAtIndex:index];
}
- (GetUpdatesStreamingResponse_Builder*) replaceEntriesAtIndex:(int32_t) index with:(SyncEntity*) value {
  [result.mutableEntriesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (GetUpdatesStreamingResponse_Builder*) addAllEntries:(NSArray*) values {
  if (result.mutableEntriesList == nil) {
    result.mutableEntriesList = [NSMutableArray array];
  }
  [result.mutableEntriesList addObjectsFromArray:values];
  return self;
}
- (GetUpdatesStreamingResponse_Builder*) clearEntriesList {
  result.mutableEntriesList = nil;
  return self;
}
- (GetUpdatesStreamingResponse_Builder*) addEntries:(SyncEntity*) value {
  if (result.mutableEntriesList == nil) {
    result.mutableEntriesList = [NSMutableArray array];
  }
  [result.mutableEntriesList addObject:value];
  return self;
}
@end

@interface UserIdentification ()
@property (retain) NSString* email;
@property (retain) NSString* displayName;
@property (retain) NSString* obfuscatedId;
@end

@implementation UserIdentification

- (BOOL) hasEmail {
  return !!hasEmail_;
}
- (void) setHasEmail:(BOOL) value {
  hasEmail_ = !!value;
}
@synthesize email;
- (BOOL) hasDisplayName {
  return !!hasDisplayName_;
}
- (void) setHasDisplayName:(BOOL) value {
  hasDisplayName_ = !!value;
}
@synthesize displayName;
- (BOOL) hasObfuscatedId {
  return !!hasObfuscatedId_;
}
- (void) setHasObfuscatedId:(BOOL) value {
  hasObfuscatedId_ = !!value;
}
@synthesize obfuscatedId;
- (void) dealloc {
  self.email = nil;
  self.displayName = nil;
  self.obfuscatedId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.email = @"";
    self.displayName = @"";
    self.obfuscatedId = @"";
  }
  return self;
}
static UserIdentification* defaultUserIdentificationInstance = nil;
+ (void) initialize {
  if (self == [UserIdentification class]) {
    defaultUserIdentificationInstance = [[UserIdentification alloc] init];
  }
}
+ (UserIdentification*) defaultInstance {
  return defaultUserIdentificationInstance;
}
- (UserIdentification*) defaultInstance {
  return defaultUserIdentificationInstance;
}
- (BOOL) isInitialized {
  if (!self.hasEmail) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasEmail) {
    [output writeString:1 value:self.email];
  }
  if (self.hasDisplayName) {
    [output writeString:2 value:self.displayName];
  }
  if (self.hasObfuscatedId) {
    [output writeString:3 value:self.obfuscatedId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasEmail) {
    size += computeStringSize(1, self.email);
  }
  if (self.hasDisplayName) {
    size += computeStringSize(2, self.displayName);
  }
  if (self.hasObfuscatedId) {
    size += computeStringSize(3, self.obfuscatedId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserIdentification*) parseFromData:(NSData*) data {
  return (UserIdentification*)[[[UserIdentification builder] mergeFromData:data] build];
}
+ (UserIdentification*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserIdentification*)[[[UserIdentification builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserIdentification*) parseFromInputStream:(NSInputStream*) input {
  return (UserIdentification*)[[[UserIdentification builder] mergeFromInputStream:input] build];
}
+ (UserIdentification*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserIdentification*)[[[UserIdentification builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserIdentification*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserIdentification*)[[[UserIdentification builder] mergeFromCodedInputStream:input] build];
}
+ (UserIdentification*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserIdentification*)[[[UserIdentification builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserIdentification_Builder*) builder {
  return [[[UserIdentification_Builder alloc] init] autorelease];
}
+ (UserIdentification_Builder*) builderWithPrototype:(UserIdentification*) prototype {
  return [[UserIdentification builder] mergeFrom:prototype];
}
- (UserIdentification_Builder*) builder {
  return [UserIdentification builder];
}
@end

@interface UserIdentification_Builder()
@property (retain) UserIdentification* result;
@end

@implementation UserIdentification_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserIdentification alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserIdentification_Builder*) clear {
  self.result = [[[UserIdentification alloc] init] autorelease];
  return self;
}
- (UserIdentification_Builder*) clone {
  return [UserIdentification builderWithPrototype:result];
}
- (UserIdentification*) defaultInstance {
  return [UserIdentification defaultInstance];
}
- (UserIdentification*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserIdentification*) buildPartial {
  UserIdentification* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserIdentification_Builder*) mergeFrom:(UserIdentification*) other {
  if (other == [UserIdentification defaultInstance]) {
    return self;
  }
  if (other.hasEmail) {
    [self setEmail:other.email];
  }
  if (other.hasDisplayName) {
    [self setDisplayName:other.displayName];
  }
  if (other.hasObfuscatedId) {
    [self setObfuscatedId:other.obfuscatedId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserIdentification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserIdentification_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setEmail:[input readString]];
        break;
      }
      case 18: {
        [self setDisplayName:[input readString]];
        break;
      }
      case 26: {
        [self setObfuscatedId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasEmail {
  return result.hasEmail;
}
- (NSString*) email {
  return result.email;
}
- (UserIdentification_Builder*) setEmail:(NSString*) value {
  result.hasEmail = YES;
  result.email = value;
  return self;
}
- (UserIdentification_Builder*) clearEmail {
  result.hasEmail = NO;
  result.email = @"";
  return self;
}
- (BOOL) hasDisplayName {
  return result.hasDisplayName;
}
- (NSString*) displayName {
  return result.displayName;
}
- (UserIdentification_Builder*) setDisplayName:(NSString*) value {
  result.hasDisplayName = YES;
  result.displayName = value;
  return self;
}
- (UserIdentification_Builder*) clearDisplayName {
  result.hasDisplayName = NO;
  result.displayName = @"";
  return self;
}
- (BOOL) hasObfuscatedId {
  return result.hasObfuscatedId;
}
- (NSString*) obfuscatedId {
  return result.obfuscatedId;
}
- (UserIdentification_Builder*) setObfuscatedId:(NSString*) value {
  result.hasObfuscatedId = YES;
  result.obfuscatedId = value;
  return self;
}
- (UserIdentification_Builder*) clearObfuscatedId {
  result.hasObfuscatedId = NO;
  result.obfuscatedId = @"";
  return self;
}
@end

@interface AuthenticateResponse ()
@property (retain) UserIdentification* user;
@end

@implementation AuthenticateResponse

- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value {
  hasUser_ = !!value;
}
@synthesize user;
- (void) dealloc {
  self.user = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.user = [UserIdentification defaultInstance];
  }
  return self;
}
static AuthenticateResponse* defaultAuthenticateResponseInstance = nil;
+ (void) initialize {
  if (self == [AuthenticateResponse class]) {
    defaultAuthenticateResponseInstance = [[AuthenticateResponse alloc] init];
  }
}
+ (AuthenticateResponse*) defaultInstance {
  return defaultAuthenticateResponseInstance;
}
- (AuthenticateResponse*) defaultInstance {
  return defaultAuthenticateResponseInstance;
}
- (BOOL) isInitialized {
  if (self.hasUser) {
    if (!self.user.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUser) {
    [output writeMessage:1 value:self.user];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUser) {
    size += computeMessageSize(1, self.user);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AuthenticateResponse*) parseFromData:(NSData*) data {
  return (AuthenticateResponse*)[[[AuthenticateResponse builder] mergeFromData:data] build];
}
+ (AuthenticateResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthenticateResponse*)[[[AuthenticateResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AuthenticateResponse*) parseFromInputStream:(NSInputStream*) input {
  return (AuthenticateResponse*)[[[AuthenticateResponse builder] mergeFromInputStream:input] build];
}
+ (AuthenticateResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthenticateResponse*)[[[AuthenticateResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthenticateResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AuthenticateResponse*)[[[AuthenticateResponse builder] mergeFromCodedInputStream:input] build];
}
+ (AuthenticateResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthenticateResponse*)[[[AuthenticateResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthenticateResponse_Builder*) builder {
  return [[[AuthenticateResponse_Builder alloc] init] autorelease];
}
+ (AuthenticateResponse_Builder*) builderWithPrototype:(AuthenticateResponse*) prototype {
  return [[AuthenticateResponse builder] mergeFrom:prototype];
}
- (AuthenticateResponse_Builder*) builder {
  return [AuthenticateResponse builder];
}
@end

@interface AuthenticateResponse_Builder()
@property (retain) AuthenticateResponse* result;
@end

@implementation AuthenticateResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AuthenticateResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AuthenticateResponse_Builder*) clear {
  self.result = [[[AuthenticateResponse alloc] init] autorelease];
  return self;
}
- (AuthenticateResponse_Builder*) clone {
  return [AuthenticateResponse builderWithPrototype:result];
}
- (AuthenticateResponse*) defaultInstance {
  return [AuthenticateResponse defaultInstance];
}
- (AuthenticateResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AuthenticateResponse*) buildPartial {
  AuthenticateResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AuthenticateResponse_Builder*) mergeFrom:(AuthenticateResponse*) other {
  if (other == [AuthenticateResponse defaultInstance]) {
    return self;
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AuthenticateResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AuthenticateResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        UserIdentification_Builder* subBuilder = [UserIdentification builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (UserIdentification*) user {
  return result.user;
}
- (AuthenticateResponse_Builder*) setUser:(UserIdentification*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (AuthenticateResponse_Builder*) setUserBuilder:(UserIdentification_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (AuthenticateResponse_Builder*) mergeUser:(UserIdentification*) value {
  if (result.hasUser &&
      result.user != [UserIdentification defaultInstance]) {
    result.user =
      [[[UserIdentification builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (AuthenticateResponse_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [UserIdentification defaultInstance];
  return self;
}
@end

@interface ThrottleParameters ()
@property int32_t minMeasurePayloadSize;
@property Float64 targetUtilization;
@property Float64 measureIntervalMax;
@property Float64 measureIntervalMin;
@property Float64 observationWindow;
@end

@implementation ThrottleParameters

- (BOOL) hasMinMeasurePayloadSize {
  return !!hasMinMeasurePayloadSize_;
}
- (void) setHasMinMeasurePayloadSize:(BOOL) value {
  hasMinMeasurePayloadSize_ = !!value;
}
@synthesize minMeasurePayloadSize;
- (BOOL) hasTargetUtilization {
  return !!hasTargetUtilization_;
}
- (void) setHasTargetUtilization:(BOOL) value {
  hasTargetUtilization_ = !!value;
}
@synthesize targetUtilization;
- (BOOL) hasMeasureIntervalMax {
  return !!hasMeasureIntervalMax_;
}
- (void) setHasMeasureIntervalMax:(BOOL) value {
  hasMeasureIntervalMax_ = !!value;
}
@synthesize measureIntervalMax;
- (BOOL) hasMeasureIntervalMin {
  return !!hasMeasureIntervalMin_;
}
- (void) setHasMeasureIntervalMin:(BOOL) value {
  hasMeasureIntervalMin_ = !!value;
}
@synthesize measureIntervalMin;
- (BOOL) hasObservationWindow {
  return !!hasObservationWindow_;
}
- (void) setHasObservationWindow:(BOOL) value {
  hasObservationWindow_ = !!value;
}
@synthesize observationWindow;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.minMeasurePayloadSize = 0;
    self.targetUtilization = 0;
    self.measureIntervalMax = 0;
    self.measureIntervalMin = 0;
    self.observationWindow = 0;
  }
  return self;
}
static ThrottleParameters* defaultThrottleParametersInstance = nil;
+ (void) initialize {
  if (self == [ThrottleParameters class]) {
    defaultThrottleParametersInstance = [[ThrottleParameters alloc] init];
  }
}
+ (ThrottleParameters*) defaultInstance {
  return defaultThrottleParametersInstance;
}
- (ThrottleParameters*) defaultInstance {
  return defaultThrottleParametersInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMinMeasurePayloadSize) {
    return NO;
  }
  if (!self.hasTargetUtilization) {
    return NO;
  }
  if (!self.hasMeasureIntervalMax) {
    return NO;
  }
  if (!self.hasMeasureIntervalMin) {
    return NO;
  }
  if (!self.hasObservationWindow) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMinMeasurePayloadSize) {
    [output writeInt32:1 value:self.minMeasurePayloadSize];
  }
  if (self.hasTargetUtilization) {
    [output writeDouble:2 value:self.targetUtilization];
  }
  if (self.hasMeasureIntervalMax) {
    [output writeDouble:3 value:self.measureIntervalMax];
  }
  if (self.hasMeasureIntervalMin) {
    [output writeDouble:4 value:self.measureIntervalMin];
  }
  if (self.hasObservationWindow) {
    [output writeDouble:5 value:self.observationWindow];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMinMeasurePayloadSize) {
    size += computeInt32Size(1, self.minMeasurePayloadSize);
  }
  if (self.hasTargetUtilization) {
    size += computeDoubleSize(2, self.targetUtilization);
  }
  if (self.hasMeasureIntervalMax) {
    size += computeDoubleSize(3, self.measureIntervalMax);
  }
  if (self.hasMeasureIntervalMin) {
    size += computeDoubleSize(4, self.measureIntervalMin);
  }
  if (self.hasObservationWindow) {
    size += computeDoubleSize(5, self.observationWindow);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ThrottleParameters*) parseFromData:(NSData*) data {
  return (ThrottleParameters*)[[[ThrottleParameters builder] mergeFromData:data] build];
}
+ (ThrottleParameters*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ThrottleParameters*)[[[ThrottleParameters builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ThrottleParameters*) parseFromInputStream:(NSInputStream*) input {
  return (ThrottleParameters*)[[[ThrottleParameters builder] mergeFromInputStream:input] build];
}
+ (ThrottleParameters*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ThrottleParameters*)[[[ThrottleParameters builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ThrottleParameters*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ThrottleParameters*)[[[ThrottleParameters builder] mergeFromCodedInputStream:input] build];
}
+ (ThrottleParameters*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ThrottleParameters*)[[[ThrottleParameters builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ThrottleParameters_Builder*) builder {
  return [[[ThrottleParameters_Builder alloc] init] autorelease];
}
+ (ThrottleParameters_Builder*) builderWithPrototype:(ThrottleParameters*) prototype {
  return [[ThrottleParameters builder] mergeFrom:prototype];
}
- (ThrottleParameters_Builder*) builder {
  return [ThrottleParameters builder];
}
@end

@interface ThrottleParameters_Builder()
@property (retain) ThrottleParameters* result;
@end

@implementation ThrottleParameters_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ThrottleParameters alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ThrottleParameters_Builder*) clear {
  self.result = [[[ThrottleParameters alloc] init] autorelease];
  return self;
}
- (ThrottleParameters_Builder*) clone {
  return [ThrottleParameters builderWithPrototype:result];
}
- (ThrottleParameters*) defaultInstance {
  return [ThrottleParameters defaultInstance];
}
- (ThrottleParameters*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ThrottleParameters*) buildPartial {
  ThrottleParameters* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ThrottleParameters_Builder*) mergeFrom:(ThrottleParameters*) other {
  if (other == [ThrottleParameters defaultInstance]) {
    return self;
  }
  if (other.hasMinMeasurePayloadSize) {
    [self setMinMeasurePayloadSize:other.minMeasurePayloadSize];
  }
  if (other.hasTargetUtilization) {
    [self setTargetUtilization:other.targetUtilization];
  }
  if (other.hasMeasureIntervalMax) {
    [self setMeasureIntervalMax:other.measureIntervalMax];
  }
  if (other.hasMeasureIntervalMin) {
    [self setMeasureIntervalMin:other.measureIntervalMin];
  }
  if (other.hasObservationWindow) {
    [self setObservationWindow:other.observationWindow];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ThrottleParameters_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ThrottleParameters_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMinMeasurePayloadSize:[input readInt32]];
        break;
      }
      case 17: {
        [self setTargetUtilization:[input readDouble]];
        break;
      }
      case 25: {
        [self setMeasureIntervalMax:[input readDouble]];
        break;
      }
      case 33: {
        [self setMeasureIntervalMin:[input readDouble]];
        break;
      }
      case 41: {
        [self setObservationWindow:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasMinMeasurePayloadSize {
  return result.hasMinMeasurePayloadSize;
}
- (int32_t) minMeasurePayloadSize {
  return result.minMeasurePayloadSize;
}
- (ThrottleParameters_Builder*) setMinMeasurePayloadSize:(int32_t) value {
  result.hasMinMeasurePayloadSize = YES;
  result.minMeasurePayloadSize = value;
  return self;
}
- (ThrottleParameters_Builder*) clearMinMeasurePayloadSize {
  result.hasMinMeasurePayloadSize = NO;
  result.minMeasurePayloadSize = 0;
  return self;
}
- (BOOL) hasTargetUtilization {
  return result.hasTargetUtilization;
}
- (Float64) targetUtilization {
  return result.targetUtilization;
}
- (ThrottleParameters_Builder*) setTargetUtilization:(Float64) value {
  result.hasTargetUtilization = YES;
  result.targetUtilization = value;
  return self;
}
- (ThrottleParameters_Builder*) clearTargetUtilization {
  result.hasTargetUtilization = NO;
  result.targetUtilization = 0;
  return self;
}
- (BOOL) hasMeasureIntervalMax {
  return result.hasMeasureIntervalMax;
}
- (Float64) measureIntervalMax {
  return result.measureIntervalMax;
}
- (ThrottleParameters_Builder*) setMeasureIntervalMax:(Float64) value {
  result.hasMeasureIntervalMax = YES;
  result.measureIntervalMax = value;
  return self;
}
- (ThrottleParameters_Builder*) clearMeasureIntervalMax {
  result.hasMeasureIntervalMax = NO;
  result.measureIntervalMax = 0;
  return self;
}
- (BOOL) hasMeasureIntervalMin {
  return result.hasMeasureIntervalMin;
}
- (Float64) measureIntervalMin {
  return result.measureIntervalMin;
}
- (ThrottleParameters_Builder*) setMeasureIntervalMin:(Float64) value {
  result.hasMeasureIntervalMin = YES;
  result.measureIntervalMin = value;
  return self;
}
- (ThrottleParameters_Builder*) clearMeasureIntervalMin {
  result.hasMeasureIntervalMin = NO;
  result.measureIntervalMin = 0;
  return self;
}
- (BOOL) hasObservationWindow {
  return result.hasObservationWindow;
}
- (Float64) observationWindow {
  return result.observationWindow;
}
- (ThrottleParameters_Builder*) setObservationWindow:(Float64) value {
  result.hasObservationWindow = YES;
  result.observationWindow = value;
  return self;
}
- (ThrottleParameters_Builder*) clearObservationWindow {
  result.hasObservationWindow = NO;
  result.observationWindow = 0;
  return self;
}
@end

@interface ClientToServerResponse ()
@property (retain) CommitResponse* commit;
@property (retain) GetUpdatesResponse* getUpdates;
@property (retain) AuthenticateResponse* authenticate;
@property (retain) ClearUserDataResponse* clearUserData;
@property (retain) GetUpdatesMetadataResponse* streamMetadata;
@property (retain) GetUpdatesStreamingResponse* streamData;
@property (retain) ClientToServerResponse_Error* error;
@property SyncEnums_ErrorType errorCode;
@property (retain) NSString* errorMessage;
@property (retain) NSString* storeBirthday;
@property (retain) ClientCommand* clientCommand;
@property (retain) ProfilingData* profilingData;
@property (retain) NSMutableArray* mutableMigratedDataTypeIdList;
@end

@implementation ClientToServerResponse

- (BOOL) hasCommit {
  return !!hasCommit_;
}
- (void) setHasCommit:(BOOL) value {
  hasCommit_ = !!value;
}
@synthesize commit;
- (BOOL) hasGetUpdates {
  return !!hasGetUpdates_;
}
- (void) setHasGetUpdates:(BOOL) value {
  hasGetUpdates_ = !!value;
}
@synthesize getUpdates;
- (BOOL) hasAuthenticate {
  return !!hasAuthenticate_;
}
- (void) setHasAuthenticate:(BOOL) value {
  hasAuthenticate_ = !!value;
}
@synthesize authenticate;
- (BOOL) hasClearUserData {
  return !!hasClearUserData_;
}
- (void) setHasClearUserData:(BOOL) value {
  hasClearUserData_ = !!value;
}
@synthesize clearUserData;
- (BOOL) hasStreamMetadata {
  return !!hasStreamMetadata_;
}
- (void) setHasStreamMetadata:(BOOL) value {
  hasStreamMetadata_ = !!value;
}
@synthesize streamMetadata;
- (BOOL) hasStreamData {
  return !!hasStreamData_;
}
- (void) setHasStreamData:(BOOL) value {
  hasStreamData_ = !!value;
}
@synthesize streamData;
- (BOOL) hasError {
  return !!hasError_;
}
- (void) setHasError:(BOOL) value {
  hasError_ = !!value;
}
@synthesize error;
- (BOOL) hasErrorCode {
  return !!hasErrorCode_;
}
- (void) setHasErrorCode:(BOOL) value {
  hasErrorCode_ = !!value;
}
@synthesize errorCode;
- (BOOL) hasErrorMessage {
  return !!hasErrorMessage_;
}
- (void) setHasErrorMessage:(BOOL) value {
  hasErrorMessage_ = !!value;
}
@synthesize errorMessage;
- (BOOL) hasStoreBirthday {
  return !!hasStoreBirthday_;
}
- (void) setHasStoreBirthday:(BOOL) value {
  hasStoreBirthday_ = !!value;
}
@synthesize storeBirthday;
- (BOOL) hasClientCommand {
  return !!hasClientCommand_;
}
- (void) setHasClientCommand:(BOOL) value {
  hasClientCommand_ = !!value;
}
@synthesize clientCommand;
- (BOOL) hasProfilingData {
  return !!hasProfilingData_;
}
- (void) setHasProfilingData:(BOOL) value {
  hasProfilingData_ = !!value;
}
@synthesize profilingData;
@synthesize mutableMigratedDataTypeIdList;
- (void) dealloc {
  self.commit = nil;
  self.getUpdates = nil;
  self.authenticate = nil;
  self.clearUserData = nil;
  self.streamMetadata = nil;
  self.streamData = nil;
  self.error = nil;
  self.errorMessage = nil;
  self.storeBirthday = nil;
  self.clientCommand = nil;
  self.profilingData = nil;
  self.mutableMigratedDataTypeIdList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.commit = [CommitResponse defaultInstance];
    self.getUpdates = [GetUpdatesResponse defaultInstance];
    self.authenticate = [AuthenticateResponse defaultInstance];
    self.clearUserData = [ClearUserDataResponse defaultInstance];
    self.streamMetadata = [GetUpdatesMetadataResponse defaultInstance];
    self.streamData = [GetUpdatesStreamingResponse defaultInstance];
    self.error = [ClientToServerResponse_Error defaultInstance];
    self.errorCode = SyncEnums_ErrorTypeUnknown;
    self.errorMessage = @"";
    self.storeBirthday = @"";
    self.clientCommand = [ClientCommand defaultInstance];
    self.profilingData = [ProfilingData defaultInstance];
  }
  return self;
}
static ClientToServerResponse* defaultClientToServerResponseInstance = nil;
+ (void) initialize {
  if (self == [ClientToServerResponse class]) {
    defaultClientToServerResponseInstance = [[ClientToServerResponse alloc] init];
  }
}
+ (ClientToServerResponse*) defaultInstance {
  return defaultClientToServerResponseInstance;
}
- (ClientToServerResponse*) defaultInstance {
  return defaultClientToServerResponseInstance;
}
- (NSArray*) migratedDataTypeIdList {
  return mutableMigratedDataTypeIdList;
}
- (int32_t) migratedDataTypeIdAtIndex:(int32_t) index {
  id value = [mutableMigratedDataTypeIdList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  if (self.hasCommit) {
    if (!self.commit.isInitialized) {
      return NO;
    }
  }
  if (self.hasGetUpdates) {
    if (!self.getUpdates.isInitialized) {
      return NO;
    }
  }
  if (self.hasAuthenticate) {
    if (!self.authenticate.isInitialized) {
      return NO;
    }
  }
  if (self.hasStreamData) {
    if (!self.streamData.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCommit) {
    [output writeMessage:1 value:self.commit];
  }
  if (self.hasGetUpdates) {
    [output writeMessage:2 value:self.getUpdates];
  }
  if (self.hasAuthenticate) {
    [output writeMessage:3 value:self.authenticate];
  }
  if (self.hasErrorCode) {
    [output writeEnum:4 value:self.errorCode];
  }
  if (self.hasErrorMessage) {
    [output writeString:5 value:self.errorMessage];
  }
  if (self.hasStoreBirthday) {
    [output writeString:6 value:self.storeBirthday];
  }
  if (self.hasClientCommand) {
    [output writeMessage:7 value:self.clientCommand];
  }
  if (self.hasProfilingData) {
    [output writeMessage:8 value:self.profilingData];
  }
  if (self.hasClearUserData) {
    [output writeMessage:9 value:self.clearUserData];
  }
  if (self.hasStreamMetadata) {
    [output writeMessage:10 value:self.streamMetadata];
  }
  if (self.hasStreamData) {
    [output writeMessage:11 value:self.streamData];
  }
  for (NSNumber* value in self.mutableMigratedDataTypeIdList) {
    [output writeInt32:12 value:[value intValue]];
  }
  if (self.hasError) {
    [output writeMessage:13 value:self.error];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCommit) {
    size += computeMessageSize(1, self.commit);
  }
  if (self.hasGetUpdates) {
    size += computeMessageSize(2, self.getUpdates);
  }
  if (self.hasAuthenticate) {
    size += computeMessageSize(3, self.authenticate);
  }
  if (self.hasErrorCode) {
    size += computeEnumSize(4, self.errorCode);
  }
  if (self.hasErrorMessage) {
    size += computeStringSize(5, self.errorMessage);
  }
  if (self.hasStoreBirthday) {
    size += computeStringSize(6, self.storeBirthday);
  }
  if (self.hasClientCommand) {
    size += computeMessageSize(7, self.clientCommand);
  }
  if (self.hasProfilingData) {
    size += computeMessageSize(8, self.profilingData);
  }
  if (self.hasClearUserData) {
    size += computeMessageSize(9, self.clearUserData);
  }
  if (self.hasStreamMetadata) {
    size += computeMessageSize(10, self.streamMetadata);
  }
  if (self.hasStreamData) {
    size += computeMessageSize(11, self.streamData);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableMigratedDataTypeIdList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableMigratedDataTypeIdList.count;
  }
  if (self.hasError) {
    size += computeMessageSize(13, self.error);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ClientToServerResponse*) parseFromData:(NSData*) data {
  return (ClientToServerResponse*)[[[ClientToServerResponse builder] mergeFromData:data] build];
}
+ (ClientToServerResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientToServerResponse*)[[[ClientToServerResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClientToServerResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ClientToServerResponse*)[[[ClientToServerResponse builder] mergeFromInputStream:input] build];
}
+ (ClientToServerResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientToServerResponse*)[[[ClientToServerResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientToServerResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClientToServerResponse*)[[[ClientToServerResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ClientToServerResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientToServerResponse*)[[[ClientToServerResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientToServerResponse_Builder*) builder {
  return [[[ClientToServerResponse_Builder alloc] init] autorelease];
}
+ (ClientToServerResponse_Builder*) builderWithPrototype:(ClientToServerResponse*) prototype {
  return [[ClientToServerResponse builder] mergeFrom:prototype];
}
- (ClientToServerResponse_Builder*) builder {
  return [ClientToServerResponse builder];
}
@end

@interface ClientToServerResponse_Error ()
@property SyncEnums_ErrorType errorType;
@property (retain) NSString* errorDescription;
@property (retain) NSString* url;
@property SyncEnums_Action action;
@property (retain) NSMutableArray* mutableErrorDataTypeIdsList;
@end

@implementation ClientToServerResponse_Error

- (BOOL) hasErrorType {
  return !!hasErrorType_;
}
- (void) setHasErrorType:(BOOL) value {
  hasErrorType_ = !!value;
}
@synthesize errorType;
- (BOOL) hasErrorDescription {
  return !!hasErrorDescription_;
}
- (void) setHasErrorDescription:(BOOL) value {
  hasErrorDescription_ = !!value;
}
@synthesize errorDescription;
- (BOOL) hasUrl {
  return !!hasUrl_;
}
- (void) setHasUrl:(BOOL) value {
  hasUrl_ = !!value;
}
@synthesize url;
- (BOOL) hasAction {
  return !!hasAction_;
}
- (void) setHasAction:(BOOL) value {
  hasAction_ = !!value;
}
@synthesize action;
@synthesize mutableErrorDataTypeIdsList;
- (void) dealloc {
  self.errorDescription = nil;
  self.url = nil;
  self.mutableErrorDataTypeIdsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.errorType = SyncEnums_ErrorTypeUnknown;
    self.errorDescription = @"";
    self.url = @"";
    self.action = SyncEnums_ActionUnknownAction;
  }
  return self;
}
static ClientToServerResponse_Error* defaultClientToServerResponse_ErrorInstance = nil;
+ (void) initialize {
  if (self == [ClientToServerResponse_Error class]) {
    defaultClientToServerResponse_ErrorInstance = [[ClientToServerResponse_Error alloc] init];
  }
}
+ (ClientToServerResponse_Error*) defaultInstance {
  return defaultClientToServerResponse_ErrorInstance;
}
- (ClientToServerResponse_Error*) defaultInstance {
  return defaultClientToServerResponse_ErrorInstance;
}
- (NSArray*) errorDataTypeIdsList {
  return mutableErrorDataTypeIdsList;
}
- (int32_t) errorDataTypeIdsAtIndex:(int32_t) index {
  id value = [mutableErrorDataTypeIdsList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasErrorType) {
    [output writeEnum:1 value:self.errorType];
  }
  if (self.hasErrorDescription) {
    [output writeString:2 value:self.errorDescription];
  }
  if (self.hasUrl) {
    [output writeString:3 value:self.url];
  }
  if (self.hasAction) {
    [output writeEnum:4 value:self.action];
  }
  for (NSNumber* value in self.mutableErrorDataTypeIdsList) {
    [output writeInt32:5 value:[value intValue]];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasErrorType) {
    size += computeEnumSize(1, self.errorType);
  }
  if (self.hasErrorDescription) {
    size += computeStringSize(2, self.errorDescription);
  }
  if (self.hasUrl) {
    size += computeStringSize(3, self.url);
  }
  if (self.hasAction) {
    size += computeEnumSize(4, self.action);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableErrorDataTypeIdsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableErrorDataTypeIdsList.count;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ClientToServerResponse_Error*) parseFromData:(NSData*) data {
  return (ClientToServerResponse_Error*)[[[ClientToServerResponse_Error builder] mergeFromData:data] build];
}
+ (ClientToServerResponse_Error*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientToServerResponse_Error*)[[[ClientToServerResponse_Error builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClientToServerResponse_Error*) parseFromInputStream:(NSInputStream*) input {
  return (ClientToServerResponse_Error*)[[[ClientToServerResponse_Error builder] mergeFromInputStream:input] build];
}
+ (ClientToServerResponse_Error*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientToServerResponse_Error*)[[[ClientToServerResponse_Error builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientToServerResponse_Error*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClientToServerResponse_Error*)[[[ClientToServerResponse_Error builder] mergeFromCodedInputStream:input] build];
}
+ (ClientToServerResponse_Error*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientToServerResponse_Error*)[[[ClientToServerResponse_Error builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientToServerResponse_Error_Builder*) builder {
  return [[[ClientToServerResponse_Error_Builder alloc] init] autorelease];
}
+ (ClientToServerResponse_Error_Builder*) builderWithPrototype:(ClientToServerResponse_Error*) prototype {
  return [[ClientToServerResponse_Error builder] mergeFrom:prototype];
}
- (ClientToServerResponse_Error_Builder*) builder {
  return [ClientToServerResponse_Error builder];
}
@end

@interface ClientToServerResponse_Error_Builder()
@property (retain) ClientToServerResponse_Error* result;
@end

@implementation ClientToServerResponse_Error_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ClientToServerResponse_Error alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClientToServerResponse_Error_Builder*) clear {
  self.result = [[[ClientToServerResponse_Error alloc] init] autorelease];
  return self;
}
- (ClientToServerResponse_Error_Builder*) clone {
  return [ClientToServerResponse_Error builderWithPrototype:result];
}
- (ClientToServerResponse_Error*) defaultInstance {
  return [ClientToServerResponse_Error defaultInstance];
}
- (ClientToServerResponse_Error*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClientToServerResponse_Error*) buildPartial {
  ClientToServerResponse_Error* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ClientToServerResponse_Error_Builder*) mergeFrom:(ClientToServerResponse_Error*) other {
  if (other == [ClientToServerResponse_Error defaultInstance]) {
    return self;
  }
  if (other.hasErrorType) {
    [self setErrorType:other.errorType];
  }
  if (other.hasErrorDescription) {
    [self setErrorDescription:other.errorDescription];
  }
  if (other.hasUrl) {
    [self setUrl:other.url];
  }
  if (other.hasAction) {
    [self setAction:other.action];
  }
  if (other.mutableErrorDataTypeIdsList.count > 0) {
    if (result.mutableErrorDataTypeIdsList == nil) {
      result.mutableErrorDataTypeIdsList = [NSMutableArray array];
    }
    [result.mutableErrorDataTypeIdsList addObjectsFromArray:other.mutableErrorDataTypeIdsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClientToServerResponse_Error_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClientToServerResponse_Error_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (SyncEnums_ErrorTypeIsValidValue(value)) {
          [self setErrorType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setErrorDescription:[input readString]];
        break;
      }
      case 26: {
        [self setUrl:[input readString]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (SyncEnums_ActionIsValidValue(value)) {
          [self setAction:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self addErrorDataTypeIds:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasErrorType {
  return result.hasErrorType;
}
- (SyncEnums_ErrorType) errorType {
  return result.errorType;
}
- (ClientToServerResponse_Error_Builder*) setErrorType:(SyncEnums_ErrorType) value {
  result.hasErrorType = YES;
  result.errorType = value;
  return self;
}
- (ClientToServerResponse_Error_Builder*) clearErrorType {
  result.hasErrorType = NO;
  result.errorType = SyncEnums_ErrorTypeUnknown;
  return self;
}
- (BOOL) hasErrorDescription {
  return result.hasErrorDescription;
}
- (NSString*) errorDescription {
  return result.errorDescription;
}
- (ClientToServerResponse_Error_Builder*) setErrorDescription:(NSString*) value {
  result.hasErrorDescription = YES;
  result.errorDescription = value;
  return self;
}
- (ClientToServerResponse_Error_Builder*) clearErrorDescription {
  result.hasErrorDescription = NO;
  result.errorDescription = @"";
  return self;
}
- (BOOL) hasUrl {
  return result.hasUrl;
}
- (NSString*) url {
  return result.url;
}
- (ClientToServerResponse_Error_Builder*) setUrl:(NSString*) value {
  result.hasUrl = YES;
  result.url = value;
  return self;
}
- (ClientToServerResponse_Error_Builder*) clearUrl {
  result.hasUrl = NO;
  result.url = @"";
  return self;
}
- (BOOL) hasAction {
  return result.hasAction;
}
- (SyncEnums_Action) action {
  return result.action;
}
- (ClientToServerResponse_Error_Builder*) setAction:(SyncEnums_Action) value {
  result.hasAction = YES;
  result.action = value;
  return self;
}
- (ClientToServerResponse_Error_Builder*) clearAction {
  result.hasAction = NO;
  result.action = SyncEnums_ActionUnknownAction;
  return self;
}
- (NSArray*) errorDataTypeIdsList {
  if (result.mutableErrorDataTypeIdsList == nil) {
    return [NSArray array];
  }
  return result.mutableErrorDataTypeIdsList;
}
- (int32_t) errorDataTypeIdsAtIndex:(int32_t) index {
  return [result errorDataTypeIdsAtIndex:index];
}
- (ClientToServerResponse_Error_Builder*) replaceErrorDataTypeIdsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableErrorDataTypeIdsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (ClientToServerResponse_Error_Builder*) addErrorDataTypeIds:(int32_t) value {
  if (result.mutableErrorDataTypeIdsList == nil) {
    result.mutableErrorDataTypeIdsList = [NSMutableArray array];
  }
  [result.mutableErrorDataTypeIdsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (ClientToServerResponse_Error_Builder*) addAllErrorDataTypeIds:(NSArray*) values {
  if (result.mutableErrorDataTypeIdsList == nil) {
    result.mutableErrorDataTypeIdsList = [NSMutableArray array];
  }
  [result.mutableErrorDataTypeIdsList addObjectsFromArray:values];
  return self;
}
- (ClientToServerResponse_Error_Builder*) clearErrorDataTypeIdsList {
  result.mutableErrorDataTypeIdsList = nil;
  return self;
}
@end

@interface ClientToServerResponse_Builder()
@property (retain) ClientToServerResponse* result;
@end

@implementation ClientToServerResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ClientToServerResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClientToServerResponse_Builder*) clear {
  self.result = [[[ClientToServerResponse alloc] init] autorelease];
  return self;
}
- (ClientToServerResponse_Builder*) clone {
  return [ClientToServerResponse builderWithPrototype:result];
}
- (ClientToServerResponse*) defaultInstance {
  return [ClientToServerResponse defaultInstance];
}
- (ClientToServerResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClientToServerResponse*) buildPartial {
  ClientToServerResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ClientToServerResponse_Builder*) mergeFrom:(ClientToServerResponse*) other {
  if (other == [ClientToServerResponse defaultInstance]) {
    return self;
  }
  if (other.hasCommit) {
    [self mergeCommit:other.commit];
  }
  if (other.hasGetUpdates) {
    [self mergeGetUpdates:other.getUpdates];
  }
  if (other.hasAuthenticate) {
    [self mergeAuthenticate:other.authenticate];
  }
  if (other.hasClearUserData) {
    [self mergeClearUserData:other.clearUserData];
  }
  if (other.hasStreamMetadata) {
    [self mergeStreamMetadata:other.streamMetadata];
  }
  if (other.hasStreamData) {
    [self mergeStreamData:other.streamData];
  }
  if (other.hasError) {
    [self mergeError:other.error];
  }
  if (other.hasErrorCode) {
    [self setErrorCode:other.errorCode];
  }
  if (other.hasErrorMessage) {
    [self setErrorMessage:other.errorMessage];
  }
  if (other.hasStoreBirthday) {
    [self setStoreBirthday:other.storeBirthday];
  }
  if (other.hasClientCommand) {
    [self mergeClientCommand:other.clientCommand];
  }
  if (other.hasProfilingData) {
    [self mergeProfilingData:other.profilingData];
  }
  if (other.mutableMigratedDataTypeIdList.count > 0) {
    if (result.mutableMigratedDataTypeIdList == nil) {
      result.mutableMigratedDataTypeIdList = [NSMutableArray array];
    }
    [result.mutableMigratedDataTypeIdList addObjectsFromArray:other.mutableMigratedDataTypeIdList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClientToServerResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClientToServerResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CommitResponse_Builder* subBuilder = [CommitResponse builder];
        if (self.hasCommit) {
          [subBuilder mergeFrom:self.commit];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCommit:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        GetUpdatesResponse_Builder* subBuilder = [GetUpdatesResponse builder];
        if (self.hasGetUpdates) {
          [subBuilder mergeFrom:self.getUpdates];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGetUpdates:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        AuthenticateResponse_Builder* subBuilder = [AuthenticateResponse builder];
        if (self.hasAuthenticate) {
          [subBuilder mergeFrom:self.authenticate];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAuthenticate:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (SyncEnums_ErrorTypeIsValidValue(value)) {
          [self setErrorCode:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 42: {
        [self setErrorMessage:[input readString]];
        break;
      }
      case 50: {
        [self setStoreBirthday:[input readString]];
        break;
      }
      case 58: {
        ClientCommand_Builder* subBuilder = [ClientCommand builder];
        if (self.hasClientCommand) {
          [subBuilder mergeFrom:self.clientCommand];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClientCommand:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        ProfilingData_Builder* subBuilder = [ProfilingData builder];
        if (self.hasProfilingData) {
          [subBuilder mergeFrom:self.profilingData];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setProfilingData:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        ClearUserDataResponse_Builder* subBuilder = [ClearUserDataResponse builder];
        if (self.hasClearUserData) {
          [subBuilder mergeFrom:self.clearUserData];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClearUserData:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        GetUpdatesMetadataResponse_Builder* subBuilder = [GetUpdatesMetadataResponse builder];
        if (self.hasStreamMetadata) {
          [subBuilder mergeFrom:self.streamMetadata];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStreamMetadata:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        GetUpdatesStreamingResponse_Builder* subBuilder = [GetUpdatesStreamingResponse builder];
        if (self.hasStreamData) {
          [subBuilder mergeFrom:self.streamData];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStreamData:[subBuilder buildPartial]];
        break;
      }
      case 96: {
        [self addMigratedDataTypeId:[input readInt32]];
        break;
      }
      case 106: {
        ClientToServerResponse_Error_Builder* subBuilder = [ClientToServerResponse_Error builder];
        if (self.hasError) {
          [subBuilder mergeFrom:self.error];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setError:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCommit {
  return result.hasCommit;
}
- (CommitResponse*) commit {
  return result.commit;
}
- (ClientToServerResponse_Builder*) setCommit:(CommitResponse*) value {
  result.hasCommit = YES;
  result.commit = value;
  return self;
}
- (ClientToServerResponse_Builder*) setCommitBuilder:(CommitResponse_Builder*) builderForValue {
  return [self setCommit:[builderForValue build]];
}
- (ClientToServerResponse_Builder*) mergeCommit:(CommitResponse*) value {
  if (result.hasCommit &&
      result.commit != [CommitResponse defaultInstance]) {
    result.commit =
      [[[CommitResponse builderWithPrototype:result.commit] mergeFrom:value] buildPartial];
  } else {
    result.commit = value;
  }
  result.hasCommit = YES;
  return self;
}
- (ClientToServerResponse_Builder*) clearCommit {
  result.hasCommit = NO;
  result.commit = [CommitResponse defaultInstance];
  return self;
}
- (BOOL) hasGetUpdates {
  return result.hasGetUpdates;
}
- (GetUpdatesResponse*) getUpdates {
  return result.getUpdates;
}
- (ClientToServerResponse_Builder*) setGetUpdates:(GetUpdatesResponse*) value {
  result.hasGetUpdates = YES;
  result.getUpdates = value;
  return self;
}
- (ClientToServerResponse_Builder*) setGetUpdatesBuilder:(GetUpdatesResponse_Builder*) builderForValue {
  return [self setGetUpdates:[builderForValue build]];
}
- (ClientToServerResponse_Builder*) mergeGetUpdates:(GetUpdatesResponse*) value {
  if (result.hasGetUpdates &&
      result.getUpdates != [GetUpdatesResponse defaultInstance]) {
    result.getUpdates =
      [[[GetUpdatesResponse builderWithPrototype:result.getUpdates] mergeFrom:value] buildPartial];
  } else {
    result.getUpdates = value;
  }
  result.hasGetUpdates = YES;
  return self;
}
- (ClientToServerResponse_Builder*) clearGetUpdates {
  result.hasGetUpdates = NO;
  result.getUpdates = [GetUpdatesResponse defaultInstance];
  return self;
}
- (BOOL) hasAuthenticate {
  return result.hasAuthenticate;
}
- (AuthenticateResponse*) authenticate {
  return result.authenticate;
}
- (ClientToServerResponse_Builder*) setAuthenticate:(AuthenticateResponse*) value {
  result.hasAuthenticate = YES;
  result.authenticate = value;
  return self;
}
- (ClientToServerResponse_Builder*) setAuthenticateBuilder:(AuthenticateResponse_Builder*) builderForValue {
  return [self setAuthenticate:[builderForValue build]];
}
- (ClientToServerResponse_Builder*) mergeAuthenticate:(AuthenticateResponse*) value {
  if (result.hasAuthenticate &&
      result.authenticate != [AuthenticateResponse defaultInstance]) {
    result.authenticate =
      [[[AuthenticateResponse builderWithPrototype:result.authenticate] mergeFrom:value] buildPartial];
  } else {
    result.authenticate = value;
  }
  result.hasAuthenticate = YES;
  return self;
}
- (ClientToServerResponse_Builder*) clearAuthenticate {
  result.hasAuthenticate = NO;
  result.authenticate = [AuthenticateResponse defaultInstance];
  return self;
}
- (BOOL) hasClearUserData {
  return result.hasClearUserData;
}
- (ClearUserDataResponse*) clearUserData {
  return result.clearUserData;
}
- (ClientToServerResponse_Builder*) setClearUserData:(ClearUserDataResponse*) value {
  result.hasClearUserData = YES;
  result.clearUserData = value;
  return self;
}
- (ClientToServerResponse_Builder*) setClearUserDataBuilder:(ClearUserDataResponse_Builder*) builderForValue {
  return [self setClearUserData:[builderForValue build]];
}
- (ClientToServerResponse_Builder*) mergeClearUserData:(ClearUserDataResponse*) value {
  if (result.hasClearUserData &&
      result.clearUserData != [ClearUserDataResponse defaultInstance]) {
    result.clearUserData =
      [[[ClearUserDataResponse builderWithPrototype:result.clearUserData] mergeFrom:value] buildPartial];
  } else {
    result.clearUserData = value;
  }
  result.hasClearUserData = YES;
  return self;
}
- (ClientToServerResponse_Builder*) clearClearUserData {
  result.hasClearUserData = NO;
  result.clearUserData = [ClearUserDataResponse defaultInstance];
  return self;
}
- (BOOL) hasStreamMetadata {
  return result.hasStreamMetadata;
}
- (GetUpdatesMetadataResponse*) streamMetadata {
  return result.streamMetadata;
}
- (ClientToServerResponse_Builder*) setStreamMetadata:(GetUpdatesMetadataResponse*) value {
  result.hasStreamMetadata = YES;
  result.streamMetadata = value;
  return self;
}
- (ClientToServerResponse_Builder*) setStreamMetadataBuilder:(GetUpdatesMetadataResponse_Builder*) builderForValue {
  return [self setStreamMetadata:[builderForValue build]];
}
- (ClientToServerResponse_Builder*) mergeStreamMetadata:(GetUpdatesMetadataResponse*) value {
  if (result.hasStreamMetadata &&
      result.streamMetadata != [GetUpdatesMetadataResponse defaultInstance]) {
    result.streamMetadata =
      [[[GetUpdatesMetadataResponse builderWithPrototype:result.streamMetadata] mergeFrom:value] buildPartial];
  } else {
    result.streamMetadata = value;
  }
  result.hasStreamMetadata = YES;
  return self;
}
- (ClientToServerResponse_Builder*) clearStreamMetadata {
  result.hasStreamMetadata = NO;
  result.streamMetadata = [GetUpdatesMetadataResponse defaultInstance];
  return self;
}
- (BOOL) hasStreamData {
  return result.hasStreamData;
}
- (GetUpdatesStreamingResponse*) streamData {
  return result.streamData;
}
- (ClientToServerResponse_Builder*) setStreamData:(GetUpdatesStreamingResponse*) value {
  result.hasStreamData = YES;
  result.streamData = value;
  return self;
}
- (ClientToServerResponse_Builder*) setStreamDataBuilder:(GetUpdatesStreamingResponse_Builder*) builderForValue {
  return [self setStreamData:[builderForValue build]];
}
- (ClientToServerResponse_Builder*) mergeStreamData:(GetUpdatesStreamingResponse*) value {
  if (result.hasStreamData &&
      result.streamData != [GetUpdatesStreamingResponse defaultInstance]) {
    result.streamData =
      [[[GetUpdatesStreamingResponse builderWithPrototype:result.streamData] mergeFrom:value] buildPartial];
  } else {
    result.streamData = value;
  }
  result.hasStreamData = YES;
  return self;
}
- (ClientToServerResponse_Builder*) clearStreamData {
  result.hasStreamData = NO;
  result.streamData = [GetUpdatesStreamingResponse defaultInstance];
  return self;
}
- (BOOL) hasError {
  return result.hasError;
}
- (ClientToServerResponse_Error*) error {
  return result.error;
}
- (ClientToServerResponse_Builder*) setError:(ClientToServerResponse_Error*) value {
  result.hasError = YES;
  result.error = value;
  return self;
}
- (ClientToServerResponse_Builder*) setErrorBuilder:(ClientToServerResponse_Error_Builder*) builderForValue {
  return [self setError:[builderForValue build]];
}
- (ClientToServerResponse_Builder*) mergeError:(ClientToServerResponse_Error*) value {
  if (result.hasError &&
      result.error != [ClientToServerResponse_Error defaultInstance]) {
    result.error =
      [[[ClientToServerResponse_Error builderWithPrototype:result.error] mergeFrom:value] buildPartial];
  } else {
    result.error = value;
  }
  result.hasError = YES;
  return self;
}
- (ClientToServerResponse_Builder*) clearError {
  result.hasError = NO;
  result.error = [ClientToServerResponse_Error defaultInstance];
  return self;
}
- (BOOL) hasErrorCode {
  return result.hasErrorCode;
}
- (SyncEnums_ErrorType) errorCode {
  return result.errorCode;
}
- (ClientToServerResponse_Builder*) setErrorCode:(SyncEnums_ErrorType) value {
  result.hasErrorCode = YES;
  result.errorCode = value;
  return self;
}
- (ClientToServerResponse_Builder*) clearErrorCode {
  result.hasErrorCode = NO;
  result.errorCode = SyncEnums_ErrorTypeUnknown;
  return self;
}
- (BOOL) hasErrorMessage {
  return result.hasErrorMessage;
}
- (NSString*) errorMessage {
  return result.errorMessage;
}
- (ClientToServerResponse_Builder*) setErrorMessage:(NSString*) value {
  result.hasErrorMessage = YES;
  result.errorMessage = value;
  return self;
}
- (ClientToServerResponse_Builder*) clearErrorMessage {
  result.hasErrorMessage = NO;
  result.errorMessage = @"";
  return self;
}
- (BOOL) hasStoreBirthday {
  return result.hasStoreBirthday;
}
- (NSString*) storeBirthday {
  return result.storeBirthday;
}
- (ClientToServerResponse_Builder*) setStoreBirthday:(NSString*) value {
  result.hasStoreBirthday = YES;
  result.storeBirthday = value;
  return self;
}
- (ClientToServerResponse_Builder*) clearStoreBirthday {
  result.hasStoreBirthday = NO;
  result.storeBirthday = @"";
  return self;
}
- (BOOL) hasClientCommand {
  return result.hasClientCommand;
}
- (ClientCommand*) clientCommand {
  return result.clientCommand;
}
- (ClientToServerResponse_Builder*) setClientCommand:(ClientCommand*) value {
  result.hasClientCommand = YES;
  result.clientCommand = value;
  return self;
}
- (ClientToServerResponse_Builder*) setClientCommandBuilder:(ClientCommand_Builder*) builderForValue {
  return [self setClientCommand:[builderForValue build]];
}
- (ClientToServerResponse_Builder*) mergeClientCommand:(ClientCommand*) value {
  if (result.hasClientCommand &&
      result.clientCommand != [ClientCommand defaultInstance]) {
    result.clientCommand =
      [[[ClientCommand builderWithPrototype:result.clientCommand] mergeFrom:value] buildPartial];
  } else {
    result.clientCommand = value;
  }
  result.hasClientCommand = YES;
  return self;
}
- (ClientToServerResponse_Builder*) clearClientCommand {
  result.hasClientCommand = NO;
  result.clientCommand = [ClientCommand defaultInstance];
  return self;
}
- (BOOL) hasProfilingData {
  return result.hasProfilingData;
}
- (ProfilingData*) profilingData {
  return result.profilingData;
}
- (ClientToServerResponse_Builder*) setProfilingData:(ProfilingData*) value {
  result.hasProfilingData = YES;
  result.profilingData = value;
  return self;
}
- (ClientToServerResponse_Builder*) setProfilingDataBuilder:(ProfilingData_Builder*) builderForValue {
  return [self setProfilingData:[builderForValue build]];
}
- (ClientToServerResponse_Builder*) mergeProfilingData:(ProfilingData*) value {
  if (result.hasProfilingData &&
      result.profilingData != [ProfilingData defaultInstance]) {
    result.profilingData =
      [[[ProfilingData builderWithPrototype:result.profilingData] mergeFrom:value] buildPartial];
  } else {
    result.profilingData = value;
  }
  result.hasProfilingData = YES;
  return self;
}
- (ClientToServerResponse_Builder*) clearProfilingData {
  result.hasProfilingData = NO;
  result.profilingData = [ProfilingData defaultInstance];
  return self;
}
- (NSArray*) migratedDataTypeIdList {
  if (result.mutableMigratedDataTypeIdList == nil) {
    return [NSArray array];
  }
  return result.mutableMigratedDataTypeIdList;
}
- (int32_t) migratedDataTypeIdAtIndex:(int32_t) index {
  return [result migratedDataTypeIdAtIndex:index];
}
- (ClientToServerResponse_Builder*) replaceMigratedDataTypeIdAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableMigratedDataTypeIdList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (ClientToServerResponse_Builder*) addMigratedDataTypeId:(int32_t) value {
  if (result.mutableMigratedDataTypeIdList == nil) {
    result.mutableMigratedDataTypeIdList = [NSMutableArray array];
  }
  [result.mutableMigratedDataTypeIdList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (ClientToServerResponse_Builder*) addAllMigratedDataTypeId:(NSArray*) values {
  if (result.mutableMigratedDataTypeIdList == nil) {
    result.mutableMigratedDataTypeIdList = [NSMutableArray array];
  }
  [result.mutableMigratedDataTypeIdList addObjectsFromArray:values];
  return self;
}
- (ClientToServerResponse_Builder*) clearMigratedDataTypeIdList {
  result.mutableMigratedDataTypeIdList = nil;
  return self;
}
@end

