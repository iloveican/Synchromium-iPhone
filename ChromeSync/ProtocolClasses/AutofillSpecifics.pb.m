// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "AutofillSpecifics.pb.h"

@implementation AutofillSpecificsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [AutofillSpecificsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface AutofillProfileSpecifics ()
@property (retain) NSString* label;
@property (retain) NSString* guid;
@property (retain) NSMutableArray* mutableNameFirstList;
@property (retain) NSMutableArray* mutableNameMiddleList;
@property (retain) NSMutableArray* mutableNameLastList;
@property (retain) NSMutableArray* mutableEmailAddressList;
@property (retain) NSString* companyName;
@property (retain) NSString* addressHomeLine1;
@property (retain) NSString* addressHomeLine2;
@property (retain) NSString* addressHomeCity;
@property (retain) NSString* addressHomeState;
@property (retain) NSString* addressHomeZip;
@property (retain) NSString* addressHomeCountry;
@property (retain) NSMutableArray* mutablePhoneHomeWholeNumberList;
@property (retain) NSString* phoneFaxWholeNumber;
@end

@implementation AutofillProfileSpecifics

- (BOOL) hasLabel {
  return !!hasLabel_;
}
- (void) setHasLabel:(BOOL) value {
  hasLabel_ = !!value;
}
@synthesize label;
- (BOOL) hasGuid {
  return !!hasGuid_;
}
- (void) setHasGuid:(BOOL) value {
  hasGuid_ = !!value;
}
@synthesize guid;
@synthesize mutableNameFirstList;
@synthesize mutableNameMiddleList;
@synthesize mutableNameLastList;
@synthesize mutableEmailAddressList;
- (BOOL) hasCompanyName {
  return !!hasCompanyName_;
}
- (void) setHasCompanyName:(BOOL) value {
  hasCompanyName_ = !!value;
}
@synthesize companyName;
- (BOOL) hasAddressHomeLine1 {
  return !!hasAddressHomeLine1_;
}
- (void) setHasAddressHomeLine1:(BOOL) value {
  hasAddressHomeLine1_ = !!value;
}
@synthesize addressHomeLine1;
- (BOOL) hasAddressHomeLine2 {
  return !!hasAddressHomeLine2_;
}
- (void) setHasAddressHomeLine2:(BOOL) value {
  hasAddressHomeLine2_ = !!value;
}
@synthesize addressHomeLine2;
- (BOOL) hasAddressHomeCity {
  return !!hasAddressHomeCity_;
}
- (void) setHasAddressHomeCity:(BOOL) value {
  hasAddressHomeCity_ = !!value;
}
@synthesize addressHomeCity;
- (BOOL) hasAddressHomeState {
  return !!hasAddressHomeState_;
}
- (void) setHasAddressHomeState:(BOOL) value {
  hasAddressHomeState_ = !!value;
}
@synthesize addressHomeState;
- (BOOL) hasAddressHomeZip {
  return !!hasAddressHomeZip_;
}
- (void) setHasAddressHomeZip:(BOOL) value {
  hasAddressHomeZip_ = !!value;
}
@synthesize addressHomeZip;
- (BOOL) hasAddressHomeCountry {
  return !!hasAddressHomeCountry_;
}
- (void) setHasAddressHomeCountry:(BOOL) value {
  hasAddressHomeCountry_ = !!value;
}
@synthesize addressHomeCountry;
@synthesize mutablePhoneHomeWholeNumberList;
- (BOOL) hasPhoneFaxWholeNumber {
  return !!hasPhoneFaxWholeNumber_;
}
- (void) setHasPhoneFaxWholeNumber:(BOOL) value {
  hasPhoneFaxWholeNumber_ = !!value;
}
@synthesize phoneFaxWholeNumber;
- (void) dealloc {
  self.label = nil;
  self.guid = nil;
  self.mutableNameFirstList = nil;
  self.mutableNameMiddleList = nil;
  self.mutableNameLastList = nil;
  self.mutableEmailAddressList = nil;
  self.companyName = nil;
  self.addressHomeLine1 = nil;
  self.addressHomeLine2 = nil;
  self.addressHomeCity = nil;
  self.addressHomeState = nil;
  self.addressHomeZip = nil;
  self.addressHomeCountry = nil;
  self.mutablePhoneHomeWholeNumberList = nil;
  self.phoneFaxWholeNumber = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.label = @"";
    self.guid = @"";
    self.companyName = @"";
    self.addressHomeLine1 = @"";
    self.addressHomeLine2 = @"";
    self.addressHomeCity = @"";
    self.addressHomeState = @"";
    self.addressHomeZip = @"";
    self.addressHomeCountry = @"";
    self.phoneFaxWholeNumber = @"";
  }
  return self;
}
static AutofillProfileSpecifics* defaultAutofillProfileSpecificsInstance = nil;
+ (void) initialize {
  if (self == [AutofillProfileSpecifics class]) {
    defaultAutofillProfileSpecificsInstance = [[AutofillProfileSpecifics alloc] init];
  }
}
+ (AutofillProfileSpecifics*) defaultInstance {
  return defaultAutofillProfileSpecificsInstance;
}
- (AutofillProfileSpecifics*) defaultInstance {
  return defaultAutofillProfileSpecificsInstance;
}
- (NSArray*) nameFirstList {
  return mutableNameFirstList;
}
- (NSString*) nameFirstAtIndex:(int32_t) index {
  id value = [mutableNameFirstList objectAtIndex:index];
  return value;
}
- (NSArray*) nameMiddleList {
  return mutableNameMiddleList;
}
- (NSString*) nameMiddleAtIndex:(int32_t) index {
  id value = [mutableNameMiddleList objectAtIndex:index];
  return value;
}
- (NSArray*) nameLastList {
  return mutableNameLastList;
}
- (NSString*) nameLastAtIndex:(int32_t) index {
  id value = [mutableNameLastList objectAtIndex:index];
  return value;
}
- (NSArray*) emailAddressList {
  return mutableEmailAddressList;
}
- (NSString*) emailAddressAtIndex:(int32_t) index {
  id value = [mutableEmailAddressList objectAtIndex:index];
  return value;
}
- (NSArray*) phoneHomeWholeNumberList {
  return mutablePhoneHomeWholeNumberList;
}
- (NSString*) phoneHomeWholeNumberAtIndex:(int32_t) index {
  id value = [mutablePhoneHomeWholeNumberList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLabel) {
    [output writeString:1 value:self.label];
  }
  for (NSString* element in self.mutableNameFirstList) {
    [output writeString:2 value:element];
  }
  for (NSString* element in self.mutableNameMiddleList) {
    [output writeString:3 value:element];
  }
  for (NSString* element in self.mutableNameLastList) {
    [output writeString:4 value:element];
  }
  for (NSString* element in self.mutableEmailAddressList) {
    [output writeString:5 value:element];
  }
  if (self.hasCompanyName) {
    [output writeString:6 value:self.companyName];
  }
  if (self.hasAddressHomeLine1) {
    [output writeString:7 value:self.addressHomeLine1];
  }
  if (self.hasAddressHomeLine2) {
    [output writeString:8 value:self.addressHomeLine2];
  }
  if (self.hasAddressHomeCity) {
    [output writeString:9 value:self.addressHomeCity];
  }
  if (self.hasAddressHomeState) {
    [output writeString:10 value:self.addressHomeState];
  }
  if (self.hasAddressHomeZip) {
    [output writeString:11 value:self.addressHomeZip];
  }
  if (self.hasAddressHomeCountry) {
    [output writeString:12 value:self.addressHomeCountry];
  }
  for (NSString* element in self.mutablePhoneHomeWholeNumberList) {
    [output writeString:13 value:element];
  }
  if (self.hasPhoneFaxWholeNumber) {
    [output writeString:14 value:self.phoneFaxWholeNumber];
  }
  if (self.hasGuid) {
    [output writeString:15 value:self.guid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasLabel) {
    size += computeStringSize(1, self.label);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableNameFirstList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableNameFirstList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableNameMiddleList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableNameMiddleList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableNameLastList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableNameLastList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableEmailAddressList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableEmailAddressList.count;
  }
  if (self.hasCompanyName) {
    size += computeStringSize(6, self.companyName);
  }
  if (self.hasAddressHomeLine1) {
    size += computeStringSize(7, self.addressHomeLine1);
  }
  if (self.hasAddressHomeLine2) {
    size += computeStringSize(8, self.addressHomeLine2);
  }
  if (self.hasAddressHomeCity) {
    size += computeStringSize(9, self.addressHomeCity);
  }
  if (self.hasAddressHomeState) {
    size += computeStringSize(10, self.addressHomeState);
  }
  if (self.hasAddressHomeZip) {
    size += computeStringSize(11, self.addressHomeZip);
  }
  if (self.hasAddressHomeCountry) {
    size += computeStringSize(12, self.addressHomeCountry);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutablePhoneHomeWholeNumberList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutablePhoneHomeWholeNumberList.count;
  }
  if (self.hasPhoneFaxWholeNumber) {
    size += computeStringSize(14, self.phoneFaxWholeNumber);
  }
  if (self.hasGuid) {
    size += computeStringSize(15, self.guid);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AutofillProfileSpecifics*) parseFromData:(NSData*) data {
  return (AutofillProfileSpecifics*)[[[AutofillProfileSpecifics builder] mergeFromData:data] build];
}
+ (AutofillProfileSpecifics*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AutofillProfileSpecifics*)[[[AutofillProfileSpecifics builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AutofillProfileSpecifics*) parseFromInputStream:(NSInputStream*) input {
  return (AutofillProfileSpecifics*)[[[AutofillProfileSpecifics builder] mergeFromInputStream:input] build];
}
+ (AutofillProfileSpecifics*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AutofillProfileSpecifics*)[[[AutofillProfileSpecifics builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AutofillProfileSpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AutofillProfileSpecifics*)[[[AutofillProfileSpecifics builder] mergeFromCodedInputStream:input] build];
}
+ (AutofillProfileSpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AutofillProfileSpecifics*)[[[AutofillProfileSpecifics builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AutofillProfileSpecifics_Builder*) builder {
  return [[[AutofillProfileSpecifics_Builder alloc] init] autorelease];
}
+ (AutofillProfileSpecifics_Builder*) builderWithPrototype:(AutofillProfileSpecifics*) prototype {
  return [[AutofillProfileSpecifics builder] mergeFrom:prototype];
}
- (AutofillProfileSpecifics_Builder*) builder {
  return [AutofillProfileSpecifics builder];
}
@end

@interface AutofillProfileSpecifics_Builder()
@property (retain) AutofillProfileSpecifics* result;
@end

@implementation AutofillProfileSpecifics_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AutofillProfileSpecifics alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AutofillProfileSpecifics_Builder*) clear {
  self.result = [[[AutofillProfileSpecifics alloc] init] autorelease];
  return self;
}
- (AutofillProfileSpecifics_Builder*) clone {
  return [AutofillProfileSpecifics builderWithPrototype:result];
}
- (AutofillProfileSpecifics*) defaultInstance {
  return [AutofillProfileSpecifics defaultInstance];
}
- (AutofillProfileSpecifics*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AutofillProfileSpecifics*) buildPartial {
  AutofillProfileSpecifics* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AutofillProfileSpecifics_Builder*) mergeFrom:(AutofillProfileSpecifics*) other {
  if (other == [AutofillProfileSpecifics defaultInstance]) {
    return self;
  }
  if (other.hasLabel) {
    [self setLabel:other.label];
  }
  if (other.hasGuid) {
    [self setGuid:other.guid];
  }
  if (other.mutableNameFirstList.count > 0) {
    if (result.mutableNameFirstList == nil) {
      result.mutableNameFirstList = [NSMutableArray array];
    }
    [result.mutableNameFirstList addObjectsFromArray:other.mutableNameFirstList];
  }
  if (other.mutableNameMiddleList.count > 0) {
    if (result.mutableNameMiddleList == nil) {
      result.mutableNameMiddleList = [NSMutableArray array];
    }
    [result.mutableNameMiddleList addObjectsFromArray:other.mutableNameMiddleList];
  }
  if (other.mutableNameLastList.count > 0) {
    if (result.mutableNameLastList == nil) {
      result.mutableNameLastList = [NSMutableArray array];
    }
    [result.mutableNameLastList addObjectsFromArray:other.mutableNameLastList];
  }
  if (other.mutableEmailAddressList.count > 0) {
    if (result.mutableEmailAddressList == nil) {
      result.mutableEmailAddressList = [NSMutableArray array];
    }
    [result.mutableEmailAddressList addObjectsFromArray:other.mutableEmailAddressList];
  }
  if (other.hasCompanyName) {
    [self setCompanyName:other.companyName];
  }
  if (other.hasAddressHomeLine1) {
    [self setAddressHomeLine1:other.addressHomeLine1];
  }
  if (other.hasAddressHomeLine2) {
    [self setAddressHomeLine2:other.addressHomeLine2];
  }
  if (other.hasAddressHomeCity) {
    [self setAddressHomeCity:other.addressHomeCity];
  }
  if (other.hasAddressHomeState) {
    [self setAddressHomeState:other.addressHomeState];
  }
  if (other.hasAddressHomeZip) {
    [self setAddressHomeZip:other.addressHomeZip];
  }
  if (other.hasAddressHomeCountry) {
    [self setAddressHomeCountry:other.addressHomeCountry];
  }
  if (other.mutablePhoneHomeWholeNumberList.count > 0) {
    if (result.mutablePhoneHomeWholeNumberList == nil) {
      result.mutablePhoneHomeWholeNumberList = [NSMutableArray array];
    }
    [result.mutablePhoneHomeWholeNumberList addObjectsFromArray:other.mutablePhoneHomeWholeNumberList];
  }
  if (other.hasPhoneFaxWholeNumber) {
    [self setPhoneFaxWholeNumber:other.phoneFaxWholeNumber];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AutofillProfileSpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AutofillProfileSpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setLabel:[input readString]];
        break;
      }
      case 18: {
        [self addNameFirst:[input readString]];
        break;
      }
      case 26: {
        [self addNameMiddle:[input readString]];
        break;
      }
      case 34: {
        [self addNameLast:[input readString]];
        break;
      }
      case 42: {
        [self addEmailAddress:[input readString]];
        break;
      }
      case 50: {
        [self setCompanyName:[input readString]];
        break;
      }
      case 58: {
        [self setAddressHomeLine1:[input readString]];
        break;
      }
      case 66: {
        [self setAddressHomeLine2:[input readString]];
        break;
      }
      case 74: {
        [self setAddressHomeCity:[input readString]];
        break;
      }
      case 82: {
        [self setAddressHomeState:[input readString]];
        break;
      }
      case 90: {
        [self setAddressHomeZip:[input readString]];
        break;
      }
      case 98: {
        [self setAddressHomeCountry:[input readString]];
        break;
      }
      case 106: {
        [self addPhoneHomeWholeNumber:[input readString]];
        break;
      }
      case 114: {
        [self setPhoneFaxWholeNumber:[input readString]];
        break;
      }
      case 122: {
        [self setGuid:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasLabel {
  return result.hasLabel;
}
- (NSString*) label {
  return result.label;
}
- (AutofillProfileSpecifics_Builder*) setLabel:(NSString*) value {
  result.hasLabel = YES;
  result.label = value;
  return self;
}
- (AutofillProfileSpecifics_Builder*) clearLabel {
  result.hasLabel = NO;
  result.label = @"";
  return self;
}
- (BOOL) hasGuid {
  return result.hasGuid;
}
- (NSString*) guid {
  return result.guid;
}
- (AutofillProfileSpecifics_Builder*) setGuid:(NSString*) value {
  result.hasGuid = YES;
  result.guid = value;
  return self;
}
- (AutofillProfileSpecifics_Builder*) clearGuid {
  result.hasGuid = NO;
  result.guid = @"";
  return self;
}
- (NSArray*) nameFirstList {
  if (result.mutableNameFirstList == nil) {
    return [NSArray array];
  }
  return result.mutableNameFirstList;
}
- (NSString*) nameFirstAtIndex:(int32_t) index {
  return [result nameFirstAtIndex:index];
}
- (AutofillProfileSpecifics_Builder*) replaceNameFirstAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableNameFirstList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (AutofillProfileSpecifics_Builder*) addNameFirst:(NSString*) value {
  if (result.mutableNameFirstList == nil) {
    result.mutableNameFirstList = [NSMutableArray array];
  }
  [result.mutableNameFirstList addObject:value];
  return self;
}
- (AutofillProfileSpecifics_Builder*) addAllNameFirst:(NSArray*) values {
  if (result.mutableNameFirstList == nil) {
    result.mutableNameFirstList = [NSMutableArray array];
  }
  [result.mutableNameFirstList addObjectsFromArray:values];
  return self;
}
- (AutofillProfileSpecifics_Builder*) clearNameFirstList {
  result.mutableNameFirstList = nil;
  return self;
}
- (NSArray*) nameMiddleList {
  if (result.mutableNameMiddleList == nil) {
    return [NSArray array];
  }
  return result.mutableNameMiddleList;
}
- (NSString*) nameMiddleAtIndex:(int32_t) index {
  return [result nameMiddleAtIndex:index];
}
- (AutofillProfileSpecifics_Builder*) replaceNameMiddleAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableNameMiddleList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (AutofillProfileSpecifics_Builder*) addNameMiddle:(NSString*) value {
  if (result.mutableNameMiddleList == nil) {
    result.mutableNameMiddleList = [NSMutableArray array];
  }
  [result.mutableNameMiddleList addObject:value];
  return self;
}
- (AutofillProfileSpecifics_Builder*) addAllNameMiddle:(NSArray*) values {
  if (result.mutableNameMiddleList == nil) {
    result.mutableNameMiddleList = [NSMutableArray array];
  }
  [result.mutableNameMiddleList addObjectsFromArray:values];
  return self;
}
- (AutofillProfileSpecifics_Builder*) clearNameMiddleList {
  result.mutableNameMiddleList = nil;
  return self;
}
- (NSArray*) nameLastList {
  if (result.mutableNameLastList == nil) {
    return [NSArray array];
  }
  return result.mutableNameLastList;
}
- (NSString*) nameLastAtIndex:(int32_t) index {
  return [result nameLastAtIndex:index];
}
- (AutofillProfileSpecifics_Builder*) replaceNameLastAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableNameLastList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (AutofillProfileSpecifics_Builder*) addNameLast:(NSString*) value {
  if (result.mutableNameLastList == nil) {
    result.mutableNameLastList = [NSMutableArray array];
  }
  [result.mutableNameLastList addObject:value];
  return self;
}
- (AutofillProfileSpecifics_Builder*) addAllNameLast:(NSArray*) values {
  if (result.mutableNameLastList == nil) {
    result.mutableNameLastList = [NSMutableArray array];
  }
  [result.mutableNameLastList addObjectsFromArray:values];
  return self;
}
- (AutofillProfileSpecifics_Builder*) clearNameLastList {
  result.mutableNameLastList = nil;
  return self;
}
- (NSArray*) emailAddressList {
  if (result.mutableEmailAddressList == nil) {
    return [NSArray array];
  }
  return result.mutableEmailAddressList;
}
- (NSString*) emailAddressAtIndex:(int32_t) index {
  return [result emailAddressAtIndex:index];
}
- (AutofillProfileSpecifics_Builder*) replaceEmailAddressAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableEmailAddressList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (AutofillProfileSpecifics_Builder*) addEmailAddress:(NSString*) value {
  if (result.mutableEmailAddressList == nil) {
    result.mutableEmailAddressList = [NSMutableArray array];
  }
  [result.mutableEmailAddressList addObject:value];
  return self;
}
- (AutofillProfileSpecifics_Builder*) addAllEmailAddress:(NSArray*) values {
  if (result.mutableEmailAddressList == nil) {
    result.mutableEmailAddressList = [NSMutableArray array];
  }
  [result.mutableEmailAddressList addObjectsFromArray:values];
  return self;
}
- (AutofillProfileSpecifics_Builder*) clearEmailAddressList {
  result.mutableEmailAddressList = nil;
  return self;
}
- (BOOL) hasCompanyName {
  return result.hasCompanyName;
}
- (NSString*) companyName {
  return result.companyName;
}
- (AutofillProfileSpecifics_Builder*) setCompanyName:(NSString*) value {
  result.hasCompanyName = YES;
  result.companyName = value;
  return self;
}
- (AutofillProfileSpecifics_Builder*) clearCompanyName {
  result.hasCompanyName = NO;
  result.companyName = @"";
  return self;
}
- (BOOL) hasAddressHomeLine1 {
  return result.hasAddressHomeLine1;
}
- (NSString*) addressHomeLine1 {
  return result.addressHomeLine1;
}
- (AutofillProfileSpecifics_Builder*) setAddressHomeLine1:(NSString*) value {
  result.hasAddressHomeLine1 = YES;
  result.addressHomeLine1 = value;
  return self;
}
- (AutofillProfileSpecifics_Builder*) clearAddressHomeLine1 {
  result.hasAddressHomeLine1 = NO;
  result.addressHomeLine1 = @"";
  return self;
}
- (BOOL) hasAddressHomeLine2 {
  return result.hasAddressHomeLine2;
}
- (NSString*) addressHomeLine2 {
  return result.addressHomeLine2;
}
- (AutofillProfileSpecifics_Builder*) setAddressHomeLine2:(NSString*) value {
  result.hasAddressHomeLine2 = YES;
  result.addressHomeLine2 = value;
  return self;
}
- (AutofillProfileSpecifics_Builder*) clearAddressHomeLine2 {
  result.hasAddressHomeLine2 = NO;
  result.addressHomeLine2 = @"";
  return self;
}
- (BOOL) hasAddressHomeCity {
  return result.hasAddressHomeCity;
}
- (NSString*) addressHomeCity {
  return result.addressHomeCity;
}
- (AutofillProfileSpecifics_Builder*) setAddressHomeCity:(NSString*) value {
  result.hasAddressHomeCity = YES;
  result.addressHomeCity = value;
  return self;
}
- (AutofillProfileSpecifics_Builder*) clearAddressHomeCity {
  result.hasAddressHomeCity = NO;
  result.addressHomeCity = @"";
  return self;
}
- (BOOL) hasAddressHomeState {
  return result.hasAddressHomeState;
}
- (NSString*) addressHomeState {
  return result.addressHomeState;
}
- (AutofillProfileSpecifics_Builder*) setAddressHomeState:(NSString*) value {
  result.hasAddressHomeState = YES;
  result.addressHomeState = value;
  return self;
}
- (AutofillProfileSpecifics_Builder*) clearAddressHomeState {
  result.hasAddressHomeState = NO;
  result.addressHomeState = @"";
  return self;
}
- (BOOL) hasAddressHomeZip {
  return result.hasAddressHomeZip;
}
- (NSString*) addressHomeZip {
  return result.addressHomeZip;
}
- (AutofillProfileSpecifics_Builder*) setAddressHomeZip:(NSString*) value {
  result.hasAddressHomeZip = YES;
  result.addressHomeZip = value;
  return self;
}
- (AutofillProfileSpecifics_Builder*) clearAddressHomeZip {
  result.hasAddressHomeZip = NO;
  result.addressHomeZip = @"";
  return self;
}
- (BOOL) hasAddressHomeCountry {
  return result.hasAddressHomeCountry;
}
- (NSString*) addressHomeCountry {
  return result.addressHomeCountry;
}
- (AutofillProfileSpecifics_Builder*) setAddressHomeCountry:(NSString*) value {
  result.hasAddressHomeCountry = YES;
  result.addressHomeCountry = value;
  return self;
}
- (AutofillProfileSpecifics_Builder*) clearAddressHomeCountry {
  result.hasAddressHomeCountry = NO;
  result.addressHomeCountry = @"";
  return self;
}
- (NSArray*) phoneHomeWholeNumberList {
  if (result.mutablePhoneHomeWholeNumberList == nil) {
    return [NSArray array];
  }
  return result.mutablePhoneHomeWholeNumberList;
}
- (NSString*) phoneHomeWholeNumberAtIndex:(int32_t) index {
  return [result phoneHomeWholeNumberAtIndex:index];
}
- (AutofillProfileSpecifics_Builder*) replacePhoneHomeWholeNumberAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutablePhoneHomeWholeNumberList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (AutofillProfileSpecifics_Builder*) addPhoneHomeWholeNumber:(NSString*) value {
  if (result.mutablePhoneHomeWholeNumberList == nil) {
    result.mutablePhoneHomeWholeNumberList = [NSMutableArray array];
  }
  [result.mutablePhoneHomeWholeNumberList addObject:value];
  return self;
}
- (AutofillProfileSpecifics_Builder*) addAllPhoneHomeWholeNumber:(NSArray*) values {
  if (result.mutablePhoneHomeWholeNumberList == nil) {
    result.mutablePhoneHomeWholeNumberList = [NSMutableArray array];
  }
  [result.mutablePhoneHomeWholeNumberList addObjectsFromArray:values];
  return self;
}
- (AutofillProfileSpecifics_Builder*) clearPhoneHomeWholeNumberList {
  result.mutablePhoneHomeWholeNumberList = nil;
  return self;
}
- (BOOL) hasPhoneFaxWholeNumber {
  return result.hasPhoneFaxWholeNumber;
}
- (NSString*) phoneFaxWholeNumber {
  return result.phoneFaxWholeNumber;
}
- (AutofillProfileSpecifics_Builder*) setPhoneFaxWholeNumber:(NSString*) value {
  result.hasPhoneFaxWholeNumber = YES;
  result.phoneFaxWholeNumber = value;
  return self;
}
- (AutofillProfileSpecifics_Builder*) clearPhoneFaxWholeNumber {
  result.hasPhoneFaxWholeNumber = NO;
  result.phoneFaxWholeNumber = @"";
  return self;
}
@end

@interface AutofillSpecifics ()
@property (retain) NSString* name;
@property (retain) NSString* value;
@property (retain) NSMutableArray* mutableUsageTimestampList;
@property (retain) AutofillProfileSpecifics* profile;
@end

@implementation AutofillSpecifics

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) value {
  hasValue_ = !!value;
}
@synthesize value;
@synthesize mutableUsageTimestampList;
- (BOOL) hasProfile {
  return !!hasProfile_;
}
- (void) setHasProfile:(BOOL) value {
  hasProfile_ = !!value;
}
@synthesize profile;
- (void) dealloc {
  self.name = nil;
  self.value = nil;
  self.mutableUsageTimestampList = nil;
  self.profile = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.value = @"";
    self.profile = [AutofillProfileSpecifics defaultInstance];
  }
  return self;
}
static AutofillSpecifics* defaultAutofillSpecificsInstance = nil;
+ (void) initialize {
  if (self == [AutofillSpecifics class]) {
    defaultAutofillSpecificsInstance = [[AutofillSpecifics alloc] init];
  }
}
+ (AutofillSpecifics*) defaultInstance {
  return defaultAutofillSpecificsInstance;
}
- (AutofillSpecifics*) defaultInstance {
  return defaultAutofillSpecificsInstance;
}
- (NSArray*) usageTimestampList {
  return mutableUsageTimestampList;
}
- (int64_t) usageTimestampAtIndex:(int32_t) index {
  id value = [mutableUsageTimestampList objectAtIndex:index];
  return [value longLongValue];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasValue) {
    [output writeString:2 value:self.value];
  }
  for (NSNumber* value in self.mutableUsageTimestampList) {
    [output writeInt64:3 value:[value longLongValue]];
  }
  if (self.hasProfile) {
    [output writeMessage:4 value:self.profile];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasValue) {
    size += computeStringSize(2, self.value);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableUsageTimestampList) {
      dataSize += computeInt64SizeNoTag([value longLongValue]);
    }
    size += dataSize;
    size += 1 * self.mutableUsageTimestampList.count;
  }
  if (self.hasProfile) {
    size += computeMessageSize(4, self.profile);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AutofillSpecifics*) parseFromData:(NSData*) data {
  return (AutofillSpecifics*)[[[AutofillSpecifics builder] mergeFromData:data] build];
}
+ (AutofillSpecifics*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AutofillSpecifics*)[[[AutofillSpecifics builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AutofillSpecifics*) parseFromInputStream:(NSInputStream*) input {
  return (AutofillSpecifics*)[[[AutofillSpecifics builder] mergeFromInputStream:input] build];
}
+ (AutofillSpecifics*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AutofillSpecifics*)[[[AutofillSpecifics builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AutofillSpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AutofillSpecifics*)[[[AutofillSpecifics builder] mergeFromCodedInputStream:input] build];
}
+ (AutofillSpecifics*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AutofillSpecifics*)[[[AutofillSpecifics builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AutofillSpecifics_Builder*) builder {
  return [[[AutofillSpecifics_Builder alloc] init] autorelease];
}
+ (AutofillSpecifics_Builder*) builderWithPrototype:(AutofillSpecifics*) prototype {
  return [[AutofillSpecifics builder] mergeFrom:prototype];
}
- (AutofillSpecifics_Builder*) builder {
  return [AutofillSpecifics builder];
}
@end

@interface AutofillSpecifics_Builder()
@property (retain) AutofillSpecifics* result;
@end

@implementation AutofillSpecifics_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AutofillSpecifics alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AutofillSpecifics_Builder*) clear {
  self.result = [[[AutofillSpecifics alloc] init] autorelease];
  return self;
}
- (AutofillSpecifics_Builder*) clone {
  return [AutofillSpecifics builderWithPrototype:result];
}
- (AutofillSpecifics*) defaultInstance {
  return [AutofillSpecifics defaultInstance];
}
- (AutofillSpecifics*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AutofillSpecifics*) buildPartial {
  AutofillSpecifics* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AutofillSpecifics_Builder*) mergeFrom:(AutofillSpecifics*) other {
  if (other == [AutofillSpecifics defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  if (other.mutableUsageTimestampList.count > 0) {
    if (result.mutableUsageTimestampList == nil) {
      result.mutableUsageTimestampList = [NSMutableArray array];
    }
    [result.mutableUsageTimestampList addObjectsFromArray:other.mutableUsageTimestampList];
  }
  if (other.hasProfile) {
    [self mergeProfile:other.profile];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AutofillSpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AutofillSpecifics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setValue:[input readString]];
        break;
      }
      case 24: {
        [self addUsageTimestamp:[input readInt64]];
        break;
      }
      case 34: {
        AutofillProfileSpecifics_Builder* subBuilder = [AutofillProfileSpecifics builder];
        if (self.hasProfile) {
          [subBuilder mergeFrom:self.profile];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setProfile:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (AutofillSpecifics_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (AutofillSpecifics_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasValue {
  return result.hasValue;
}
- (NSString*) value {
  return result.value;
}
- (AutofillSpecifics_Builder*) setValue:(NSString*) value {
  result.hasValue = YES;
  result.value = value;
  return self;
}
- (AutofillSpecifics_Builder*) clearValue {
  result.hasValue = NO;
  result.value = @"";
  return self;
}
- (NSArray*) usageTimestampList {
  if (result.mutableUsageTimestampList == nil) {
    return [NSArray array];
  }
  return result.mutableUsageTimestampList;
}
- (int64_t) usageTimestampAtIndex:(int32_t) index {
  return [result usageTimestampAtIndex:index];
}
- (AutofillSpecifics_Builder*) replaceUsageTimestampAtIndex:(int32_t) index with:(int64_t) value {
  [result.mutableUsageTimestampList replaceObjectAtIndex:index withObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (AutofillSpecifics_Builder*) addUsageTimestamp:(int64_t) value {
  if (result.mutableUsageTimestampList == nil) {
    result.mutableUsageTimestampList = [NSMutableArray array];
  }
  [result.mutableUsageTimestampList addObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (AutofillSpecifics_Builder*) addAllUsageTimestamp:(NSArray*) values {
  if (result.mutableUsageTimestampList == nil) {
    result.mutableUsageTimestampList = [NSMutableArray array];
  }
  [result.mutableUsageTimestampList addObjectsFromArray:values];
  return self;
}
- (AutofillSpecifics_Builder*) clearUsageTimestampList {
  result.mutableUsageTimestampList = nil;
  return self;
}
- (BOOL) hasProfile {
  return result.hasProfile;
}
- (AutofillProfileSpecifics*) profile {
  return result.profile;
}
- (AutofillSpecifics_Builder*) setProfile:(AutofillProfileSpecifics*) value {
  result.hasProfile = YES;
  result.profile = value;
  return self;
}
- (AutofillSpecifics_Builder*) setProfileBuilder:(AutofillProfileSpecifics_Builder*) builderForValue {
  return [self setProfile:[builderForValue build]];
}
- (AutofillSpecifics_Builder*) mergeProfile:(AutofillProfileSpecifics*) value {
  if (result.hasProfile &&
      result.profile != [AutofillProfileSpecifics defaultInstance]) {
    result.profile =
      [[[AutofillProfileSpecifics builderWithPrototype:result.profile] mergeFrom:value] buildPartial];
  } else {
    result.profile = value;
  }
  result.hasProfile = YES;
  return self;
}
- (AutofillSpecifics_Builder*) clearProfile {
  result.hasProfile = NO;
  result.profile = [AutofillProfileSpecifics defaultInstance];
  return self;
}
@end

